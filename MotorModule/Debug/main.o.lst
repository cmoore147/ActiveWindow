   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB139:
  26              	 .file 1 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE139:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB140:
 262:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE140:
 114 0022 00BF     	 .section .text.XMC_GPIO_ToggleOutput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_GPIO_ToggleOutput:
 120              	.LFB141:
 288:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 121              	 .loc 1 309 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 137 0008 0B46     	 mov r3,r1
 138 000a FB70     	 strb r3,[r7,#3]
 310:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 139              	 .loc 1 312 0
 140 000c FB78     	 ldrb r3,[r7,#3]
 141 000e 4FF00112 	 mov r2,#65537
 142 0012 9A40     	 lsls r2,r2,r3
 143 0014 7B68     	 ldr r3,[r7,#4]
 144 0016 5A60     	 str r2,[r3,#4]
 313:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
 145              	 .loc 1 313 0
 146 0018 0C37     	 adds r7,r7,#12
 147              	.LCFI15:
 148              	 .cfi_def_cfa_offset 4
 149 001a BD46     	 mov sp,r7
 150              	.LCFI16:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 001c 5DF8047B 	 ldr r7,[sp],#4
 154              	.LCFI17:
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 0020 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE141:
 161 0022 00BF     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
 162              	 .align 2
 163              	 .thumb
 164              	 .thumb_func
 166              	XMC_GPIO_GetInput:
 167              	.LFB142:
 314:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 168              	 .loc 1 334 0
 169              	 .cfi_startproc
 170              	 
 171              	 
 172              	 
 173 0000 80B4     	 push {r7}
 174              	.LCFI18:
 175              	 .cfi_def_cfa_offset 4
 176              	 .cfi_offset 7,-4
 177 0002 83B0     	 sub sp,sp,#12
 178              	.LCFI19:
 179              	 .cfi_def_cfa_offset 16
 180 0004 00AF     	 add r7,sp,#0
 181              	.LCFI20:
 182              	 .cfi_def_cfa_register 7
 183 0006 7860     	 str r0,[r7,#4]
 184 0008 0B46     	 mov r3,r1
 185 000a FB70     	 strb r3,[r7,#3]
 335:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 186              	 .loc 1 337 0
 187 000c 7B68     	 ldr r3,[r7,#4]
 188 000e 5A6A     	 ldr r2,[r3,#36]
 189 0010 FB78     	 ldrb r3,[r7,#3]
 190 0012 22FA03F3 	 lsr r3,r2,r3
 191 0016 03F00103 	 and r3,r3,#1
 338:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
 192              	 .loc 1 338 0
 193 001a 1846     	 mov r0,r3
 194 001c 0C37     	 adds r7,r7,#12
 195              	.LCFI21:
 196              	 .cfi_def_cfa_offset 4
 197 001e BD46     	 mov sp,r7
 198              	.LCFI22:
 199              	 .cfi_def_cfa_register 13
 200              	 
 201 0020 5DF8047B 	 ldr r7,[sp],#4
 202              	.LCFI23:
 203              	 .cfi_restore 7
 204              	 .cfi_def_cfa_offset 0
 205 0024 7047     	 bx lr
 206              	 .cfi_endproc
 207              	.LFE142:
 209 0026 00BF     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 210              	 .align 2
 211              	 .thumb
 212              	 .thumb_func
 214              	DIGITAL_IO_SetOutputHigh:
 215              	.LFB147:
 216              	 .file 2 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 217              	 .loc 2 269 0
 218              	 .cfi_startproc
 219              	 
 220              	 
 221 0000 80B5     	 push {r7,lr}
 222              	.LCFI24:
 223              	 .cfi_def_cfa_offset 8
 224              	 .cfi_offset 7,-8
 225              	 .cfi_offset 14,-4
 226 0002 82B0     	 sub sp,sp,#8
 227              	.LCFI25:
 228              	 .cfi_def_cfa_offset 16
 229 0004 00AF     	 add r7,sp,#0
 230              	.LCFI26:
 231              	 .cfi_def_cfa_register 7
 232 0006 7860     	 str r0,[r7,#4]
 270:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 233              	 .loc 2 271 0
 234 0008 7B68     	 ldr r3,[r7,#4]
 235 000a 1A68     	 ldr r2,[r3]
 236 000c 7B68     	 ldr r3,[r7,#4]
 237 000e 1B7C     	 ldrb r3,[r3,#16]
 238 0010 1046     	 mov r0,r2
 239 0012 1946     	 mov r1,r3
 240 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 272:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 241              	 .loc 2 272 0
 242 0018 0837     	 adds r7,r7,#8
 243              	.LCFI27:
 244              	 .cfi_def_cfa_offset 8
 245 001a BD46     	 mov sp,r7
 246              	.LCFI28:
 247              	 .cfi_def_cfa_register 13
 248              	 
 249 001c 80BD     	 pop {r7,pc}
 250              	 .cfi_endproc
 251              	.LFE147:
 253 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 254              	 .align 2
 255              	 .thumb
 256              	 .thumb_func
 258              	DIGITAL_IO_SetOutputLow:
 259              	.LFB148:
 273:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 260              	 .loc 2 316 0
 261              	 .cfi_startproc
 262              	 
 263              	 
 264 0000 80B5     	 push {r7,lr}
 265              	.LCFI29:
 266              	 .cfi_def_cfa_offset 8
 267              	 .cfi_offset 7,-8
 268              	 .cfi_offset 14,-4
 269 0002 82B0     	 sub sp,sp,#8
 270              	.LCFI30:
 271              	 .cfi_def_cfa_offset 16
 272 0004 00AF     	 add r7,sp,#0
 273              	.LCFI31:
 274              	 .cfi_def_cfa_register 7
 275 0006 7860     	 str r0,[r7,#4]
 317:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 276              	 .loc 2 318 0
 277 0008 7B68     	 ldr r3,[r7,#4]
 278 000a 1A68     	 ldr r2,[r3]
 279 000c 7B68     	 ldr r3,[r7,#4]
 280 000e 1B7C     	 ldrb r3,[r3,#16]
 281 0010 1046     	 mov r0,r2
 282 0012 1946     	 mov r1,r3
 283 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 319:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 284              	 .loc 2 319 0
 285 0018 0837     	 adds r7,r7,#8
 286              	.LCFI32:
 287              	 .cfi_def_cfa_offset 8
 288 001a BD46     	 mov sp,r7
 289              	.LCFI33:
 290              	 .cfi_def_cfa_register 13
 291              	 
 292 001c 80BD     	 pop {r7,pc}
 293              	 .cfi_endproc
 294              	.LFE148:
 296 001e 00BF     	 .section .text.DIGITAL_IO_ToggleOutput,"ax",%progbits
 297              	 .align 2
 298              	 .thumb
 299              	 .thumb_func
 301              	DIGITAL_IO_ToggleOutput:
 302              	.LFB149:
 320:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 321:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 322:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 323:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 324:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 325:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 326:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 327:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 328:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 329:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 330:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 331:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 332:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 333:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 334:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 335:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 336:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 337:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 338:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 339:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 340:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 341:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 342:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 343:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 344:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 345:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 346:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 347:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 348:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 349:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 350:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 351:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 352:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 353:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 354:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 355:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 356:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 357:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 358:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 359:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 360:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 361:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 363:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 364:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 365:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 366:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 367:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 368:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 303              	 .loc 2 368 0
 304              	 .cfi_startproc
 305              	 
 306              	 
 307 0000 80B5     	 push {r7,lr}
 308              	.LCFI34:
 309              	 .cfi_def_cfa_offset 8
 310              	 .cfi_offset 7,-8
 311              	 .cfi_offset 14,-4
 312 0002 82B0     	 sub sp,sp,#8
 313              	.LCFI35:
 314              	 .cfi_def_cfa_offset 16
 315 0004 00AF     	 add r7,sp,#0
 316              	.LCFI36:
 317              	 .cfi_def_cfa_register 7
 318 0006 7860     	 str r0,[r7,#4]
 369:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 370:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 319              	 .loc 2 370 0
 320 0008 7B68     	 ldr r3,[r7,#4]
 321 000a 1A68     	 ldr r2,[r3]
 322 000c 7B68     	 ldr r3,[r7,#4]
 323 000e 1B7C     	 ldrb r3,[r3,#16]
 324 0010 1046     	 mov r0,r2
 325 0012 1946     	 mov r1,r3
 326 0014 FFF7FEFF 	 bl XMC_GPIO_ToggleOutput
 371:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 327              	 .loc 2 371 0
 328 0018 0837     	 adds r7,r7,#8
 329              	.LCFI37:
 330              	 .cfi_def_cfa_offset 8
 331 001a BD46     	 mov sp,r7
 332              	.LCFI38:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 001c 80BD     	 pop {r7,pc}
 336              	 .cfi_endproc
 337              	.LFE149:
 339 001e 00BF     	 .section .text.DIGITAL_IO_GetInput,"ax",%progbits
 340              	 .align 2
 341              	 .thumb
 342              	 .thumb_func
 344              	DIGITAL_IO_GetInput:
 345              	.LFB150:
 372:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 373:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 374:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to read input level of port pin.
 375:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 376:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return uint32_t input logic level. Range:0-1
 377:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 378:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 379:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 380:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 381:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 382:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  None
 383:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 384:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 385:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 386:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 387:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 388:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 389:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 390:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t pin_status;
 391:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_
 392:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 393:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 394:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 395:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 396:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 397:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 398:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 399:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 400:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 401:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 402:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 403:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 404:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 405:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 406:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     pin_status = DIGITAL_IO_GetInput(&DIGITAL_IO_0);
 407:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if(pin_status == 1)
 408:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 409:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 410:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 411:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     else
 412:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 413:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 414:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 415:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 416:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 417:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 418:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 419:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 420:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 421:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE uint32_t DIGITAL_IO_GetInput(const DIGITAL_IO_t *const handler)
 422:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 346              	 .loc 2 422 0
 347              	 .cfi_startproc
 348              	 
 349              	 
 350 0000 80B5     	 push {r7,lr}
 351              	.LCFI39:
 352              	 .cfi_def_cfa_offset 8
 353              	 .cfi_offset 7,-8
 354              	 .cfi_offset 14,-4
 355 0002 82B0     	 sub sp,sp,#8
 356              	.LCFI40:
 357              	 .cfi_def_cfa_offset 16
 358 0004 00AF     	 add r7,sp,#0
 359              	.LCFI41:
 360              	 .cfi_def_cfa_register 7
 361 0006 7860     	 str r0,[r7,#4]
 423:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_GetInput: handler null pointer", handler != NULL);
 424:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   return XMC_GPIO_GetInput(handler->gpio_port, handler->gpio_pin);
 362              	 .loc 2 424 0
 363 0008 7B68     	 ldr r3,[r7,#4]
 364 000a 1A68     	 ldr r2,[r3]
 365 000c 7B68     	 ldr r3,[r7,#4]
 366 000e 1B7C     	 ldrb r3,[r3,#16]
 367 0010 1046     	 mov r0,r2
 368 0012 1946     	 mov r1,r3
 369 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 370 0018 0346     	 mov r3,r0
 425:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 371              	 .loc 2 425 0
 372 001a 1846     	 mov r0,r3
 373 001c 0837     	 adds r7,r7,#8
 374              	.LCFI42:
 375              	 .cfi_def_cfa_offset 8
 376 001e BD46     	 mov sp,r7
 377              	.LCFI43:
 378              	 .cfi_def_cfa_register 13
 379              	 
 380 0020 80BD     	 pop {r7,pc}
 381              	 .cfi_endproc
 382              	.LFE150:
 384              	 .global top_button_state
 385 0022 00BF     	 .section .data.top_button_state,"aw",%progbits
 386              	 .align 2
 389              	top_button_state:
 390 0000 01000000 	 .word 1
 391              	 .global bottom_button_state
 392              	 .section .data.bottom_button_state,"aw",%progbits
 393              	 .align 2
 396              	bottom_button_state:
 397 0000 01000000 	 .word 1
 398              	 .global MOTOR_MODULE_ID
 399              	 .section .data.MOTOR_MODULE_ID,"aw",%progbits
 400              	 .align 2
 403              	MOTOR_MODULE_ID:
 404 0000 98020000 	 .word 664
 405              	 .global isRegistered
 406              	 .section .bss.isRegistered,"aw",%nobits
 407              	 .align 2
 410              	isRegistered:
 411 0000 00000000 	 .space 4
 412              	 .global closedToOpenTime
 413              	 .section .bss.closedToOpenTime,"aw",%nobits
 414              	 .align 2
 417              	closedToOpenTime:
 418 0000 00000000 	 .space 4
 419              	 .global time
 420              	 .section .bss.time,"aw",%nobits
 421              	 .align 2
 424              	time:
 425 0000 00000000 	 .space 4
 426              	 .comm WindowState,4,4
 427              	 .comm stateTimingVariables,44,4
 428              	 .section .text.CAN0_1_IRQHandler,"ax",%progbits
 429              	 .align 2
 430              	 .global CAN0_1_IRQHandler
 431              	 .thumb
 432              	 .thumb_func
 434              	CAN0_1_IRQHandler:
 435              	.LFB305:
 436              	 .file 3 "../main.c"
   1:../main.c     **** ///*******************************************************************************
   2:../main.c     **** // Copyright (c) 2015, Infineon Technologies AG                                 **
   3:../main.c     **** // All rights reserved.                                                         **
   4:../main.c     **** //                                                                              **
   5:../main.c     **** // Redistribution and use in source and binary forms, with or without           **
   6:../main.c     **** // modification,are permitted provided that the following conditions are met:   **
   7:../main.c     **** //                                                                              **
   8:../main.c     **** // *Redistributions of source code must retain the above copyright notice,      **
   9:../main.c     **** // this list of conditions and the following disclaimer.                        **
  10:../main.c     **** // *Redistributions in binary form must reproduce the above copyright notice,   **
  11:../main.c     **** // this list of conditions and the following disclaimer in the documentation    **
  12:../main.c     **** // and/or other materials provided with the distribution.                       **
  13:../main.c     **** // *Neither the name of the copyright holders nor the names of its contributors **
  14:../main.c     **** // may be used to endorse or promote products derived from this software without**
  15:../main.c     **** // specific prior written permission.                                           **
  16:../main.c     **** //                                                                              **
  17:../main.c     **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  18:../main.c     **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  19:../main.c     **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  20:../main.c     **** // ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  21:../main.c     **** // LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  22:../main.c     **** // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  23:../main.c     **** // SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  24:../main.c     **** // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  25:../main.c     **** // CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  26:../main.c     **** // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  27:../main.c     **** // POSSIBILITY OF SUCH DAMAGE.                                                  **
  28:../main.c     **** //                                                                              **
  29:../main.c     **** // To improve the quality of the software, users are encouraged to share        **
  30:../main.c     **** // modifications, enhancements or bug fixes with Infineon Technologies AG       **
  31:../main.c     **** // dave@infineon.com).                                                          **
  32:../main.c     **** //                                                                              **
  33:../main.c     **** //********************************************************************************
  34:../main.c     **** //**                                                                            **
  35:../main.c     **** //**                                                                            **
  36:../main.c     **** //** PLATFORM : Infineon XMC4500 Series                                         **
  37:../main.c     **** //**                                                                            **
  38:../main.c     **** //** AUTHOR : Application Engineering Team                                      **
  39:../main.c     **** //**                                                                            **
  40:../main.c     **** //** version 4.0.0  Initial version                                             **
  41:../main.c     **** //**         4.1.2  Modified for APP updates                                    **
  42:../main.c     **** //**         4.1.4  Modified for APP updates									  **
  43:../main.c     **** //**                                                                            **
  44:../main.c     **** //** MODIFICATION DATE : OCT, 30, 2015                                          **
  45:../main.c     **** //**                                                                            **
  46:../main.c     **** //*******************************************************************************/
  47:../main.c     **** //
  48:../main.c     **** //#include <DAVE.h>			//Declarations from DAVE Code Generation (includes SFR declaration)
  49:../main.c     **** //
  50:../main.c     **** ///*
  51:../main.c     **** // * This Example shows transmission and reception of data frames
  52:../main.c     **** // * between two CAN nodes of the MultiCAN peripheral in Loop-Back Mode.
  53:../main.c     **** // */
  54:../main.c     **** //
  55:../main.c     **** //
  56:../main.c     **** //uint32_t led_state = 0;
  57:../main.c     **** //uint32_t button_state = 1;
  58:../main.c     **** //
  59:../main.c     **** //void React_Node_Handler() {
  60:../main.c     **** //	/* Check for Node error */
  61:../main.c     **** //	if(CAN_NODE_GetStatus(&React_Node) & XMC_CAN_NODE_STATUS_LAST_ERROR_CODE)
  62:../main.c     **** //	{}
  63:../main.c     **** //	else if(CAN_NODE_MO_GetStatus(&React_Node_LMO_01_Config) & XMC_CAN_MO_STATUS_RX_PENDING)
  64:../main.c     **** //	{
  65:../main.c     **** //		/* Read the received Message object and stores in Request_Node_LMO_02_Config*/
  66:../main.c     **** //
  67:../main.c     **** //		CAN_NODE_MO_Receive(&React_Node_LMO_01_Config);
  68:../main.c     **** //
  69:../main.c     **** //		if (React_Node_LMO_01_Config.mo_ptr->can_data_byte[0] == 0x01) { // Turn on LED
  70:../main.c     **** //			DIGITAL_IO_SetOutputHigh(&LED_Indicator);
  71:../main.c     **** //		}
  72:../main.c     **** //		else { // Turn off LED
  73:../main.c     **** //			DIGITAL_IO_SetOutputLow(&LED_Indicator);
  74:../main.c     **** //		}
  75:../main.c     **** //
  76:../main.c     **** //	 /* Switch on LED Pin 3.9  to indicate that the requested message is received*/
  77:../main.c     **** //	 //DIGITAL_IO_ToggleOutput(&LED_Indicator);
  78:../main.c     **** //	}
  79:../main.c     **** //
  80:../main.c     **** //}
  81:../main.c     **** //
  82:../main.c     **** ////void Send_CAN_React() {
  83:../main.c     **** ////
  84:../main.c     **** ////}
  85:../main.c     **** //
  86:../main.c     **** //void Read_Button() {
  87:../main.c     **** //	// check if state has changed
  88:../main.c     **** //	if (button_state != DIGITAL_IO_GetInput(&BoardButton)) {
  89:../main.c     **** //		button_state = DIGITAL_IO_GetInput(&BoardButton);
  90:../main.c     **** //
  91:../main.c     **** //		if (button_state == 0) { // send message to turn led on
  92:../main.c     **** //			React_Node_LMO_02_Config.mo_ptr->can_data_byte[0] = 0x01;
  93:../main.c     **** //		} else { // send message to turn led off
  94:../main.c     **** //			React_Node_LMO_02_Config.mo_ptr->can_data_byte[0] = 0x00;
  95:../main.c     **** //		}
  96:../main.c     **** //
  97:../main.c     **** //		uint32_t status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
  98:../main.c     **** //		status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
  99:../main.c     **** //	}
 100:../main.c     **** //}
 101:../main.c     **** //
 102:../main.c     **** //int main(void)
 103:../main.c     **** //{
 104:../main.c     **** //
 105:../main.c     **** //  DAVE_Init();		/* Initialization of DAVE APPs  */
 106:../main.c     **** //
 107:../main.c     **** //  uint32_t TimerId = (uint32_t)SYSTIMER_CreateTimer(100000U,SYSTIMER_MODE_PERIODIC,(void*)Read_Bu
 108:../main.c     **** //  SYSTIMER_StartTimer(TimerId);
 109:../main.c     **** //
 110:../main.c     **** //  //CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 111:../main.c     **** //
 112:../main.c     **** //  while(1U);
 113:../main.c     **** //  return 0;
 114:../main.c     **** //}
 115:../main.c     **** //
 116:../main.c     **** /////*
 117:../main.c     **** //// * This function is the Interrupt Event Handler for the CAN Node Request
 118:../main.c     **** //// *
 119:../main.c     **** //// */
 120:../main.c     **** ////void Request_Node_Interrupt()
 121:../main.c     **** ////{
 122:../main.c     **** ////  /* Check for Node error */
 123:../main.c     **** ////  if(CAN_NODE_GetStatus(&Request_Node) & XMC_CAN_NODE_STATUS_LAST_ERROR_CODE)
 124:../main.c     **** ////  {}
 125:../main.c     **** ////  else if(CAN_NODE_MO_GetStatus(&Request_Node_LMO_02_Config) & XMC_CAN_MO_STATUS_RX_PENDING)
 126:../main.c     **** ////  {
 127:../main.c     **** ////     /* Read the received Message object and stores in Request_Node_LMO_02_Config*/
 128:../main.c     **** ////
 129:../main.c     **** ////	  CAN_NODE_MO_Receive(&Request_Node_LMO_02_Config);
 130:../main.c     **** ////
 131:../main.c     **** ////	  if (Request_Node_LMO_02_Config.mo_ptr->can_data_byte[0] == 0x01) { // Turn on LED
 132:../main.c     **** ////		  DIGITAL_IO_SetOutputHigh(&LED_Indicator);
 133:../main.c     **** ////	  }
 134:../main.c     **** ////	  else { // Turn off LED
 135:../main.c     **** ////		  DIGITAL_IO_SetOutputLow(&LED_Indicator);
 136:../main.c     **** ////	  }
 137:../main.c     **** ////
 138:../main.c     **** ////     /* Switch on LED Pin 3.9  to indicate that the requested message is received*/
 139:../main.c     **** ////     //DIGITAL_IO_ToggleOutput(&LED_Indicator);
 140:../main.c     **** ////  }
 141:../main.c     **** ////
 142:../main.c     **** ////}
 143:../main.c     **** ////
 144:../main.c     **** ///////*
 145:../main.c     **** //// * This function is the Interrupt Event Handler for the CAN Node React
 146:../main.c     **** //// */
 147:../main.c     **** 
 148:../main.c     **** /*******************************************************************************
 149:../main.c     ****  Copyright (c) 2015, Infineon Technologies AG                                 **
 150:../main.c     ****  All rights reserved.                                                         **
 151:../main.c     ****                                                                               **
 152:../main.c     ****  Redistribution and use in source and binary forms, with or without           **
 153:../main.c     ****  modification,are permitted provided that the following conditions are met:   **
 154:../main.c     ****                                                                               **
 155:../main.c     ****  *Redistributions of source code must retain the above copyright notice,      **
 156:../main.c     ****  this list of conditions and the following disclaimer.                        **
 157:../main.c     ****  *Redistributions in binary form must reproduce the above copyright notice,   **
 158:../main.c     ****  this list of conditions and the following disclaimer in the documentation    **
 159:../main.c     ****  and/or other materials provided with the distribution.                       **
 160:../main.c     ****  *Neither the name of the copyright holders nor the names of its contributors **
 161:../main.c     ****  may be used to endorse or promote products derived from this software without**
 162:../main.c     ****  specific prior written permission.                                           **
 163:../main.c     ****                                                                               **
 164:../main.c     ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
 165:../main.c     ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
 166:../main.c     ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
 167:../main.c     ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
 168:../main.c     ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
 169:../main.c     ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
 170:../main.c     ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
 171:../main.c     ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
 172:../main.c     ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
 173:../main.c     ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
 174:../main.c     ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
 175:../main.c     ****                                                                               **
 176:../main.c     ****  To improve the quality of the software, users are encouraged to share        **
 177:../main.c     ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
 178:../main.c     ****  dave@infineon.com).                                                          **
 179:../main.c     ****                                                                               **
 180:../main.c     **** ********************************************************************************
 181:../main.c     **** **                                                                            **
 182:../main.c     **** **                                                                            **
 183:../main.c     **** ** PLATFORM : Infineon XMC4500 Series                                         **
 184:../main.c     **** **                                                                            **
 185:../main.c     **** ** AUTHOR : Application Engineering Team                                      **
 186:../main.c     **** **                                                                            **
 187:../main.c     **** ** version 4.0.0  Initial version                                             **
 188:../main.c     **** **         4.1.2  Modified for APP updates                                    **
 189:../main.c     **** **         4.1.4  Modified for APP updates									  **
 190:../main.c     **** **                                                                            **
 191:../main.c     **** ** MODIFICATION DATE : OCT, 30, 2015                                          **
 192:../main.c     **** **                                                                            **
 193:../main.c     **** *******************************************************************************/
 194:../main.c     **** 
 195:../main.c     **** #include <DAVE.h>			//Declarations from DAVE Code Generation (includes SFR declaration)
 196:../main.c     **** #include <stdio.h>
 197:../main.c     **** 
 198:../main.c     **** // Globals
 199:../main.c     **** uint32_t top_button_state = 1;
 200:../main.c     **** uint32_t bottom_button_state = 1;
 201:../main.c     **** int MOTOR_MODULE_ID = 664;	//ID of this motor module device
 202:../main.c     **** int isRegistered = 0;		//Initially 0, will be 1 once registered with NMC
 203:../main.c     **** int closedToOpenTime = 0;	//Initially 0, will be set by homing routine
 204:../main.c     **** 
 205:../main.c     **** //Time Variable
 206:../main.c     **** int time = 0;
 207:../main.c     **** 
 208:../main.c     **** //State Variables
 209:../main.c     **** int WindowState;			//Current state of window (0 = closed, 10 = fully open)
 210:../main.c     **** int stateTimingVariables[11];	//Contains variables for time to take to move to certain location
 211:../main.c     **** 
 212:../main.c     **** // Function Prototypes
 213:../main.c     **** //void initialise_monitor_handles();
 214:../main.c     **** void RegisterDevice();
 215:../main.c     **** int HomeWindow();
 216:../main.c     **** int MoveWindow(int percentage);
 217:../main.c     **** int CheckTopLimitSwitch();
 218:../main.c     **** int CheckBottomLimitSwitch();
 219:../main.c     **** void ManualOverrideSwitches();
 220:../main.c     **** 
 221:../main.c     **** void React_Node_Handler() {
 437              	 .loc 3 221 0
 438              	 .cfi_startproc
 439              	 
 440              	 
 441 0000 80B5     	 push {r7,lr}
 442              	.LCFI44:
 443              	 .cfi_def_cfa_offset 8
 444              	 .cfi_offset 7,-8
 445              	 .cfi_offset 14,-4
 446 0002 86B0     	 sub sp,sp,#24
 447              	.LCFI45:
 448              	 .cfi_def_cfa_offset 32
 449 0004 00AF     	 add r7,sp,#0
 450              	.LCFI46:
 451              	 .cfi_def_cfa_register 7
 222:../main.c     **** 	/* Check for Node error */
 223:../main.c     **** 	uint32_t status;
 224:../main.c     **** 	if(CAN_NODE_GetStatus(&React_Node) & XMC_CAN_NODE_STATUS_LAST_ERROR_CODE)
 452              	 .loc 3 224 0
 453 0006 5448     	 ldr r0,.L17
 454 0008 FFF7FEFF 	 bl CAN_NODE_GetStatus
 455 000c 0346     	 mov r3,r0
 456 000e 03F00703 	 and r3,r3,#7
 457 0012 002B     	 cmp r3,#0
 458 0014 40F09D80 	 bne .L11
 225:../main.c     **** 	{}
 226:../main.c     **** 	else if(CAN_NODE_MO_GetStatus(&React_Node_LMO_01_Config) & XMC_CAN_MO_STATUS_RX_PENDING)
 459              	 .loc 3 226 0
 460 0018 5048     	 ldr r0,.L17+4
 461 001a FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 462 001e 0346     	 mov r3,r0
 463 0020 03F00103 	 and r3,r3,#1
 464 0024 002B     	 cmp r3,#0
 465 0026 00F09480 	 beq .L11
 466              	.LBB2:
 227:../main.c     **** 	{
 228:../main.c     **** 		/* Read the received Message object and stores in Request_Node_LMO_02_Config*/
 229:../main.c     **** 		CAN_NODE_MO_Receive(&React_Node_LMO_01_Config);
 467              	 .loc 3 229 0
 468 002a 4C48     	 ldr r0,.L17+4
 469 002c FFF7FEFF 	 bl CAN_NODE_MO_Receive
 230:../main.c     **** 		int requestedID = React_Node_LMO_01_Config.mo_ptr->can_data_word[0];	//grab 0th byte
 470              	 .loc 3 230 0
 471 0030 4A4B     	 ldr r3,.L17+4
 472 0032 1B68     	 ldr r3,[r3]
 473 0034 1B8A     	 ldrh r3,[r3,#16]
 474 0036 7B61     	 str r3,[r7,#20]
 231:../main.c     **** 
 232:../main.c     **** 		if(requestedID == MOTOR_MODULE_ID)		//Check if ID requested is equal to this motor module
 475              	 .loc 3 232 0
 476 0038 494B     	 ldr r3,.L17+8
 477 003a 1B68     	 ldr r3,[r3]
 478 003c 7A69     	 ldr r2,[r7,#20]
 479 003e 9A42     	 cmp r2,r3
 480 0040 40F08780 	 bne .L11
 481              	.LBB3:
 233:../main.c     **** 		{
 234:../main.c     **** 			int requestedCommand = React_Node_LMO_01_Config.mo_ptr->can_data_word[1];	//grab 1st byte
 482              	 .loc 3 234 0
 483 0044 454B     	 ldr r3,.L17+4
 484 0046 1B68     	 ldr r3,[r3]
 485 0048 5B8A     	 ldrh r3,[r3,#18]
 486 004a 3B61     	 str r3,[r7,#16]
 235:../main.c     **** 			DIGITAL_IO_ToggleOutput(&LED_Indicator);
 487              	 .loc 3 235 0
 488 004c 4548     	 ldr r0,.L17+12
 489 004e FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 236:../main.c     **** 			if(requestedCommand == 752)		//operate window
 490              	 .loc 3 236 0
 491 0052 3B69     	 ldr r3,[r7,#16]
 492 0054 B3F53C7F 	 cmp r3,#752
 493 0058 4ED1     	 bne .L13
 494              	.LBB4:
 237:../main.c     **** 			{
 238:../main.c     **** 				int requestedPercentage = React_Node_LMO_01_Config.mo_ptr->can_data_word[2];	//grab 2nd byte
 495              	 .loc 3 238 0
 496 005a 404B     	 ldr r3,.L17+4
 497 005c 1B68     	 ldr r3,[r3]
 498 005e 9B8A     	 ldrh r3,[r3,#20]
 499 0060 FB60     	 str r3,[r7,#12]
 239:../main.c     **** 				requestedPercentage = (requestedPercentage / 10);
 500              	 .loc 3 239 0
 501 0062 FB68     	 ldr r3,[r7,#12]
 502 0064 404A     	 ldr r2,.L17+16
 503 0066 82FB0312 	 smull r1,r2,r2,r3
 504 006a 9210     	 asrs r2,r2,#2
 505 006c DB17     	 asrs r3,r3,#31
 506 006e D31A     	 subs r3,r2,r3
 507 0070 FB60     	 str r3,[r7,#12]
 240:../main.c     **** 				int windowMovementStatus = MoveWindow(requestedPercentage);
 508              	 .loc 3 240 0
 509 0072 F868     	 ldr r0,[r7,#12]
 510 0074 FFF7FEFF 	 bl MoveWindow
 511 0078 B860     	 str r0,[r7,#8]
 241:../main.c     **** 				if(windowMovementStatus == 0)		//Failed Command, either something weird happened or MOS is doin
 512              	 .loc 3 241 0
 513 007a BB68     	 ldr r3,[r7,#8]
 514 007c 002B     	 cmp r3,#0
 515 007e 1AD1     	 bne .L14
 242:../main.c     **** 				{
 243:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 516              	 .loc 3 243 0
 517 0080 3A4B     	 ldr r3,.L17+20
 518 0082 1B68     	 ldr r3,[r3]
 519 0084 364A     	 ldr r2,.L17+8
 520 0086 1268     	 ldr r2,[r2]
 521 0088 92B2     	 uxth r2,r2
 522 008a 1A82     	 strh r2,[r3,#16]
 244:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x02;
 523              	 .loc 3 244 0
 524 008c 374B     	 ldr r3,.L17+20
 525 008e 1B68     	 ldr r3,[r3]
 526 0090 0222     	 movs r2,#2
 527 0092 5A82     	 strh r2,[r3,#18]
 245:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = 1;	//Failed Command
 528              	 .loc 3 245 0
 529 0094 354B     	 ldr r3,.L17+20
 530 0096 1B68     	 ldr r3,[r3]
 531 0098 0122     	 movs r2,#1
 532 009a 9A82     	 strh r2,[r3,#20]
 246:../main.c     **** 					status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 533              	 .loc 3 246 0
 534 009c 334B     	 ldr r3,.L17+20
 535 009e 1B68     	 ldr r3,[r3]
 536 00a0 1846     	 mov r0,r3
 537 00a2 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 538 00a6 0346     	 mov r3,r0
 539 00a8 7B60     	 str r3,[r7,#4]
 247:../main.c     **** 					status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 540              	 .loc 3 247 0
 541 00aa 3048     	 ldr r0,.L17+20
 542 00ac FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 543 00b0 0346     	 mov r3,r0
 544 00b2 7B60     	 str r3,[r7,#4]
 545 00b4 1FE0     	 b .L15
 546              	.L14:
 248:../main.c     **** 				}
 249:../main.c     **** 				else if(windowMovementStatus == 1)	//Successful Command :)
 547              	 .loc 3 249 0
 548 00b6 BB68     	 ldr r3,[r7,#8]
 549 00b8 012B     	 cmp r3,#1
 550 00ba 1CD1     	 bne .L15
 250:../main.c     **** 				{
 251:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 551              	 .loc 3 251 0
 552 00bc 2B4B     	 ldr r3,.L17+20
 553 00be 1B68     	 ldr r3,[r3]
 554 00c0 274A     	 ldr r2,.L17+8
 555 00c2 1268     	 ldr r2,[r2]
 556 00c4 92B2     	 uxth r2,r2
 557 00c6 1A82     	 strh r2,[r3,#16]
 252:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x04;
 558              	 .loc 3 252 0
 559 00c8 284B     	 ldr r3,.L17+20
 560 00ca 1B68     	 ldr r3,[r3]
 561 00cc 0422     	 movs r2,#4
 562 00ce 5A82     	 strh r2,[r3,#18]
 253:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = WindowState;	//Successful Command
 563              	 .loc 3 253 0
 564 00d0 264B     	 ldr r3,.L17+20
 565 00d2 1B68     	 ldr r3,[r3]
 566 00d4 264A     	 ldr r2,.L17+24
 567 00d6 1268     	 ldr r2,[r2]
 568 00d8 92B2     	 uxth r2,r2
 569 00da 9A82     	 strh r2,[r3,#20]
 254:../main.c     **** 					status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 570              	 .loc 3 254 0
 571 00dc 234B     	 ldr r3,.L17+20
 572 00de 1B68     	 ldr r3,[r3]
 573 00e0 1846     	 mov r0,r3
 574 00e2 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 575 00e6 0346     	 mov r3,r0
 576 00e8 7B60     	 str r3,[r7,#4]
 255:../main.c     **** 					status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 577              	 .loc 3 255 0
 578 00ea 2048     	 ldr r0,.L17+20
 579 00ec FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 580 00f0 0346     	 mov r3,r0
 581 00f2 7B60     	 str r3,[r7,#4]
 582              	.LBE4:
 583 00f4 2DE0     	 b .L11
 584              	.L15:
 585 00f6 2CE0     	 b .L11
 586              	.L13:
 256:../main.c     **** 				}
 257:../main.c     **** 			}
 258:../main.c     **** 			else if(requestedCommand == 0x02)	//Acknowledgment to our registration
 587              	 .loc 3 258 0
 588 00f8 3B69     	 ldr r3,[r7,#16]
 589 00fa 022B     	 cmp r3,#2
 590 00fc 03D1     	 bne .L16
 259:../main.c     **** 			{
 260:../main.c     **** 				isRegistered = 1;
 591              	 .loc 3 260 0
 592 00fe 1D4B     	 ldr r3,.L17+28
 593 0100 0122     	 movs r2,#1
 594 0102 1A60     	 str r2,[r3]
 595 0104 25E0     	 b .L11
 596              	.L16:
 261:../main.c     **** 			}
 262:../main.c     **** 			else if(requestedCommand == 996)	//state request
 597              	 .loc 3 262 0
 598 0106 3B69     	 ldr r3,[r7,#16]
 599 0108 B3F5797F 	 cmp r3,#996
 600 010c 21D1     	 bne .L11
 601              	.LBB5:
 263:../main.c     **** 			{
 264:../main.c     **** 				int WindowStatePercentage = (WindowState * 10);
 602              	 .loc 3 264 0
 603 010e 184B     	 ldr r3,.L17+24
 604 0110 1A68     	 ldr r2,[r3]
 605 0112 1346     	 mov r3,r2
 606 0114 9B00     	 lsls r3,r3,#2
 607 0116 1344     	 add r3,r3,r2
 608 0118 5B00     	 lsls r3,r3,#1
 609 011a 3B60     	 str r3,[r7]
 265:../main.c     **** 
 266:../main.c     **** 				React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 610              	 .loc 3 266 0
 611 011c 134B     	 ldr r3,.L17+20
 612 011e 1B68     	 ldr r3,[r3]
 613 0120 0F4A     	 ldr r2,.L17+8
 614 0122 1268     	 ldr r2,[r2]
 615 0124 92B2     	 uxth r2,r2
 616 0126 1A82     	 strh r2,[r3,#16]
 267:../main.c     **** 				React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x04;	//Status update
 617              	 .loc 3 267 0
 618 0128 104B     	 ldr r3,.L17+20
 619 012a 1B68     	 ldr r3,[r3]
 620 012c 0422     	 movs r2,#4
 621 012e 5A82     	 strh r2,[r3,#18]
 268:../main.c     **** 				React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = WindowStatePercentage;
 622              	 .loc 3 268 0
 623 0130 0E4B     	 ldr r3,.L17+20
 624 0132 1B68     	 ldr r3,[r3]
 625 0134 3A68     	 ldr r2,[r7]
 626 0136 92B2     	 uxth r2,r2
 627 0138 9A82     	 strh r2,[r3,#20]
 269:../main.c     **** 				status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 628              	 .loc 3 269 0
 629 013a 0C4B     	 ldr r3,.L17+20
 630 013c 1B68     	 ldr r3,[r3]
 631 013e 1846     	 mov r0,r3
 632 0140 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 633 0144 0346     	 mov r3,r0
 634 0146 7B60     	 str r3,[r7,#4]
 270:../main.c     **** 				status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 635              	 .loc 3 270 0
 636 0148 0848     	 ldr r0,.L17+20
 637 014a FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 638 014e 0346     	 mov r3,r0
 639 0150 7B60     	 str r3,[r7,#4]
 640              	.L11:
 641              	.LBE5:
 642              	.LBE3:
 643              	.LBE2:
 271:../main.c     **** 			}
 272:../main.c     **** 		}
 273:../main.c     **** 	}
 274:../main.c     **** }
 644              	 .loc 3 274 0
 645 0152 1837     	 adds r7,r7,#24
 646              	.LCFI47:
 647              	 .cfi_def_cfa_offset 8
 648 0154 BD46     	 mov sp,r7
 649              	.LCFI48:
 650              	 .cfi_def_cfa_register 13
 651              	 
 652 0156 80BD     	 pop {r7,pc}
 653              	.L18:
 654              	 .align 2
 655              	.L17:
 656 0158 00000000 	 .word React_Node
 657 015c 00000000 	 .word React_Node_LMO_01_Config
 658 0160 00000000 	 .word MOTOR_MODULE_ID
 659 0164 00000000 	 .word LED_Indicator
 660 0168 67666666 	 .word 1717986919
 661 016c 00000000 	 .word React_Node_LMO_02_Config
 662 0170 00000000 	 .word WindowState
 663 0174 00000000 	 .word isRegistered
 664              	 .cfi_endproc
 665              	.LFE305:
 667              	 .section .text.CCU41_1_IRQHandler,"ax",%progbits
 668              	 .align 2
 669              	 .global CCU41_1_IRQHandler
 670              	 .thumb
 671              	 .thumb_func
 673              	CCU41_1_IRQHandler:
 674              	.LFB306:
 275:../main.c     **** 
 276:../main.c     **** void TimerHandler()
 277:../main.c     **** {
 675              	 .loc 3 277 0
 676              	 .cfi_startproc
 677              	 
 678              	 
 679              	 
 680 0000 80B4     	 push {r7}
 681              	.LCFI49:
 682              	 .cfi_def_cfa_offset 4
 683              	 .cfi_offset 7,-4
 684 0002 00AF     	 add r7,sp,#0
 685              	.LCFI50:
 686              	 .cfi_def_cfa_register 7
 278:../main.c     **** 	time++;
 687              	 .loc 3 278 0
 688 0004 044B     	 ldr r3,.L20
 689 0006 1B68     	 ldr r3,[r3]
 690 0008 0133     	 adds r3,r3,#1
 691 000a 034A     	 ldr r2,.L20
 692 000c 1360     	 str r3,[r2]
 279:../main.c     **** }
 693              	 .loc 3 279 0
 694 000e BD46     	 mov sp,r7
 695              	.LCFI51:
 696              	 .cfi_def_cfa_register 13
 697              	 
 698 0010 5DF8047B 	 ldr r7,[sp],#4
 699              	.LCFI52:
 700              	 .cfi_restore 7
 701              	 .cfi_def_cfa_offset 0
 702 0014 7047     	 bx lr
 703              	.L21:
 704 0016 00BF     	 .align 2
 705              	.L20:
 706 0018 00000000 	 .word time
 707              	 .cfi_endproc
 708              	.LFE306:
 710              	 .section .text.main,"ax",%progbits
 711              	 .align 2
 712              	 .global main
 713              	 .thumb
 714              	 .thumb_func
 716              	main:
 717              	.LFB307:
 280:../main.c     **** 
 281:../main.c     **** int main(void)
 282:../main.c     **** {
 718              	 .loc 3 282 0
 719              	 .cfi_startproc
 720              	 
 721              	 
 722 0000 80B5     	 push {r7,lr}
 723              	.LCFI53:
 724              	 .cfi_def_cfa_offset 8
 725              	 .cfi_offset 7,-8
 726              	 .cfi_offset 14,-4
 727 0002 00AF     	 add r7,sp,#0
 728              	.LCFI54:
 729              	 .cfi_def_cfa_register 7
 283:../main.c     **** 
 284:../main.c     ****   DAVE_Init();		/* Initialization of DAVE APPs  */
 730              	 .loc 3 284 0
 731 0004 FFF7FEFF 	 bl DAVE_Init
 285:../main.c     **** 
 286:../main.c     ****   // Startup functions
 287:../main.c     ****   RegisterDevice();
 732              	 .loc 3 287 0
 733 0008 FFF7FEFF 	 bl RegisterDevice
 288:../main.c     ****   HomeWindow();
 734              	 .loc 3 288 0
 735 000c FFF7FEFF 	 bl HomeWindow
 736              	.L23:
 289:../main.c     **** 
 290:../main.c     ****   // Function to initialize debug printing
 291:../main.c     ****   // initialise_monitor_handles();
 292:../main.c     **** 
 293:../main.c     **** //  MoveWindow(5);	// 50%
 294:../main.c     **** //  MoveWindow(0);	//0%
 295:../main.c     **** 
 296:../main.c     ****   while(1U)
 297:../main.c     ****   {
 298:../main.c     **** 	  ManualOverrideSwitches();
 737              	 .loc 3 298 0 discriminator 1
 738 0010 FFF7FEFF 	 bl ManualOverrideSwitches
 299:../main.c     ****   }
 739              	 .loc 3 299 0 discriminator 1
 740 0014 FCE7     	 b .L23
 741              	 .cfi_endproc
 742              	.LFE307:
 744 0016 00BF     	 .section .text.RegisterDevice,"ax",%progbits
 745              	 .align 2
 746              	 .global RegisterDevice
 747              	 .thumb
 748              	 .thumb_func
 750              	RegisterDevice:
 751              	.LFB308:
 300:../main.c     ****   return 0;
 301:../main.c     **** }
 302:../main.c     **** 
 303:../main.c     **** // Sends message to NMC on startup to register device
 304:../main.c     **** void RegisterDevice()
 305:../main.c     **** {
 752              	 .loc 3 305 0
 753              	 .cfi_startproc
 754              	 
 755              	 
 756 0000 80B5     	 push {r7,lr}
 757              	.LCFI55:
 758              	 .cfi_def_cfa_offset 8
 759              	 .cfi_offset 7,-8
 760              	 .cfi_offset 14,-4
 761 0002 82B0     	 sub sp,sp,#8
 762              	.LCFI56:
 763              	 .cfi_def_cfa_offset 16
 764 0004 00AF     	 add r7,sp,#0
 765              	.LCFI57:
 766              	 .cfi_def_cfa_register 7
 306:../main.c     **** 	React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 767              	 .loc 3 306 0
 768 0006 0C4B     	 ldr r3,.L25
 769 0008 1B68     	 ldr r3,[r3]
 770 000a 0C4A     	 ldr r2,.L25+4
 771 000c 1268     	 ldr r2,[r2]
 772 000e 92B2     	 uxth r2,r2
 773 0010 1A82     	 strh r2,[r3,#16]
 307:../main.c     **** 	React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x05;	//device registration
 774              	 .loc 3 307 0
 775 0012 094B     	 ldr r3,.L25
 776 0014 1B68     	 ldr r3,[r3]
 777 0016 0522     	 movs r2,#5
 778 0018 5A82     	 strh r2,[r3,#18]
 308:../main.c     **** 	uint32_t status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 779              	 .loc 3 308 0
 780 001a 074B     	 ldr r3,.L25
 781 001c 1B68     	 ldr r3,[r3]
 782 001e 1846     	 mov r0,r3
 783 0020 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 784 0024 0346     	 mov r3,r0
 785 0026 7B60     	 str r3,[r7,#4]
 309:../main.c     **** 	status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 786              	 .loc 3 309 0
 787 0028 0348     	 ldr r0,.L25
 788 002a FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 789 002e 0346     	 mov r3,r0
 790 0030 7B60     	 str r3,[r7,#4]
 310:../main.c     **** 
 311:../main.c     **** 	//TODO : Add delay until registered, retransmit after delay if not
 312:../main.c     **** 
 313:../main.c     **** }
 791              	 .loc 3 313 0
 792 0032 0837     	 adds r7,r7,#8
 793              	.LCFI58:
 794              	 .cfi_def_cfa_offset 8
 795 0034 BD46     	 mov sp,r7
 796              	.LCFI59:
 797              	 .cfi_def_cfa_register 13
 798              	 
 799 0036 80BD     	 pop {r7,pc}
 800              	.L26:
 801              	 .align 2
 802              	.L25:
 803 0038 00000000 	 .word React_Node_LMO_02_Config
 804 003c 00000000 	 .word MOTOR_MODULE_ID
 805              	 .cfi_endproc
 806              	.LFE308:
 808              	 .global __aeabi_i2d
 809              	 .global __aeabi_dmul
 810              	 .global __aeabi_d2iz
 811              	 .section .text.HomeWindow,"ax",%progbits
 812              	 .align 2
 813              	 .global HomeWindow
 814              	 .thumb
 815              	 .thumb_func
 817              	HomeWindow:
 818              	.LFB309:
 314:../main.c     **** 
 315:../main.c     **** //Homes the motor to acquire constants needed for operation. Also for tuning
 316:../main.c     **** int HomeWindow()
 317:../main.c     **** {
 819              	 .loc 3 317 0
 820              	 .cfi_startproc
 821              	 
 822              	 
 823 0000 80B5     	 push {r7,lr}
 824              	.LCFI60:
 825              	 .cfi_def_cfa_offset 8
 826              	 .cfi_offset 7,-8
 827              	 .cfi_offset 14,-4
 828 0002 82B0     	 sub sp,sp,#8
 829              	.LCFI61:
 830              	 .cfi_def_cfa_offset 16
 831 0004 00AF     	 add r7,sp,#0
 832              	.LCFI62:
 833              	 .cfi_def_cfa_register 7
 318:../main.c     **** 	int BottomLimitSwitchState = CheckBottomLimitSwitch();
 834              	 .loc 3 318 0
 835 0006 FFF7FEFF 	 bl CheckBottomLimitSwitch
 836 000a 7860     	 str r0,[r7,#4]
 319:../main.c     **** 
 320:../main.c     **** 	if (BottomLimitSwitchState == 1)		// TODO : Change to 0 bc 0 means button pressed
 837              	 .loc 3 320 0
 838 000c 7B68     	 ldr r3,[r7,#4]
 839 000e 012B     	 cmp r3,#1
 840 0010 27D1     	 bne .L28
 321:../main.c     **** 	{
 322:../main.c     **** 		TIMER_Start(&TIMER_Motor);
 841              	 .loc 3 322 0
 842 0012 9548     	 ldr r0,.L34+64
 843 0014 FFF7FEFF 	 bl TIMER_Start
 323:../main.c     **** 		while(CheckTopLimitSwitch() == 1)	//drive motor until top limit switch is reached
 844              	 .loc 3 323 0
 845 0018 05E0     	 b .L29
 846              	.L30:
 324:../main.c     **** 		{
 325:../main.c     **** 			PWM_Start(&PWM_Motor);
 847              	 .loc 3 325 0
 848 001a 9448     	 ldr r0,.L34+68
 849 001c FFF7FEFF 	 bl PWM_Start
 326:../main.c     **** 			DIGITAL_IO_SetOutputLow(&Motor_Direction); //Move up
 850              	 .loc 3 326 0
 851 0020 9348     	 ldr r0,.L34+72
 852 0022 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 853              	.L29:
 323:../main.c     **** 		while(CheckTopLimitSwitch() == 1)	//drive motor until top limit switch is reached
 854              	 .loc 3 323 0
 855 0026 FFF7FEFF 	 bl CheckTopLimitSwitch
 856 002a 0346     	 mov r3,r0
 857 002c 012B     	 cmp r3,#1
 858 002e F4D0     	 beq .L30
 327:../main.c     **** 		}
 328:../main.c     **** 		PWM_Stop(&PWM_Motor);
 859              	 .loc 3 328 0
 860 0030 8E48     	 ldr r0,.L34+68
 861 0032 FFF7FEFF 	 bl PWM_Stop
 329:../main.c     **** 		TIMER_Stop(&TIMER_Motor);
 862              	 .loc 3 329 0
 863 0036 8C48     	 ldr r0,.L34+64
 864 0038 FFF7FEFF 	 bl TIMER_Stop
 330:../main.c     **** 		closedToOpenTime = time;
 865              	 .loc 3 330 0
 866 003c 8D4B     	 ldr r3,.L34+76
 867 003e 1B68     	 ldr r3,[r3]
 868 0040 8D4A     	 ldr r2,.L34+80
 869 0042 1360     	 str r3,[r2]
 331:../main.c     **** 		while(CheckBottomLimitSwitch() == 1)
 870              	 .loc 3 331 0
 871 0044 05E0     	 b .L31
 872              	.L32:
 332:../main.c     **** 		{
 333:../main.c     **** 			PWM_Start(&PWM_Motor);
 873              	 .loc 3 333 0
 874 0046 8948     	 ldr r0,.L34+68
 875 0048 FFF7FEFF 	 bl PWM_Start
 334:../main.c     **** 			DIGITAL_IO_SetOutputHigh(&Motor_Direction);
 876              	 .loc 3 334 0
 877 004c 8848     	 ldr r0,.L34+72
 878 004e FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 879              	.L31:
 331:../main.c     **** 		while(CheckBottomLimitSwitch() == 1)
 880              	 .loc 3 331 0
 881 0052 FFF7FEFF 	 bl CheckBottomLimitSwitch
 882 0056 0346     	 mov r3,r0
 883 0058 012B     	 cmp r3,#1
 884 005a F4D0     	 beq .L32
 335:../main.c     **** 		}
 336:../main.c     **** 		PWM_Stop(&PWM_Motor);	//Turn off PWM once bottom reached
 885              	 .loc 3 336 0
 886 005c 8348     	 ldr r0,.L34+68
 887 005e FFF7FEFF 	 bl PWM_Stop
 888              	.L28:
 337:../main.c     **** 	}
 338:../main.c     **** 	WindowState = 0;	// Set initial state to zero
 889              	 .loc 3 338 0
 890 0062 864B     	 ldr r3,.L34+84
 891 0064 0022     	 movs r2,#0
 892 0066 1A60     	 str r2,[r3]
 339:../main.c     **** 	time = 0;			// reset global timer variable
 893              	 .loc 3 339 0
 894 0068 824B     	 ldr r3,.L34+76
 895 006a 0022     	 movs r2,#0
 896 006c 1A60     	 str r2,[r3]
 340:../main.c     **** 	// Create State table
 341:../main.c     **** 	stateTimingVariables[0]  = 0;								//0%
 897              	 .loc 3 341 0
 898 006e 844B     	 ldr r3,.L34+88
 899 0070 0022     	 movs r2,#0
 900 0072 1A60     	 str r2,[r3]
 342:../main.c     **** 	stateTimingVariables[1]  = (closedToOpenTime * (0.1));		//10%
 901              	 .loc 3 342 0
 902 0074 804B     	 ldr r3,.L34+80
 903 0076 1B68     	 ldr r3,[r3]
 904 0078 1846     	 mov r0,r3
 905 007a FFF7FEFF 	 bl __aeabi_i2d
 906 007e 0246     	 mov r2,r0
 907 0080 0B46     	 mov r3,r1
 908 0082 1046     	 mov r0,r2
 909 0084 1946     	 mov r1,r3
 910 0086 68A3     	 adr r3,.L34
 911 0088 D3E90023 	 ldrd r2,[r3]
 912 008c FFF7FEFF 	 bl __aeabi_dmul
 913 0090 0246     	 mov r2,r0
 914 0092 0B46     	 mov r3,r1
 915 0094 1046     	 mov r0,r2
 916 0096 1946     	 mov r1,r3
 917 0098 FFF7FEFF 	 bl __aeabi_d2iz
 918 009c 0246     	 mov r2,r0
 919 009e 784B     	 ldr r3,.L34+88
 920 00a0 5A60     	 str r2,[r3,#4]
 343:../main.c     **** 	stateTimingVariables[2]  = (closedToOpenTime * (0.2));		//20%
 921              	 .loc 3 343 0
 922 00a2 754B     	 ldr r3,.L34+80
 923 00a4 1B68     	 ldr r3,[r3]
 924 00a6 1846     	 mov r0,r3
 925 00a8 FFF7FEFF 	 bl __aeabi_i2d
 926 00ac 0246     	 mov r2,r0
 927 00ae 0B46     	 mov r3,r1
 928 00b0 1046     	 mov r0,r2
 929 00b2 1946     	 mov r1,r3
 930 00b4 5EA3     	 adr r3,.L34+8
 931 00b6 D3E90023 	 ldrd r2,[r3]
 932 00ba FFF7FEFF 	 bl __aeabi_dmul
 933 00be 0246     	 mov r2,r0
 934 00c0 0B46     	 mov r3,r1
 935 00c2 1046     	 mov r0,r2
 936 00c4 1946     	 mov r1,r3
 937 00c6 FFF7FEFF 	 bl __aeabi_d2iz
 938 00ca 0246     	 mov r2,r0
 939 00cc 6C4B     	 ldr r3,.L34+88
 940 00ce 9A60     	 str r2,[r3,#8]
 344:../main.c     **** 	stateTimingVariables[3]  = (closedToOpenTime * (0.3));		//30%
 941              	 .loc 3 344 0
 942 00d0 694B     	 ldr r3,.L34+80
 943 00d2 1B68     	 ldr r3,[r3]
 944 00d4 1846     	 mov r0,r3
 945 00d6 FFF7FEFF 	 bl __aeabi_i2d
 946 00da 0246     	 mov r2,r0
 947 00dc 0B46     	 mov r3,r1
 948 00de 1046     	 mov r0,r2
 949 00e0 1946     	 mov r1,r3
 950 00e2 55A3     	 adr r3,.L34+16
 951 00e4 D3E90023 	 ldrd r2,[r3]
 952 00e8 FFF7FEFF 	 bl __aeabi_dmul
 953 00ec 0246     	 mov r2,r0
 954 00ee 0B46     	 mov r3,r1
 955 00f0 1046     	 mov r0,r2
 956 00f2 1946     	 mov r1,r3
 957 00f4 FFF7FEFF 	 bl __aeabi_d2iz
 958 00f8 0246     	 mov r2,r0
 959 00fa 614B     	 ldr r3,.L34+88
 960 00fc DA60     	 str r2,[r3,#12]
 345:../main.c     **** 	stateTimingVariables[4]  = (closedToOpenTime * (0.4));		//40%
 961              	 .loc 3 345 0
 962 00fe 5E4B     	 ldr r3,.L34+80
 963 0100 1B68     	 ldr r3,[r3]
 964 0102 1846     	 mov r0,r3
 965 0104 FFF7FEFF 	 bl __aeabi_i2d
 966 0108 0246     	 mov r2,r0
 967 010a 0B46     	 mov r3,r1
 968 010c 1046     	 mov r0,r2
 969 010e 1946     	 mov r1,r3
 970 0110 4BA3     	 adr r3,.L34+24
 971 0112 D3E90023 	 ldrd r2,[r3]
 972 0116 FFF7FEFF 	 bl __aeabi_dmul
 973 011a 0246     	 mov r2,r0
 974 011c 0B46     	 mov r3,r1
 975 011e 1046     	 mov r0,r2
 976 0120 1946     	 mov r1,r3
 977 0122 FFF7FEFF 	 bl __aeabi_d2iz
 978 0126 0246     	 mov r2,r0
 979 0128 554B     	 ldr r3,.L34+88
 980 012a 1A61     	 str r2,[r3,#16]
 346:../main.c     **** 	stateTimingVariables[5]  = (closedToOpenTime * (0.5));		//50%
 981              	 .loc 3 346 0
 982 012c 524B     	 ldr r3,.L34+80
 983 012e 1B68     	 ldr r3,[r3]
 984 0130 1846     	 mov r0,r3
 985 0132 FFF7FEFF 	 bl __aeabi_i2d
 986 0136 0246     	 mov r2,r0
 987 0138 0B46     	 mov r3,r1
 988 013a 1046     	 mov r0,r2
 989 013c 1946     	 mov r1,r3
 990 013e 4FF00002 	 mov r2,#0
 991 0142 504B     	 ldr r3,.L34+92
 992 0144 FFF7FEFF 	 bl __aeabi_dmul
 993 0148 0246     	 mov r2,r0
 994 014a 0B46     	 mov r3,r1
 995 014c 1046     	 mov r0,r2
 996 014e 1946     	 mov r1,r3
 997 0150 FFF7FEFF 	 bl __aeabi_d2iz
 998 0154 0246     	 mov r2,r0
 999 0156 4A4B     	 ldr r3,.L34+88
 1000 0158 5A61     	 str r2,[r3,#20]
 347:../main.c     **** 	stateTimingVariables[6]  = (closedToOpenTime * (0.6));		//60%
 1001              	 .loc 3 347 0
 1002 015a 474B     	 ldr r3,.L34+80
 1003 015c 1B68     	 ldr r3,[r3]
 1004 015e 1846     	 mov r0,r3
 1005 0160 FFF7FEFF 	 bl __aeabi_i2d
 1006 0164 0246     	 mov r2,r0
 1007 0166 0B46     	 mov r3,r1
 1008 0168 1046     	 mov r0,r2
 1009 016a 1946     	 mov r1,r3
 1010 016c 36A3     	 adr r3,.L34+32
 1011 016e D3E90023 	 ldrd r2,[r3]
 1012 0172 FFF7FEFF 	 bl __aeabi_dmul
 1013 0176 0246     	 mov r2,r0
 1014 0178 0B46     	 mov r3,r1
 1015 017a 1046     	 mov r0,r2
 1016 017c 1946     	 mov r1,r3
 1017 017e FFF7FEFF 	 bl __aeabi_d2iz
 1018 0182 0246     	 mov r2,r0
 1019 0184 3E4B     	 ldr r3,.L34+88
 1020 0186 9A61     	 str r2,[r3,#24]
 348:../main.c     **** 	stateTimingVariables[7]  = (closedToOpenTime * (0.7));		//70%
 1021              	 .loc 3 348 0
 1022 0188 3B4B     	 ldr r3,.L34+80
 1023 018a 1B68     	 ldr r3,[r3]
 1024 018c 1846     	 mov r0,r3
 1025 018e FFF7FEFF 	 bl __aeabi_i2d
 1026 0192 0246     	 mov r2,r0
 1027 0194 0B46     	 mov r3,r1
 1028 0196 1046     	 mov r0,r2
 1029 0198 1946     	 mov r1,r3
 1030 019a 2DA3     	 adr r3,.L34+40
 1031 019c D3E90023 	 ldrd r2,[r3]
 1032 01a0 FFF7FEFF 	 bl __aeabi_dmul
 1033 01a4 0246     	 mov r2,r0
 1034 01a6 0B46     	 mov r3,r1
 1035 01a8 1046     	 mov r0,r2
 1036 01aa 1946     	 mov r1,r3
 1037 01ac FFF7FEFF 	 bl __aeabi_d2iz
 1038 01b0 0246     	 mov r2,r0
 1039 01b2 334B     	 ldr r3,.L34+88
 1040 01b4 DA61     	 str r2,[r3,#28]
 349:../main.c     **** 	stateTimingVariables[8]  = (closedToOpenTime * (0.8));		//80%
 1041              	 .loc 3 349 0
 1042 01b6 304B     	 ldr r3,.L34+80
 1043 01b8 1B68     	 ldr r3,[r3]
 1044 01ba 1846     	 mov r0,r3
 1045 01bc FFF7FEFF 	 bl __aeabi_i2d
 1046 01c0 0246     	 mov r2,r0
 1047 01c2 0B46     	 mov r3,r1
 1048 01c4 1046     	 mov r0,r2
 1049 01c6 1946     	 mov r1,r3
 1050 01c8 23A3     	 adr r3,.L34+48
 1051 01ca D3E90023 	 ldrd r2,[r3]
 1052 01ce FFF7FEFF 	 bl __aeabi_dmul
 1053 01d2 0246     	 mov r2,r0
 1054 01d4 0B46     	 mov r3,r1
 1055 01d6 1046     	 mov r0,r2
 1056 01d8 1946     	 mov r1,r3
 1057 01da FFF7FEFF 	 bl __aeabi_d2iz
 1058 01de 0246     	 mov r2,r0
 1059 01e0 274B     	 ldr r3,.L34+88
 1060 01e2 1A62     	 str r2,[r3,#32]
 350:../main.c     **** 	stateTimingVariables[9]  = (closedToOpenTime * (0.9));		//90%
 1061              	 .loc 3 350 0
 1062 01e4 244B     	 ldr r3,.L34+80
 1063 01e6 1B68     	 ldr r3,[r3]
 1064 01e8 1846     	 mov r0,r3
 1065 01ea FFF7FEFF 	 bl __aeabi_i2d
 1066 01ee 0246     	 mov r2,r0
 1067 01f0 0B46     	 mov r3,r1
 1068 01f2 1046     	 mov r0,r2
 1069 01f4 1946     	 mov r1,r3
 1070 01f6 1AA3     	 adr r3,.L34+56
 1071 01f8 D3E90023 	 ldrd r2,[r3]
 1072 01fc FFF7FEFF 	 bl __aeabi_dmul
 1073 0200 0246     	 mov r2,r0
 1074 0202 0B46     	 mov r3,r1
 1075 0204 1046     	 mov r0,r2
 1076 0206 1946     	 mov r1,r3
 1077 0208 FFF7FEFF 	 bl __aeabi_d2iz
 1078 020c 0246     	 mov r2,r0
 1079 020e 1C4B     	 ldr r3,.L34+88
 1080 0210 5A62     	 str r2,[r3,#36]
 351:../main.c     **** 	stateTimingVariables[10] = (closedToOpenTime);		        //100%
 1081              	 .loc 3 351 0
 1082 0212 194B     	 ldr r3,.L34+80
 1083 0214 1B68     	 ldr r3,[r3]
 1084 0216 1A4A     	 ldr r2,.L34+88
 1085 0218 9362     	 str r3,[r2,#40]
 352:../main.c     **** 	return 1;
 1086              	 .loc 3 352 0
 1087 021a 0123     	 movs r3,#1
 353:../main.c     **** }
 1088              	 .loc 3 353 0
 1089 021c 1846     	 mov r0,r3
 1090 021e 0837     	 adds r7,r7,#8
 1091              	.LCFI63:
 1092              	 .cfi_def_cfa_offset 8
 1093 0220 BD46     	 mov sp,r7
 1094              	.LCFI64:
 1095              	 .cfi_def_cfa_register 13
 1096              	 
 1097 0222 80BD     	 pop {r7,pc}
 1098              	.L35:
 1099 0224 AFF30080 	 .align 3
 1100              	.L34:
 1101 0228 9A999999 	 .word -1717986918
 1102 022c 9999B93F 	 .word 1069128089
 1103 0230 9A999999 	 .word -1717986918
 1104 0234 9999C93F 	 .word 1070176665
 1105 0238 33333333 	 .word 858993459
 1106 023c 3333D33F 	 .word 1070805811
 1107 0240 9A999999 	 .word -1717986918
 1108 0244 9999D93F 	 .word 1071225241
 1109 0248 33333333 	 .word 858993459
 1110 024c 3333E33F 	 .word 1071854387
 1111 0250 66666666 	 .word 1717986918
 1112 0254 6666E63F 	 .word 1072064102
 1113 0258 9A999999 	 .word -1717986918
 1114 025c 9999E93F 	 .word 1072273817
 1115 0260 CDCCCCCC 	 .word -858993459
 1116 0264 CCCCEC3F 	 .word 1072483532
 1117 0268 00000000 	 .word TIMER_Motor
 1118 026c 00000000 	 .word PWM_Motor
 1119 0270 00000000 	 .word Motor_Direction
 1120 0274 00000000 	 .word time
 1121 0278 00000000 	 .word closedToOpenTime
 1122 027c 00000000 	 .word WindowState
 1123 0280 00000000 	 .word stateTimingVariables
 1124 0284 0000E03F 	 .word 1071644672
 1125              	 .cfi_endproc
 1126              	.LFE309:
 1128              	 .section .text.MoveWindow,"ax",%progbits
 1129              	 .align 2
 1130              	 .global MoveWindow
 1131              	 .thumb
 1132              	 .thumb_func
 1134              	MoveWindow:
 1135              	.LFB310:
 354:../main.c     **** 
 355:../main.c     **** //Function to move window to desired percentage
 356:../main.c     **** // NOTE: HIGH = DOWM; LOW = UP !!!
 357:../main.c     **** int MoveWindow(int percentage)
 358:../main.c     **** {
 1136              	 .loc 3 358 0
 1137              	 .cfi_startproc
 1138              	 
 1139              	 
 1140 0000 80B5     	 push {r7,lr}
 1141              	.LCFI65:
 1142              	 .cfi_def_cfa_offset 8
 1143              	 .cfi_offset 7,-8
 1144              	 .cfi_offset 14,-4
 1145 0002 86B0     	 sub sp,sp,#24
 1146              	.LCFI66:
 1147              	 .cfi_def_cfa_offset 32
 1148 0004 00AF     	 add r7,sp,#0
 1149              	.LCFI67:
 1150              	 .cfi_def_cfa_register 7
 1151 0006 7860     	 str r0,[r7,#4]
 359:../main.c     **** 	/*
 360:../main.c     **** 	 -----Methodology-----
 361:../main.c     **** 	 - Key into global time array using requested percentage
 362:../main.c     **** 	 - Take current state, subtract requested state from it
 363:../main.c     **** 	 - use + or - value of the number to know which direction to move, and magnitude for how much time
 364:../main.c     **** 	 - drive motor and update timer variable with timer interrupt until motor has been driven appropri
 365:../main.c     **** 	 - stop timer and update current state variable
 366:../main.c     **** 	 - return with success and smile :)
 367:../main.c     **** 	*/
 368:../main.c     **** 
 369:../main.c     **** 	int MOS_UP_State = DIGITAL_IO_GetInput(&MOS_UP);
 1152              	 .loc 3 369 0
 1153 0008 3E48     	 ldr r0,.L51
 1154 000a FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1155 000e 0346     	 mov r3,r0
 1156 0010 7B61     	 str r3,[r7,#20]
 370:../main.c     **** 	int MOS_DOWN_State = DIGITAL_IO_GetInput(&MOS_DOWN);
 1157              	 .loc 3 370 0
 1158 0012 3D48     	 ldr r0,.L51+4
 1159 0014 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1160 0018 0346     	 mov r3,r0
 1161 001a 3B61     	 str r3,[r7,#16]
 371:../main.c     **** 	if ((MOS_UP_State == 0) || (MOS_DOWN_State == 0))
 1162              	 .loc 3 371 0
 1163 001c 7B69     	 ldr r3,[r7,#20]
 1164 001e 002B     	 cmp r3,#0
 1165 0020 02D0     	 beq .L37
 1166              	 .loc 3 371 0 is_stmt 0 discriminator 1
 1167 0022 3B69     	 ldr r3,[r7,#16]
 1168 0024 002B     	 cmp r3,#0
 1169 0026 01D1     	 bne .L38
 1170              	.L37:
 372:../main.c     **** 	{
 373:../main.c     **** 		return 0;	//Manual Override switch already being serviced
 1171              	 .loc 3 373 0 is_stmt 1
 1172 0028 0023     	 movs r3,#0
 1173 002a 67E0     	 b .L39
 1174              	.L38:
 374:../main.c     **** 	}
 375:../main.c     **** 
 376:../main.c     **** 	int requestedPercentage = percentage;
 1175              	 .loc 3 376 0
 1176 002c 7B68     	 ldr r3,[r7,#4]
 1177 002e FB60     	 str r3,[r7,#12]
 377:../main.c     **** 	if ((requestedPercentage < 0) || (requestedPercentage > 10))
 1178              	 .loc 3 377 0
 1179 0030 FB68     	 ldr r3,[r7,#12]
 1180 0032 002B     	 cmp r3,#0
 1181 0034 02DB     	 blt .L40
 1182              	 .loc 3 377 0 is_stmt 0 discriminator 1
 1183 0036 FB68     	 ldr r3,[r7,#12]
 1184 0038 0A2B     	 cmp r3,#10
 1185 003a 01DD     	 ble .L41
 1186              	.L40:
 378:../main.c     **** 	{
 379:../main.c     **** 		return 0;
 1187              	 .loc 3 379 0 is_stmt 1
 1188 003c 0023     	 movs r3,#0
 1189 003e 5DE0     	 b .L39
 1190              	.L41:
 380:../main.c     **** 	}
 381:../main.c     **** 
 382:../main.c     **** 	int timeToMove = (stateTimingVariables[requestedPercentage] - stateTimingVariables[WindowState]);	
 1191              	 .loc 3 382 0
 1192 0040 324A     	 ldr r2,.L51+8
 1193 0042 FB68     	 ldr r3,[r7,#12]
 1194 0044 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1195 0048 314B     	 ldr r3,.L51+12
 1196 004a 1B68     	 ldr r3,[r3]
 1197 004c 2F49     	 ldr r1,.L51+8
 1198 004e 51F82330 	 ldr r3,[r1,r3,lsl#2]
 1199 0052 D31A     	 subs r3,r2,r3
 1200 0054 BB60     	 str r3,[r7,#8]
 383:../main.c     **** 																										// Difference will be time needed to drive motor,
 384:../main.c     **** 																										// sign will be direction (+ = up, - = down)
 385:../main.c     **** 	if (timeToMove > 0)			// Positive, so need to drive up
 1201              	 .loc 3 385 0
 1202 0056 BB68     	 ldr r3,[r7,#8]
 1203 0058 002B     	 cmp r3,#0
 1204 005a 20DD     	 ble .L42
 386:../main.c     **** 	{
 387:../main.c     **** 		TIMER_Start(&TIMER_Motor);
 1205              	 .loc 3 387 0
 1206 005c 2D48     	 ldr r0,.L51+16
 1207 005e FFF7FEFF 	 bl TIMER_Start
 388:../main.c     **** 		while((time < timeToMove) && (CheckTopLimitSwitch() == 1))	//drive motor until time is equal to s
 1208              	 .loc 3 388 0
 1209 0062 05E0     	 b .L43
 1210              	.L45:
 389:../main.c     **** 		{
 390:../main.c     **** 			PWM_Start(&PWM_Motor);
 1211              	 .loc 3 390 0
 1212 0064 2C48     	 ldr r0,.L51+20
 1213 0066 FFF7FEFF 	 bl PWM_Start
 391:../main.c     **** 			DIGITAL_IO_SetOutputLow(&Motor_Direction); //Move up
 1214              	 .loc 3 391 0
 1215 006a 2C48     	 ldr r0,.L51+24
 1216 006c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1217              	.L43:
 388:../main.c     **** 		while((time < timeToMove) && (CheckTopLimitSwitch() == 1))	//drive motor until time is equal to s
 1218              	 .loc 3 388 0
 1219 0070 2B4B     	 ldr r3,.L51+28
 1220 0072 1A68     	 ldr r2,[r3]
 1221 0074 BB68     	 ldr r3,[r7,#8]
 1222 0076 9A42     	 cmp r2,r3
 1223 0078 04DA     	 bge .L44
 388:../main.c     **** 		while((time < timeToMove) && (CheckTopLimitSwitch() == 1))	//drive motor until time is equal to s
 1224              	 .loc 3 388 0 is_stmt 0 discriminator 1
 1225 007a FFF7FEFF 	 bl CheckTopLimitSwitch
 1226 007e 0346     	 mov r3,r0
 1227 0080 012B     	 cmp r3,#1
 1228 0082 EFD0     	 beq .L45
 1229              	.L44:
 392:../main.c     **** 		}
 393:../main.c     **** 		PWM_Stop(&PWM_Motor);
 1230              	 .loc 3 393 0 is_stmt 1
 1231 0084 2448     	 ldr r0,.L51+20
 1232 0086 FFF7FEFF 	 bl PWM_Stop
 394:../main.c     **** 		TIMER_Stop(&TIMER_Motor);
 1233              	 .loc 3 394 0
 1234 008a 2248     	 ldr r0,.L51+16
 1235 008c FFF7FEFF 	 bl TIMER_Stop
 395:../main.c     **** 		time = 0;
 1236              	 .loc 3 395 0
 1237 0090 234B     	 ldr r3,.L51+28
 1238 0092 0022     	 movs r2,#0
 1239 0094 1A60     	 str r2,[r3]
 396:../main.c     **** 		WindowState = requestedPercentage;
 1240              	 .loc 3 396 0
 1241 0096 1E4A     	 ldr r2,.L51+12
 1242 0098 FB68     	 ldr r3,[r7,#12]
 1243 009a 1360     	 str r3,[r2]
 1244 009c 2DE0     	 b .L46
 1245              	.L42:
 397:../main.c     **** 	}
 398:../main.c     **** 	else if (timeToMove < 0)	// Negative, need to drive down
 1246              	 .loc 3 398 0
 1247 009e BB68     	 ldr r3,[r7,#8]
 1248 00a0 002B     	 cmp r3,#0
 1249 00a2 25DA     	 bge .L47
 1250              	.LBB6:
 399:../main.c     **** 	{
 400:../main.c     **** 		timeToMove = abs(timeToMove);
 1251              	 .loc 3 400 0
 1252 00a4 BB68     	 ldr r3,[r7,#8]
 1253 00a6 002B     	 cmp r3,#0
 1254 00a8 B8BF     	 it lt
 1255 00aa 5B42     	 rsblt r3,r3,#0
 1256 00ac BB60     	 str r3,[r7,#8]
 401:../main.c     **** 		TIMER_Start(&TIMER_Motor);
 1257              	 .loc 3 401 0
 1258 00ae 1948     	 ldr r0,.L51+16
 1259 00b0 FFF7FEFF 	 bl TIMER_Start
 402:../main.c     **** 		while((time < timeToMove) && (CheckBottomLimitSwitch() == 1))	//drive motor until time is equal t
 1260              	 .loc 3 402 0
 1261 00b4 05E0     	 b .L48
 1262              	.L50:
 403:../main.c     **** 		{
 404:../main.c     **** 			PWM_Start(&PWM_Motor);
 1263              	 .loc 3 404 0
 1264 00b6 1848     	 ldr r0,.L51+20
 1265 00b8 FFF7FEFF 	 bl PWM_Start
 405:../main.c     **** 			DIGITAL_IO_SetOutputHigh(&Motor_Direction); //Move down
 1266              	 .loc 3 405 0
 1267 00bc 1748     	 ldr r0,.L51+24
 1268 00be FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1269              	.L48:
 402:../main.c     **** 		while((time < timeToMove) && (CheckBottomLimitSwitch() == 1))	//drive motor until time is equal t
 1270              	 .loc 3 402 0
 1271 00c2 174B     	 ldr r3,.L51+28
 1272 00c4 1A68     	 ldr r2,[r3]
 1273 00c6 BB68     	 ldr r3,[r7,#8]
 1274 00c8 9A42     	 cmp r2,r3
 1275 00ca 04DA     	 bge .L49
 402:../main.c     **** 		while((time < timeToMove) && (CheckBottomLimitSwitch() == 1))	//drive motor until time is equal t
 1276              	 .loc 3 402 0 is_stmt 0 discriminator 1
 1277 00cc FFF7FEFF 	 bl CheckBottomLimitSwitch
 1278 00d0 0346     	 mov r3,r0
 1279 00d2 012B     	 cmp r3,#1
 1280 00d4 EFD0     	 beq .L50
 1281              	.L49:
 406:../main.c     **** 		}
 407:../main.c     **** 		PWM_Stop(&PWM_Motor);
 1282              	 .loc 3 407 0 is_stmt 1
 1283 00d6 1048     	 ldr r0,.L51+20
 1284 00d8 FFF7FEFF 	 bl PWM_Stop
 408:../main.c     **** 		TIMER_Stop(&TIMER_Motor);
 1285              	 .loc 3 408 0
 1286 00dc 0D48     	 ldr r0,.L51+16
 1287 00de FFF7FEFF 	 bl TIMER_Stop
 409:../main.c     **** 		time = 0;
 1288              	 .loc 3 409 0
 1289 00e2 0F4B     	 ldr r3,.L51+28
 1290 00e4 0022     	 movs r2,#0
 1291 00e6 1A60     	 str r2,[r3]
 410:../main.c     **** 		WindowState = requestedPercentage;
 1292              	 .loc 3 410 0
 1293 00e8 094A     	 ldr r2,.L51+12
 1294 00ea FB68     	 ldr r3,[r7,#12]
 1295 00ec 1360     	 str r3,[r2]
 1296              	.LBE6:
 1297 00ee 04E0     	 b .L46
 1298              	.L47:
 411:../main.c     **** 	}
 412:../main.c     **** 	else if (timeToMove == 0)
 1299              	 .loc 3 412 0
 1300 00f0 BB68     	 ldr r3,[r7,#8]
 1301 00f2 002B     	 cmp r3,#0
 1302 00f4 01D0     	 beq .L46
 413:../main.c     **** 	{
 414:../main.c     **** 		// Requesting same state, so do nothing
 415:../main.c     **** 	}
 416:../main.c     **** 	else
 417:../main.c     **** 	{
 418:../main.c     **** 		return 0;
 1303              	 .loc 3 418 0
 1304 00f6 0023     	 movs r3,#0
 1305 00f8 00E0     	 b .L39
 1306              	.L46:
 419:../main.c     **** 	}
 420:../main.c     **** 	return 1;
 1307              	 .loc 3 420 0
 1308 00fa 0123     	 movs r3,#1
 1309              	.L39:
 421:../main.c     **** }
 1310              	 .loc 3 421 0
 1311 00fc 1846     	 mov r0,r3
 1312 00fe 1837     	 adds r7,r7,#24
 1313              	.LCFI68:
 1314              	 .cfi_def_cfa_offset 8
 1315 0100 BD46     	 mov sp,r7
 1316              	.LCFI69:
 1317              	 .cfi_def_cfa_register 13
 1318              	 
 1319 0102 80BD     	 pop {r7,pc}
 1320              	.L52:
 1321              	 .align 2
 1322              	.L51:
 1323 0104 00000000 	 .word MOS_UP
 1324 0108 00000000 	 .word MOS_DOWN
 1325 010c 00000000 	 .word stateTimingVariables
 1326 0110 00000000 	 .word WindowState
 1327 0114 00000000 	 .word TIMER_Motor
 1328 0118 00000000 	 .word PWM_Motor
 1329 011c 00000000 	 .word Motor_Direction
 1330 0120 00000000 	 .word time
 1331              	 .cfi_endproc
 1332              	.LFE310:
 1334              	 .section .text.CheckTopLimitSwitch,"ax",%progbits
 1335              	 .align 2
 1336              	 .global CheckTopLimitSwitch
 1337              	 .thumb
 1338              	 .thumb_func
 1340              	CheckTopLimitSwitch:
 1341              	.LFB311:
 422:../main.c     **** 
 423:../main.c     **** int CheckTopLimitSwitch()
 424:../main.c     **** {
 1342              	 .loc 3 424 0
 1343              	 .cfi_startproc
 1344              	 
 1345              	 
 1346 0000 80B5     	 push {r7,lr}
 1347              	.LCFI70:
 1348              	 .cfi_def_cfa_offset 8
 1349              	 .cfi_offset 7,-8
 1350              	 .cfi_offset 14,-4
 1351 0002 82B0     	 sub sp,sp,#8
 1352              	.LCFI71:
 1353              	 .cfi_def_cfa_offset 16
 1354 0004 00AF     	 add r7,sp,#0
 1355              	.LCFI72:
 1356              	 .cfi_def_cfa_register 7
 425:../main.c     **** 	int TopSwitchState = DIGITAL_IO_GetInput(&LIMIT_SWITCH_TOP);
 1357              	 .loc 3 425 0
 1358 0006 0A48     	 ldr r0,.L56
 1359 0008 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1360 000c 0346     	 mov r3,r0
 1361 000e 7B60     	 str r3,[r7,#4]
 426:../main.c     **** 	if (TopSwitchState != top_button_state)
 1362              	 .loc 3 426 0
 1363 0010 7A68     	 ldr r2,[r7,#4]
 1364 0012 084B     	 ldr r3,.L56+4
 1365 0014 1B68     	 ldr r3,[r3]
 1366 0016 9A42     	 cmp r2,r3
 1367 0018 04D0     	 beq .L54
 427:../main.c     **** 	{
 428:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&LED_Indicator);
 1368              	 .loc 3 428 0
 1369 001a 0748     	 ldr r0,.L56+8
 1370 001c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 429:../main.c     **** 		return 0;	//Top switch pressed
 1371              	 .loc 3 429 0
 1372 0020 0023     	 movs r3,#0
 1373 0022 00E0     	 b .L55
 1374              	.L54:
 430:../main.c     **** 	}
 431:../main.c     **** 
 432:../main.c     **** 	return 1; 	//Base case that neither is pressed
 1375              	 .loc 3 432 0
 1376 0024 0123     	 movs r3,#1
 1377              	.L55:
 433:../main.c     **** }
 1378              	 .loc 3 433 0
 1379 0026 1846     	 mov r0,r3
 1380 0028 0837     	 adds r7,r7,#8
 1381              	.LCFI73:
 1382              	 .cfi_def_cfa_offset 8
 1383 002a BD46     	 mov sp,r7
 1384              	.LCFI74:
 1385              	 .cfi_def_cfa_register 13
 1386              	 
 1387 002c 80BD     	 pop {r7,pc}
 1388              	.L57:
 1389 002e 00BF     	 .align 2
 1390              	.L56:
 1391 0030 00000000 	 .word LIMIT_SWITCH_TOP
 1392 0034 00000000 	 .word top_button_state
 1393 0038 00000000 	 .word LED_Indicator
 1394              	 .cfi_endproc
 1395              	.LFE311:
 1397              	 .section .text.CheckBottomLimitSwitch,"ax",%progbits
 1398              	 .align 2
 1399              	 .global CheckBottomLimitSwitch
 1400              	 .thumb
 1401              	 .thumb_func
 1403              	CheckBottomLimitSwitch:
 1404              	.LFB312:
 434:../main.c     **** int CheckBottomLimitSwitch()
 435:../main.c     **** {
 1405              	 .loc 3 435 0
 1406              	 .cfi_startproc
 1407              	 
 1408              	 
 1409 0000 80B5     	 push {r7,lr}
 1410              	.LCFI75:
 1411              	 .cfi_def_cfa_offset 8
 1412              	 .cfi_offset 7,-8
 1413              	 .cfi_offset 14,-4
 1414 0002 82B0     	 sub sp,sp,#8
 1415              	.LCFI76:
 1416              	 .cfi_def_cfa_offset 16
 1417 0004 00AF     	 add r7,sp,#0
 1418              	.LCFI77:
 1419              	 .cfi_def_cfa_register 7
 436:../main.c     **** 	int BottomSwitchState = DIGITAL_IO_GetInput(&LIMIT_SWITCH_BOTTOM);
 1420              	 .loc 3 436 0
 1421 0006 0A48     	 ldr r0,.L61
 1422 0008 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1423 000c 0346     	 mov r3,r0
 1424 000e 7B60     	 str r3,[r7,#4]
 437:../main.c     **** 	if (BottomSwitchState != bottom_button_state)
 1425              	 .loc 3 437 0
 1426 0010 7A68     	 ldr r2,[r7,#4]
 1427 0012 084B     	 ldr r3,.L61+4
 1428 0014 1B68     	 ldr r3,[r3]
 1429 0016 9A42     	 cmp r2,r3
 1430 0018 04D0     	 beq .L59
 438:../main.c     **** 	{
 439:../main.c     **** 		DIGITAL_IO_SetOutputLow(&LED_Indicator);
 1431              	 .loc 3 439 0
 1432 001a 0748     	 ldr r0,.L61+8
 1433 001c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 440:../main.c     **** 		return 0; 	//Bottom switch pressed
 1434              	 .loc 3 440 0
 1435 0020 0023     	 movs r3,#0
 1436 0022 00E0     	 b .L60
 1437              	.L59:
 441:../main.c     **** 	}
 442:../main.c     **** 
 443:../main.c     **** 	return 1; 	//Base case that neither is pressed
 1438              	 .loc 3 443 0
 1439 0024 0123     	 movs r3,#1
 1440              	.L60:
 444:../main.c     **** }
 1441              	 .loc 3 444 0
 1442 0026 1846     	 mov r0,r3
 1443 0028 0837     	 adds r7,r7,#8
 1444              	.LCFI78:
 1445              	 .cfi_def_cfa_offset 8
 1446 002a BD46     	 mov sp,r7
 1447              	.LCFI79:
 1448              	 .cfi_def_cfa_register 13
 1449              	 
 1450 002c 80BD     	 pop {r7,pc}
 1451              	.L62:
 1452 002e 00BF     	 .align 2
 1453              	.L61:
 1454 0030 00000000 	 .word LIMIT_SWITCH_BOTTOM
 1455 0034 00000000 	 .word bottom_button_state
 1456 0038 00000000 	 .word LED_Indicator
 1457              	 .cfi_endproc
 1458              	.LFE312:
 1460              	 .section .text.ManualOverrideSwitches,"ax",%progbits
 1461              	 .align 2
 1462              	 .global ManualOverrideSwitches
 1463              	 .thumb
 1464              	 .thumb_func
 1466              	ManualOverrideSwitches:
 1467              	.LFB313:
 445:../main.c     **** 
 446:../main.c     **** void ManualOverrideSwitches()
 447:../main.c     **** {
 1468              	 .loc 3 447 0
 1469              	 .cfi_startproc
 1470              	 
 1471              	 
 1472 0000 80B5     	 push {r7,lr}
 1473              	.LCFI80:
 1474              	 .cfi_def_cfa_offset 8
 1475              	 .cfi_offset 7,-8
 1476              	 .cfi_offset 14,-4
 1477 0002 86B0     	 sub sp,sp,#24
 1478              	.LCFI81:
 1479              	 .cfi_def_cfa_offset 32
 1480 0004 00AF     	 add r7,sp,#0
 1481              	.LCFI82:
 1482              	 .cfi_def_cfa_register 7
 448:../main.c     **** 	int MOS_UP_State = DIGITAL_IO_GetInput(&MOS_UP);
 1483              	 .loc 3 448 0
 1484 0006 6A48     	 ldr r0,.L78
 1485 0008 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1486 000c 0346     	 mov r3,r0
 1487 000e 7B61     	 str r3,[r7,#20]
 449:../main.c     **** 	int MOS_DOWN_State = DIGITAL_IO_GetInput(&MOS_DOWN);
 1488              	 .loc 3 449 0
 1489 0010 6848     	 ldr r0,.L78+4
 1490 0012 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1491 0016 0346     	 mov r3,r0
 1492 0018 3B61     	 str r3,[r7,#16]
 450:../main.c     **** 	int nextState;
 451:../main.c     **** 	uint32_t status;
 452:../main.c     **** 	if (MOS_UP_State == 0)			// Up button is pressed, upward movement requested
 1493              	 .loc 3 452 0
 1494 001a 7B69     	 ldr r3,[r7,#20]
 1495 001c 002B     	 cmp r3,#0
 1496 001e 5ED1     	 bne .L64
 1497              	.LBB7:
 453:../main.c     **** 	{
 454:../main.c     **** 		while ((MOS_UP_State == 0) && (WindowState != 10))
 1498              	 .loc 3 454 0
 1499 0020 33E0     	 b .L65
 1500              	.L70:
 455:../main.c     **** 		{
 456:../main.c     **** 			nextState = (stateTimingVariables[WindowState + 1] - stateTimingVariables[WindowState]);	//calcu
 1501              	 .loc 3 456 0
 1502 0022 654B     	 ldr r3,.L78+8
 1503 0024 1B68     	 ldr r3,[r3]
 1504 0026 0133     	 adds r3,r3,#1
 1505 0028 644A     	 ldr r2,.L78+12
 1506 002a 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1507 002e 624B     	 ldr r3,.L78+8
 1508 0030 1B68     	 ldr r3,[r3]
 1509 0032 6249     	 ldr r1,.L78+12
 1510 0034 51F82330 	 ldr r3,[r1,r3,lsl#2]
 1511 0038 D31A     	 subs r3,r2,r3
 1512 003a FB60     	 str r3,[r7,#12]
 457:../main.c     **** 			TIMER_Start(&TIMER_Motor);
 1513              	 .loc 3 457 0
 1514 003c 6048     	 ldr r0,.L78+16
 1515 003e FFF7FEFF 	 bl TIMER_Start
 458:../main.c     **** 			while ((time < nextState) && (CheckTopLimitSwitch() == 1))		//drive motor up to next state, then
 1516              	 .loc 3 458 0
 1517 0042 05E0     	 b .L66
 1518              	.L68:
 459:../main.c     **** 			{
 460:../main.c     **** 				PWM_Start(&PWM_Motor);
 1519              	 .loc 3 460 0
 1520 0044 5F48     	 ldr r0,.L78+20
 1521 0046 FFF7FEFF 	 bl PWM_Start
 461:../main.c     **** 				DIGITAL_IO_SetOutputLow(&Motor_Direction); //Move up
 1522              	 .loc 3 461 0
 1523 004a 5F48     	 ldr r0,.L78+24
 1524 004c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1525              	.L66:
 458:../main.c     **** 			while ((time < nextState) && (CheckTopLimitSwitch() == 1))		//drive motor up to next state, then
 1526              	 .loc 3 458 0
 1527 0050 5E4B     	 ldr r3,.L78+28
 1528 0052 1A68     	 ldr r2,[r3]
 1529 0054 FB68     	 ldr r3,[r7,#12]
 1530 0056 9A42     	 cmp r2,r3
 1531 0058 04DA     	 bge .L67
 458:../main.c     **** 			while ((time < nextState) && (CheckTopLimitSwitch() == 1))		//drive motor up to next state, then
 1532              	 .loc 3 458 0 is_stmt 0 discriminator 1
 1533 005a FFF7FEFF 	 bl CheckTopLimitSwitch
 1534 005e 0346     	 mov r3,r0
 1535 0060 012B     	 cmp r3,#1
 1536 0062 EFD0     	 beq .L68
 1537              	.L67:
 462:../main.c     **** 			}
 463:../main.c     **** 			PWM_Stop(&PWM_Motor);
 1538              	 .loc 3 463 0 is_stmt 1
 1539 0064 5748     	 ldr r0,.L78+20
 1540 0066 FFF7FEFF 	 bl PWM_Stop
 464:../main.c     **** 			TIMER_Stop(&TIMER_Motor);
 1541              	 .loc 3 464 0
 1542 006a 5548     	 ldr r0,.L78+16
 1543 006c FFF7FEFF 	 bl TIMER_Stop
 465:../main.c     **** 			WindowState = WindowState + 1;
 1544              	 .loc 3 465 0
 1545 0070 514B     	 ldr r3,.L78+8
 1546 0072 1B68     	 ldr r3,[r3]
 1547 0074 0133     	 adds r3,r3,#1
 1548 0076 504A     	 ldr r2,.L78+8
 1549 0078 1360     	 str r3,[r2]
 466:../main.c     **** 			time = 0;
 1550              	 .loc 3 466 0
 1551 007a 544B     	 ldr r3,.L78+28
 1552 007c 0022     	 movs r2,#0
 1553 007e 1A60     	 str r2,[r3]
 467:../main.c     **** 			MOS_UP_State = DIGITAL_IO_GetInput(&MOS_UP);
 1554              	 .loc 3 467 0
 1555 0080 4B48     	 ldr r0,.L78
 1556 0082 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1557 0086 0346     	 mov r3,r0
 1558 0088 7B61     	 str r3,[r7,#20]
 1559              	.L65:
 454:../main.c     **** 		{
 1560              	 .loc 3 454 0
 1561 008a 7B69     	 ldr r3,[r7,#20]
 1562 008c 002B     	 cmp r3,#0
 1563 008e 03D1     	 bne .L69
 454:../main.c     **** 		{
 1564              	 .loc 3 454 0 is_stmt 0 discriminator 1
 1565 0090 494B     	 ldr r3,.L78+8
 1566 0092 1B68     	 ldr r3,[r3]
 1567 0094 0A2B     	 cmp r3,#10
 1568 0096 C4D1     	 bne .L70
 1569              	.L69:
 468:../main.c     **** 		}
 469:../main.c     **** 		int WindowStatePercentage = (WindowState * 10);
 1570              	 .loc 3 469 0 is_stmt 1
 1571 0098 474B     	 ldr r3,.L78+8
 1572 009a 1A68     	 ldr r2,[r3]
 1573 009c 1346     	 mov r3,r2
 1574 009e 9B00     	 lsls r3,r3,#2
 1575 00a0 1344     	 add r3,r3,r2
 1576 00a2 5B00     	 lsls r3,r3,#1
 1577 00a4 BB60     	 str r3,[r7,#8]
 470:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 1578              	 .loc 3 470 0
 1579 00a6 4A4B     	 ldr r3,.L78+32
 1580 00a8 1B68     	 ldr r3,[r3]
 1581 00aa 4A4A     	 ldr r2,.L78+36
 1582 00ac 1268     	 ldr r2,[r2]
 1583 00ae 92B2     	 uxth r2,r2
 1584 00b0 1A82     	 strh r2,[r3,#16]
 471:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x04;	//Status update
 1585              	 .loc 3 471 0
 1586 00b2 474B     	 ldr r3,.L78+32
 1587 00b4 1B68     	 ldr r3,[r3]
 1588 00b6 0422     	 movs r2,#4
 1589 00b8 5A82     	 strh r2,[r3,#18]
 472:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = WindowStatePercentage;
 1590              	 .loc 3 472 0
 1591 00ba 454B     	 ldr r3,.L78+32
 1592 00bc 1B68     	 ldr r3,[r3]
 1593 00be BA68     	 ldr r2,[r7,#8]
 1594 00c0 92B2     	 uxth r2,r2
 1595 00c2 9A82     	 strh r2,[r3,#20]
 473:../main.c     **** 		status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 1596              	 .loc 3 473 0
 1597 00c4 424B     	 ldr r3,.L78+32
 1598 00c6 1B68     	 ldr r3,[r3]
 1599 00c8 1846     	 mov r0,r3
 1600 00ca FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 1601 00ce 0346     	 mov r3,r0
 1602 00d0 7B60     	 str r3,[r7,#4]
 474:../main.c     **** 		status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 1603              	 .loc 3 474 0
 1604 00d2 3F48     	 ldr r0,.L78+32
 1605 00d4 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 1606 00d8 0346     	 mov r3,r0
 1607 00da 7B60     	 str r3,[r7,#4]
 1608              	.LBE7:
 1609 00dc 65E0     	 b .L63
 1610              	.L64:
 475:../main.c     **** 	}
 476:../main.c     **** 	else if (MOS_DOWN_State == 0) 	// Down button pressed, downward movement requested
 1611              	 .loc 3 476 0
 1612 00de 3B69     	 ldr r3,[r7,#16]
 1613 00e0 002B     	 cmp r3,#0
 1614 00e2 62D1     	 bne .L63
 1615              	.LBB8:
 477:../main.c     **** 	{
 478:../main.c     **** 		while ((MOS_DOWN_State == 0) && (WindowState != 0))
 1616              	 .loc 3 478 0
 1617 00e4 38E0     	 b .L72
 1618              	.L77:
 1619              	.LBB9:
 479:../main.c     **** 		{
 480:../main.c     **** 			nextState = (stateTimingVariables[WindowState - 1] - stateTimingVariables[WindowState]);
 1620              	 .loc 3 480 0
 1621 00e6 344B     	 ldr r3,.L78+8
 1622 00e8 1B68     	 ldr r3,[r3]
 1623 00ea 013B     	 subs r3,r3,#1
 1624 00ec 334A     	 ldr r2,.L78+12
 1625 00ee 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1626 00f2 314B     	 ldr r3,.L78+8
 1627 00f4 1B68     	 ldr r3,[r3]
 1628 00f6 3149     	 ldr r1,.L78+12
 1629 00f8 51F82330 	 ldr r3,[r1,r3,lsl#2]
 1630 00fc D31A     	 subs r3,r2,r3
 1631 00fe FB60     	 str r3,[r7,#12]
 481:../main.c     **** 			nextState = abs(nextState);
 1632              	 .loc 3 481 0
 1633 0100 FB68     	 ldr r3,[r7,#12]
 1634 0102 002B     	 cmp r3,#0
 1635 0104 B8BF     	 it lt
 1636 0106 5B42     	 rsblt r3,r3,#0
 1637 0108 FB60     	 str r3,[r7,#12]
 482:../main.c     **** 			TIMER_Start(&TIMER_Motor);
 1638              	 .loc 3 482 0
 1639 010a 2D48     	 ldr r0,.L78+16
 1640 010c FFF7FEFF 	 bl TIMER_Start
 483:../main.c     **** 			while ((time < nextState) && (CheckBottomLimitSwitch() == 1))
 1641              	 .loc 3 483 0
 1642 0110 05E0     	 b .L73
 1643              	.L75:
 484:../main.c     **** 			{
 485:../main.c     **** 				PWM_Start(&PWM_Motor);
 1644              	 .loc 3 485 0
 1645 0112 2C48     	 ldr r0,.L78+20
 1646 0114 FFF7FEFF 	 bl PWM_Start
 486:../main.c     **** 				DIGITAL_IO_SetOutputHigh(&Motor_Direction); //Move Down
 1647              	 .loc 3 486 0
 1648 0118 2B48     	 ldr r0,.L78+24
 1649 011a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1650              	.L73:
 483:../main.c     **** 			while ((time < nextState) && (CheckBottomLimitSwitch() == 1))
 1651              	 .loc 3 483 0
 1652 011e 2B4B     	 ldr r3,.L78+28
 1653 0120 1A68     	 ldr r2,[r3]
 1654 0122 FB68     	 ldr r3,[r7,#12]
 1655 0124 9A42     	 cmp r2,r3
 1656 0126 04DA     	 bge .L74
 483:../main.c     **** 			while ((time < nextState) && (CheckBottomLimitSwitch() == 1))
 1657              	 .loc 3 483 0 is_stmt 0 discriminator 1
 1658 0128 FFF7FEFF 	 bl CheckBottomLimitSwitch
 1659 012c 0346     	 mov r3,r0
 1660 012e 012B     	 cmp r3,#1
 1661 0130 EFD0     	 beq .L75
 1662              	.L74:
 487:../main.c     **** 			}
 488:../main.c     **** 			PWM_Stop(&PWM_Motor);
 1663              	 .loc 3 488 0 is_stmt 1
 1664 0132 2448     	 ldr r0,.L78+20
 1665 0134 FFF7FEFF 	 bl PWM_Stop
 489:../main.c     **** 			TIMER_Stop(&TIMER_Motor);
 1666              	 .loc 3 489 0
 1667 0138 2148     	 ldr r0,.L78+16
 1668 013a FFF7FEFF 	 bl TIMER_Stop
 490:../main.c     **** 			WindowState = WindowState - 1;
 1669              	 .loc 3 490 0
 1670 013e 1E4B     	 ldr r3,.L78+8
 1671 0140 1B68     	 ldr r3,[r3]
 1672 0142 013B     	 subs r3,r3,#1
 1673 0144 1C4A     	 ldr r2,.L78+8
 1674 0146 1360     	 str r3,[r2]
 491:../main.c     **** 			time = 0;
 1675              	 .loc 3 491 0
 1676 0148 204B     	 ldr r3,.L78+28
 1677 014a 0022     	 movs r2,#0
 1678 014c 1A60     	 str r2,[r3]
 492:../main.c     **** 			MOS_DOWN_State = DIGITAL_IO_GetInput(&MOS_DOWN);
 1679              	 .loc 3 492 0
 1680 014e 1948     	 ldr r0,.L78+4
 1681 0150 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1682 0154 0346     	 mov r3,r0
 1683 0156 3B61     	 str r3,[r7,#16]
 1684              	.L72:
 1685              	.LBE9:
 478:../main.c     **** 		{
 1686              	 .loc 3 478 0
 1687 0158 3B69     	 ldr r3,[r7,#16]
 1688 015a 002B     	 cmp r3,#0
 1689 015c 03D1     	 bne .L76
 478:../main.c     **** 		{
 1690              	 .loc 3 478 0 is_stmt 0 discriminator 1
 1691 015e 164B     	 ldr r3,.L78+8
 1692 0160 1B68     	 ldr r3,[r3]
 1693 0162 002B     	 cmp r3,#0
 1694 0164 BFD1     	 bne .L77
 1695              	.L76:
 493:../main.c     **** 		}
 494:../main.c     **** 		int WindowStatePercentage = (WindowState * 10);
 1696              	 .loc 3 494 0 is_stmt 1
 1697 0166 144B     	 ldr r3,.L78+8
 1698 0168 1A68     	 ldr r2,[r3]
 1699 016a 1346     	 mov r3,r2
 1700 016c 9B00     	 lsls r3,r3,#2
 1701 016e 1344     	 add r3,r3,r2
 1702 0170 5B00     	 lsls r3,r3,#1
 1703 0172 3B60     	 str r3,[r7]
 495:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 1704              	 .loc 3 495 0
 1705 0174 164B     	 ldr r3,.L78+32
 1706 0176 1B68     	 ldr r3,[r3]
 1707 0178 164A     	 ldr r2,.L78+36
 1708 017a 1268     	 ldr r2,[r2]
 1709 017c 92B2     	 uxth r2,r2
 1710 017e 1A82     	 strh r2,[r3,#16]
 496:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x04;	//Status update
 1711              	 .loc 3 496 0
 1712 0180 134B     	 ldr r3,.L78+32
 1713 0182 1B68     	 ldr r3,[r3]
 1714 0184 0422     	 movs r2,#4
 1715 0186 5A82     	 strh r2,[r3,#18]
 497:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = WindowStatePercentage;
 1716              	 .loc 3 497 0
 1717 0188 114B     	 ldr r3,.L78+32
 1718 018a 1B68     	 ldr r3,[r3]
 1719 018c 3A68     	 ldr r2,[r7]
 1720 018e 92B2     	 uxth r2,r2
 1721 0190 9A82     	 strh r2,[r3,#20]
 498:../main.c     **** 		status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 1722              	 .loc 3 498 0
 1723 0192 0F4B     	 ldr r3,.L78+32
 1724 0194 1B68     	 ldr r3,[r3]
 1725 0196 1846     	 mov r0,r3
 1726 0198 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 1727 019c 0346     	 mov r3,r0
 1728 019e 7B60     	 str r3,[r7,#4]
 499:../main.c     **** 		status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 1729              	 .loc 3 499 0
 1730 01a0 0B48     	 ldr r0,.L78+32
 1731 01a2 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 1732 01a6 0346     	 mov r3,r0
 1733 01a8 7B60     	 str r3,[r7,#4]
 1734              	.L63:
 1735              	.LBE8:
 500:../main.c     **** 	}
 501:../main.c     **** }
 1736              	 .loc 3 501 0
 1737 01aa 1837     	 adds r7,r7,#24
 1738              	.LCFI83:
 1739              	 .cfi_def_cfa_offset 8
 1740 01ac BD46     	 mov sp,r7
 1741              	.LCFI84:
 1742              	 .cfi_def_cfa_register 13
 1743              	 
 1744 01ae 80BD     	 pop {r7,pc}
 1745              	.L79:
 1746              	 .align 2
 1747              	.L78:
 1748 01b0 00000000 	 .word MOS_UP
 1749 01b4 00000000 	 .word MOS_DOWN
 1750 01b8 00000000 	 .word WindowState
 1751 01bc 00000000 	 .word stateTimingVariables
 1752 01c0 00000000 	 .word TIMER_Motor
 1753 01c4 00000000 	 .word PWM_Motor
 1754 01c8 00000000 	 .word Motor_Direction
 1755 01cc 00000000 	 .word time
 1756 01d0 00000000 	 .word React_Node_LMO_02_Config
 1757 01d4 00000000 	 .word MOTOR_MODULE_ID
 1758              	 .cfi_endproc
 1759              	.LFE313:
 1761              	 .text
 1762              	.Letext0:
 1763              	 .file 4 "c:\\users\\frank\\desktop\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1764              	 .file 5 "c:\\users\\frank\\desktop\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1765              	 .file 6 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 1766              	 .file 7 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc4_gpio.h"
 1767              	 .file 8 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc4_scu.h"
 1768              	 .file 9 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc_can.h"
 1769              	 .file 10 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/GLOBAL_CAN/global_can.h"
 1770              	 .file 11 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/CAN_NODE/can_node.h"
 1771              	 .file 12 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc_ccu4.h"
 1772              	 .file 13 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 1773              	 .file 14 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/PWM/pwm.h"
 1774              	 .file 15 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/TIMER/timer.h"
 1775              	 .file 16 "<built-in>"
 1776              	 .file 17 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/CMSIS/Include/cmsis_gcc.h"
 1777              	 .file 18 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/CMSIS/Include/core_cm4.h"
 1778              	 .file 19 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
 1779              	 .file 20 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 1780              	 .file 21 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/CAN_NODE/can_node_extern.h"
 1781              	 .file 22 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/PWM/PWM_Extern.h"
 1782              	 .file 23 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/TIMER/timer_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.XMC_GPIO_ToggleOutput:00000000 $t
    {standard input}:119    .text.XMC_GPIO_ToggleOutput:00000000 XMC_GPIO_ToggleOutput
    {standard input}:162    .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:166    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:210    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:214    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:254    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:258    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:297    .text.DIGITAL_IO_ToggleOutput:00000000 $t
    {standard input}:301    .text.DIGITAL_IO_ToggleOutput:00000000 DIGITAL_IO_ToggleOutput
    {standard input}:340    .text.DIGITAL_IO_GetInput:00000000 $t
    {standard input}:344    .text.DIGITAL_IO_GetInput:00000000 DIGITAL_IO_GetInput
    {standard input}:389    .data.top_button_state:00000000 top_button_state
    {standard input}:386    .data.top_button_state:00000000 $d
    {standard input}:396    .data.bottom_button_state:00000000 bottom_button_state
    {standard input}:393    .data.bottom_button_state:00000000 $d
    {standard input}:403    .data.MOTOR_MODULE_ID:00000000 MOTOR_MODULE_ID
    {standard input}:400    .data.MOTOR_MODULE_ID:00000000 $d
    {standard input}:410    .bss.isRegistered:00000000 isRegistered
    {standard input}:407    .bss.isRegistered:00000000 $d
    {standard input}:417    .bss.closedToOpenTime:00000000 closedToOpenTime
    {standard input}:414    .bss.closedToOpenTime:00000000 $d
    {standard input}:424    .bss.time:00000000 time
    {standard input}:421    .bss.time:00000000 $d
                            *COM*:00000004 WindowState
                            *COM*:0000002c stateTimingVariables
    {standard input}:429    .text.CAN0_1_IRQHandler:00000000 $t
    {standard input}:434    .text.CAN0_1_IRQHandler:00000000 CAN0_1_IRQHandler
    {standard input}:1134   .text.MoveWindow:00000000 MoveWindow
    {standard input}:656    .text.CAN0_1_IRQHandler:00000158 $d
    {standard input}:668    .text.CCU41_1_IRQHandler:00000000 $t
    {standard input}:673    .text.CCU41_1_IRQHandler:00000000 CCU41_1_IRQHandler
    {standard input}:706    .text.CCU41_1_IRQHandler:00000018 $d
    {standard input}:711    .text.main:00000000 $t
    {standard input}:716    .text.main:00000000 main
    {standard input}:750    .text.RegisterDevice:00000000 RegisterDevice
    {standard input}:817    .text.HomeWindow:00000000 HomeWindow
    {standard input}:1466   .text.ManualOverrideSwitches:00000000 ManualOverrideSwitches
    {standard input}:745    .text.RegisterDevice:00000000 $t
    {standard input}:803    .text.RegisterDevice:00000038 $d
    {standard input}:812    .text.HomeWindow:00000000 $t
    {standard input}:1403   .text.CheckBottomLimitSwitch:00000000 CheckBottomLimitSwitch
    {standard input}:1340   .text.CheckTopLimitSwitch:00000000 CheckTopLimitSwitch
    {standard input}:1101   .text.HomeWindow:00000228 $d
    {standard input}:1129   .text.MoveWindow:00000000 $t
    {standard input}:1323   .text.MoveWindow:00000104 $d
    {standard input}:1335   .text.CheckTopLimitSwitch:00000000 $t
    {standard input}:1391   .text.CheckTopLimitSwitch:00000030 $d
    {standard input}:1398   .text.CheckBottomLimitSwitch:00000000 $t
    {standard input}:1454   .text.CheckBottomLimitSwitch:00000030 $d
    {standard input}:1461   .text.ManualOverrideSwitches:00000000 $t
    {standard input}:1748   .text.ManualOverrideSwitches:000001b0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CAN_NODE_GetStatus
CAN_NODE_MO_GetStatus
CAN_NODE_MO_Receive
XMC_CAN_MO_UpdateData
CAN_NODE_MO_Transmit
React_Node
React_Node_LMO_01_Config
LED_Indicator
React_Node_LMO_02_Config
DAVE_Init
__aeabi_i2d
__aeabi_dmul
__aeabi_d2iz
TIMER_Start
PWM_Start
PWM_Stop
TIMER_Stop
TIMER_Motor
PWM_Motor
Motor_Direction
MOS_UP
MOS_DOWN
LIMIT_SWITCH_TOP
LIMIT_SWITCH_BOTTOM
