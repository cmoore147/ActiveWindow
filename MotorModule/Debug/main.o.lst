   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB139:
  26              	 .file 1 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE139:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB140:
 262:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE140:
 114 0022 00BF     	 .section .text.XMC_GPIO_ToggleOutput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_GPIO_ToggleOutput:
 120              	.LFB141:
 288:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 121              	 .loc 1 309 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 137 0008 0B46     	 mov r3,r1
 138 000a FB70     	 strb r3,[r7,#3]
 310:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 139              	 .loc 1 312 0
 140 000c FB78     	 ldrb r3,[r7,#3]
 141 000e 4FF00112 	 mov r2,#65537
 142 0012 9A40     	 lsls r2,r2,r3
 143 0014 7B68     	 ldr r3,[r7,#4]
 144 0016 5A60     	 str r2,[r3,#4]
 313:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
 145              	 .loc 1 313 0
 146 0018 0C37     	 adds r7,r7,#12
 147              	.LCFI15:
 148              	 .cfi_def_cfa_offset 4
 149 001a BD46     	 mov sp,r7
 150              	.LCFI16:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 001c 5DF8047B 	 ldr r7,[sp],#4
 154              	.LCFI17:
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 0020 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE141:
 161 0022 00BF     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
 162              	 .align 2
 163              	 .thumb
 164              	 .thumb_func
 166              	XMC_GPIO_GetInput:
 167              	.LFB142:
 314:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** {
 168              	 .loc 1 334 0
 169              	 .cfi_startproc
 170              	 
 171              	 
 172              	 
 173 0000 80B4     	 push {r7}
 174              	.LCFI18:
 175              	 .cfi_def_cfa_offset 4
 176              	 .cfi_offset 7,-4
 177 0002 83B0     	 sub sp,sp,#12
 178              	.LCFI19:
 179              	 .cfi_def_cfa_offset 16
 180 0004 00AF     	 add r7,sp,#0
 181              	.LCFI20:
 182              	 .cfi_def_cfa_register 7
 183 0006 7860     	 str r0,[r7,#4]
 184 0008 0B46     	 mov r3,r1
 185 000a FB70     	 strb r3,[r7,#3]
 335:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 186              	 .loc 1 337 0
 187 000c 7B68     	 ldr r3,[r7,#4]
 188 000e 5A6A     	 ldr r2,[r3,#36]
 189 0010 FB78     	 ldrb r3,[r7,#3]
 190 0012 22FA03F3 	 lsr r3,r2,r3
 191 0016 03F00103 	 and r3,r3,#1
 338:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc\xmc_gpio.h **** }
 192              	 .loc 1 338 0
 193 001a 1846     	 mov r0,r3
 194 001c 0C37     	 adds r7,r7,#12
 195              	.LCFI21:
 196              	 .cfi_def_cfa_offset 4
 197 001e BD46     	 mov sp,r7
 198              	.LCFI22:
 199              	 .cfi_def_cfa_register 13
 200              	 
 201 0020 5DF8047B 	 ldr r7,[sp],#4
 202              	.LCFI23:
 203              	 .cfi_restore 7
 204              	 .cfi_def_cfa_offset 0
 205 0024 7047     	 bx lr
 206              	 .cfi_endproc
 207              	.LFE142:
 209 0026 00BF     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 210              	 .align 2
 211              	 .thumb
 212              	 .thumb_func
 214              	DIGITAL_IO_SetOutputHigh:
 215              	.LFB147:
 216              	 .file 2 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 217              	 .loc 2 269 0
 218              	 .cfi_startproc
 219              	 
 220              	 
 221 0000 80B5     	 push {r7,lr}
 222              	.LCFI24:
 223              	 .cfi_def_cfa_offset 8
 224              	 .cfi_offset 7,-8
 225              	 .cfi_offset 14,-4
 226 0002 82B0     	 sub sp,sp,#8
 227              	.LCFI25:
 228              	 .cfi_def_cfa_offset 16
 229 0004 00AF     	 add r7,sp,#0
 230              	.LCFI26:
 231              	 .cfi_def_cfa_register 7
 232 0006 7860     	 str r0,[r7,#4]
 270:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 233              	 .loc 2 271 0
 234 0008 7B68     	 ldr r3,[r7,#4]
 235 000a 1A68     	 ldr r2,[r3]
 236 000c 7B68     	 ldr r3,[r7,#4]
 237 000e 1B7C     	 ldrb r3,[r3,#16]
 238 0010 1046     	 mov r0,r2
 239 0012 1946     	 mov r1,r3
 240 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 272:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 241              	 .loc 2 272 0
 242 0018 0837     	 adds r7,r7,#8
 243              	.LCFI27:
 244              	 .cfi_def_cfa_offset 8
 245 001a BD46     	 mov sp,r7
 246              	.LCFI28:
 247              	 .cfi_def_cfa_register 13
 248              	 
 249 001c 80BD     	 pop {r7,pc}
 250              	 .cfi_endproc
 251              	.LFE147:
 253 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 254              	 .align 2
 255              	 .thumb
 256              	 .thumb_func
 258              	DIGITAL_IO_SetOutputLow:
 259              	.LFB148:
 273:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 260              	 .loc 2 316 0
 261              	 .cfi_startproc
 262              	 
 263              	 
 264 0000 80B5     	 push {r7,lr}
 265              	.LCFI29:
 266              	 .cfi_def_cfa_offset 8
 267              	 .cfi_offset 7,-8
 268              	 .cfi_offset 14,-4
 269 0002 82B0     	 sub sp,sp,#8
 270              	.LCFI30:
 271              	 .cfi_def_cfa_offset 16
 272 0004 00AF     	 add r7,sp,#0
 273              	.LCFI31:
 274              	 .cfi_def_cfa_register 7
 275 0006 7860     	 str r0,[r7,#4]
 317:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 276              	 .loc 2 318 0
 277 0008 7B68     	 ldr r3,[r7,#4]
 278 000a 1A68     	 ldr r2,[r3]
 279 000c 7B68     	 ldr r3,[r7,#4]
 280 000e 1B7C     	 ldrb r3,[r3,#16]
 281 0010 1046     	 mov r0,r2
 282 0012 1946     	 mov r1,r3
 283 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 319:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 284              	 .loc 2 319 0
 285 0018 0837     	 adds r7,r7,#8
 286              	.LCFI32:
 287              	 .cfi_def_cfa_offset 8
 288 001a BD46     	 mov sp,r7
 289              	.LCFI33:
 290              	 .cfi_def_cfa_register 13
 291              	 
 292 001c 80BD     	 pop {r7,pc}
 293              	 .cfi_endproc
 294              	.LFE148:
 296 001e 00BF     	 .section .text.DIGITAL_IO_ToggleOutput,"ax",%progbits
 297              	 .align 2
 298              	 .thumb
 299              	 .thumb_func
 301              	DIGITAL_IO_ToggleOutput:
 302              	.LFB149:
 320:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 321:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 322:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 323:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 324:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 325:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 326:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 327:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 328:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 329:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 330:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 331:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 332:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 333:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 334:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 335:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 336:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 337:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 338:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 339:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 340:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 341:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 342:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 343:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 344:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 345:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 346:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 347:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 348:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 349:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 350:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 351:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 352:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 353:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 354:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 355:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 356:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 357:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 358:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 359:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 360:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 361:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 363:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 364:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 365:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 366:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 367:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 368:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 303              	 .loc 2 368 0
 304              	 .cfi_startproc
 305              	 
 306              	 
 307 0000 80B5     	 push {r7,lr}
 308              	.LCFI34:
 309              	 .cfi_def_cfa_offset 8
 310              	 .cfi_offset 7,-8
 311              	 .cfi_offset 14,-4
 312 0002 82B0     	 sub sp,sp,#8
 313              	.LCFI35:
 314              	 .cfi_def_cfa_offset 16
 315 0004 00AF     	 add r7,sp,#0
 316              	.LCFI36:
 317              	 .cfi_def_cfa_register 7
 318 0006 7860     	 str r0,[r7,#4]
 369:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 370:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 319              	 .loc 2 370 0
 320 0008 7B68     	 ldr r3,[r7,#4]
 321 000a 1A68     	 ldr r2,[r3]
 322 000c 7B68     	 ldr r3,[r7,#4]
 323 000e 1B7C     	 ldrb r3,[r3,#16]
 324 0010 1046     	 mov r0,r2
 325 0012 1946     	 mov r1,r3
 326 0014 FFF7FEFF 	 bl XMC_GPIO_ToggleOutput
 371:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 327              	 .loc 2 371 0
 328 0018 0837     	 adds r7,r7,#8
 329              	.LCFI37:
 330              	 .cfi_def_cfa_offset 8
 331 001a BD46     	 mov sp,r7
 332              	.LCFI38:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 001c 80BD     	 pop {r7,pc}
 336              	 .cfi_endproc
 337              	.LFE149:
 339 001e 00BF     	 .section .text.DIGITAL_IO_GetInput,"ax",%progbits
 340              	 .align 2
 341              	 .thumb
 342              	 .thumb_func
 344              	DIGITAL_IO_GetInput:
 345              	.LFB150:
 372:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 373:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 374:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to read input level of port pin.
 375:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 376:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return uint32_t input logic level. Range:0-1
 377:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 378:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 379:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 380:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 381:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 382:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  None
 383:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 384:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 385:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 386:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 387:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 388:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 389:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 390:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t pin_status;
 391:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_
 392:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 393:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 394:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 395:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 396:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 397:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 398:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 399:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 400:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 401:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 402:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 403:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 404:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 405:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 406:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     pin_status = DIGITAL_IO_GetInput(&DIGITAL_IO_0);
 407:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if(pin_status == 1)
 408:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 409:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 410:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 411:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     else
 412:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 413:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 414:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 415:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 416:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 417:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 418:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 419:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 420:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 421:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE uint32_t DIGITAL_IO_GetInput(const DIGITAL_IO_t *const handler)
 422:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 346              	 .loc 2 422 0
 347              	 .cfi_startproc
 348              	 
 349              	 
 350 0000 80B5     	 push {r7,lr}
 351              	.LCFI39:
 352              	 .cfi_def_cfa_offset 8
 353              	 .cfi_offset 7,-8
 354              	 .cfi_offset 14,-4
 355 0002 82B0     	 sub sp,sp,#8
 356              	.LCFI40:
 357              	 .cfi_def_cfa_offset 16
 358 0004 00AF     	 add r7,sp,#0
 359              	.LCFI41:
 360              	 .cfi_def_cfa_register 7
 361 0006 7860     	 str r0,[r7,#4]
 423:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_GetInput: handler null pointer", handler != NULL);
 424:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h ****   return XMC_GPIO_GetInput(handler->gpio_port, handler->gpio_pin);
 362              	 .loc 2 424 0
 363 0008 7B68     	 ldr r3,[r7,#4]
 364 000a 1A68     	 ldr r2,[r3]
 365 000c 7B68     	 ldr r3,[r7,#4]
 366 000e 1B7C     	 ldrb r3,[r3,#16]
 367 0010 1046     	 mov r0,r2
 368 0012 1946     	 mov r1,r3
 369 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 370 0018 0346     	 mov r3,r0
 425:C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 371              	 .loc 2 425 0
 372 001a 1846     	 mov r0,r3
 373 001c 0837     	 adds r7,r7,#8
 374              	.LCFI42:
 375              	 .cfi_def_cfa_offset 8
 376 001e BD46     	 mov sp,r7
 377              	.LCFI43:
 378              	 .cfi_def_cfa_register 13
 379              	 
 380 0020 80BD     	 pop {r7,pc}
 381              	 .cfi_endproc
 382              	.LFE150:
 384              	 .global top_button_state
 385 0022 00BF     	 .section .data.top_button_state,"aw",%progbits
 386              	 .align 2
 389              	top_button_state:
 390 0000 01000000 	 .word 1
 391              	 .global bottom_button_state
 392              	 .section .data.bottom_button_state,"aw",%progbits
 393              	 .align 2
 396              	bottom_button_state:
 397 0000 01000000 	 .word 1
 398              	 .global MOTOR_MODULE_ID
 399              	 .section .data.MOTOR_MODULE_ID,"aw",%progbits
 400              	 .align 2
 403              	MOTOR_MODULE_ID:
 404 0000 98020000 	 .word 664
 405              	 .global isRegistered
 406              	 .section .bss.isRegistered,"aw",%nobits
 407              	 .align 2
 410              	isRegistered:
 411 0000 00000000 	 .space 4
 412              	 .global closedToOpenTime
 413              	 .section .bss.closedToOpenTime,"aw",%nobits
 414              	 .align 2
 417              	closedToOpenTime:
 418 0000 00000000 	 .space 4
 419              	 .global time
 420              	 .section .bss.time,"aw",%nobits
 421              	 .align 2
 424              	time:
 425 0000 00000000 	 .space 4
 426              	 .comm WindowState,4,4
 427              	 .comm stateTimingVariables,44,4
 428              	 .section .text.CAN0_1_IRQHandler,"ax",%progbits
 429              	 .align 2
 430              	 .global CAN0_1_IRQHandler
 431              	 .thumb
 432              	 .thumb_func
 434              	CAN0_1_IRQHandler:
 435              	.LFB305:
 436              	 .file 3 "../main.c"
   1:../main.c     **** ///*******************************************************************************
   2:../main.c     **** // Copyright (c) 2015, Infineon Technologies AG                                 **
   3:../main.c     **** // All rights reserved.                                                         **
   4:../main.c     **** //                                                                              **
   5:../main.c     **** // Redistribution and use in source and binary forms, with or without           **
   6:../main.c     **** // modification,are permitted provided that the following conditions are met:   **
   7:../main.c     **** //                                                                              **
   8:../main.c     **** // *Redistributions of source code must retain the above copyright notice,      **
   9:../main.c     **** // this list of conditions and the following disclaimer.                        **
  10:../main.c     **** // *Redistributions in binary form must reproduce the above copyright notice,   **
  11:../main.c     **** // this list of conditions and the following disclaimer in the documentation    **
  12:../main.c     **** // and/or other materials provided with the distribution.                       **
  13:../main.c     **** // *Neither the name of the copyright holders nor the names of its contributors **
  14:../main.c     **** // may be used to endorse or promote products derived from this software without**
  15:../main.c     **** // specific prior written permission.                                           **
  16:../main.c     **** //                                                                              **
  17:../main.c     **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  18:../main.c     **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  19:../main.c     **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  20:../main.c     **** // ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  21:../main.c     **** // LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  22:../main.c     **** // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  23:../main.c     **** // SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  24:../main.c     **** // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  25:../main.c     **** // CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  26:../main.c     **** // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  27:../main.c     **** // POSSIBILITY OF SUCH DAMAGE.                                                  **
  28:../main.c     **** //                                                                              **
  29:../main.c     **** // To improve the quality of the software, users are encouraged to share        **
  30:../main.c     **** // modifications, enhancements or bug fixes with Infineon Technologies AG       **
  31:../main.c     **** // dave@infineon.com).                                                          **
  32:../main.c     **** //                                                                              **
  33:../main.c     **** //********************************************************************************
  34:../main.c     **** //**                                                                            **
  35:../main.c     **** //**                                                                            **
  36:../main.c     **** //** PLATFORM : Infineon XMC4500 Series                                         **
  37:../main.c     **** //**                                                                            **
  38:../main.c     **** //** AUTHOR : Application Engineering Team                                      **
  39:../main.c     **** //**                                                                            **
  40:../main.c     **** //** version 4.0.0  Initial version                                             **
  41:../main.c     **** //**         4.1.2  Modified for APP updates                                    **
  42:../main.c     **** //**         4.1.4  Modified for APP updates									  **
  43:../main.c     **** //**                                                                            **
  44:../main.c     **** //** MODIFICATION DATE : OCT, 30, 2015                                          **
  45:../main.c     **** //**                                                                            **
  46:../main.c     **** //*******************************************************************************/
  47:../main.c     **** //
  48:../main.c     **** //#include <DAVE.h>			//Declarations from DAVE Code Generation (includes SFR declaration)
  49:../main.c     **** //
  50:../main.c     **** ///*
  51:../main.c     **** // * This Example shows transmission and reception of data frames
  52:../main.c     **** // * between two CAN nodes of the MultiCAN peripheral in Loop-Back Mode.
  53:../main.c     **** // */
  54:../main.c     **** //
  55:../main.c     **** //
  56:../main.c     **** //uint32_t led_state = 0;
  57:../main.c     **** //uint32_t button_state = 1;
  58:../main.c     **** //
  59:../main.c     **** //void React_Node_Handler() {
  60:../main.c     **** //	/* Check for Node error */
  61:../main.c     **** //	if(CAN_NODE_GetStatus(&React_Node) & XMC_CAN_NODE_STATUS_LAST_ERROR_CODE)
  62:../main.c     **** //	{}
  63:../main.c     **** //	else if(CAN_NODE_MO_GetStatus(&React_Node_LMO_01_Config) & XMC_CAN_MO_STATUS_RX_PENDING)
  64:../main.c     **** //	{
  65:../main.c     **** //		/* Read the received Message object and stores in Request_Node_LMO_02_Config*/
  66:../main.c     **** //
  67:../main.c     **** //		CAN_NODE_MO_Receive(&React_Node_LMO_01_Config);
  68:../main.c     **** //
  69:../main.c     **** //		if (React_Node_LMO_01_Config.mo_ptr->can_data_byte[0] == 0x01) { // Turn on LED
  70:../main.c     **** //			DIGITAL_IO_SetOutputHigh(&LED_Indicator);
  71:../main.c     **** //		}
  72:../main.c     **** //		else { // Turn off LED
  73:../main.c     **** //			DIGITAL_IO_SetOutputLow(&LED_Indicator);
  74:../main.c     **** //		}
  75:../main.c     **** //
  76:../main.c     **** //	 /* Switch on LED Pin 3.9  to indicate that the requested message is received*/
  77:../main.c     **** //	 //DIGITAL_IO_ToggleOutput(&LED_Indicator);
  78:../main.c     **** //	}
  79:../main.c     **** //
  80:../main.c     **** //}
  81:../main.c     **** //
  82:../main.c     **** ////void Send_CAN_React() {
  83:../main.c     **** ////
  84:../main.c     **** ////}
  85:../main.c     **** //
  86:../main.c     **** //void Read_Button() {
  87:../main.c     **** //	// check if state has changed
  88:../main.c     **** //	if (button_state != DIGITAL_IO_GetInput(&BoardButton)) {
  89:../main.c     **** //		button_state = DIGITAL_IO_GetInput(&BoardButton);
  90:../main.c     **** //
  91:../main.c     **** //		if (button_state == 0) { // send message to turn led on
  92:../main.c     **** //			React_Node_LMO_02_Config.mo_ptr->can_data_byte[0] = 0x01;
  93:../main.c     **** //		} else { // send message to turn led off
  94:../main.c     **** //			React_Node_LMO_02_Config.mo_ptr->can_data_byte[0] = 0x00;
  95:../main.c     **** //		}
  96:../main.c     **** //
  97:../main.c     **** //		uint32_t status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
  98:../main.c     **** //		status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
  99:../main.c     **** //	}
 100:../main.c     **** //}
 101:../main.c     **** //
 102:../main.c     **** //int main(void)
 103:../main.c     **** //{
 104:../main.c     **** //
 105:../main.c     **** //  DAVE_Init();		/* Initialization of DAVE APPs  */
 106:../main.c     **** //
 107:../main.c     **** //  uint32_t TimerId = (uint32_t)SYSTIMER_CreateTimer(100000U,SYSTIMER_MODE_PERIODIC,(void*)Read_Bu
 108:../main.c     **** //  SYSTIMER_StartTimer(TimerId);
 109:../main.c     **** //
 110:../main.c     **** //  //CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 111:../main.c     **** //
 112:../main.c     **** //  while(1U);
 113:../main.c     **** //  return 0;
 114:../main.c     **** //}
 115:../main.c     **** //
 116:../main.c     **** /////*
 117:../main.c     **** //// * This function is the Interrupt Event Handler for the CAN Node Request
 118:../main.c     **** //// *
 119:../main.c     **** //// */
 120:../main.c     **** ////void Request_Node_Interrupt()
 121:../main.c     **** ////{
 122:../main.c     **** ////  /* Check for Node error */
 123:../main.c     **** ////  if(CAN_NODE_GetStatus(&Request_Node) & XMC_CAN_NODE_STATUS_LAST_ERROR_CODE)
 124:../main.c     **** ////  {}
 125:../main.c     **** ////  else if(CAN_NODE_MO_GetStatus(&Request_Node_LMO_02_Config) & XMC_CAN_MO_STATUS_RX_PENDING)
 126:../main.c     **** ////  {
 127:../main.c     **** ////     /* Read the received Message object and stores in Request_Node_LMO_02_Config*/
 128:../main.c     **** ////
 129:../main.c     **** ////	  CAN_NODE_MO_Receive(&Request_Node_LMO_02_Config);
 130:../main.c     **** ////
 131:../main.c     **** ////	  if (Request_Node_LMO_02_Config.mo_ptr->can_data_byte[0] == 0x01) { // Turn on LED
 132:../main.c     **** ////		  DIGITAL_IO_SetOutputHigh(&LED_Indicator);
 133:../main.c     **** ////	  }
 134:../main.c     **** ////	  else { // Turn off LED
 135:../main.c     **** ////		  DIGITAL_IO_SetOutputLow(&LED_Indicator);
 136:../main.c     **** ////	  }
 137:../main.c     **** ////
 138:../main.c     **** ////     /* Switch on LED Pin 3.9  to indicate that the requested message is received*/
 139:../main.c     **** ////     //DIGITAL_IO_ToggleOutput(&LED_Indicator);
 140:../main.c     **** ////  }
 141:../main.c     **** ////
 142:../main.c     **** ////}
 143:../main.c     **** ////
 144:../main.c     **** ///////*
 145:../main.c     **** //// * This function is the Interrupt Event Handler for the CAN Node React
 146:../main.c     **** //// */
 147:../main.c     **** 
 148:../main.c     **** /*******************************************************************************
 149:../main.c     ****  Copyright (c) 2015, Infineon Technologies AG                                 **
 150:../main.c     ****  All rights reserved.                                                         **
 151:../main.c     ****                                                                               **
 152:../main.c     ****  Redistribution and use in source and binary forms, with or without           **
 153:../main.c     ****  modification,are permitted provided that the following conditions are met:   **
 154:../main.c     ****                                                                               **
 155:../main.c     ****  *Redistributions of source code must retain the above copyright notice,      **
 156:../main.c     ****  this list of conditions and the following disclaimer.                        **
 157:../main.c     ****  *Redistributions in binary form must reproduce the above copyright notice,   **
 158:../main.c     ****  this list of conditions and the following disclaimer in the documentation    **
 159:../main.c     ****  and/or other materials provided with the distribution.                       **
 160:../main.c     ****  *Neither the name of the copyright holders nor the names of its contributors **
 161:../main.c     ****  may be used to endorse or promote products derived from this software without**
 162:../main.c     ****  specific prior written permission.                                           **
 163:../main.c     ****                                                                               **
 164:../main.c     ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
 165:../main.c     ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
 166:../main.c     ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
 167:../main.c     ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
 168:../main.c     ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
 169:../main.c     ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
 170:../main.c     ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
 171:../main.c     ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
 172:../main.c     ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
 173:../main.c     ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
 174:../main.c     ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
 175:../main.c     ****                                                                               **
 176:../main.c     ****  To improve the quality of the software, users are encouraged to share        **
 177:../main.c     ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
 178:../main.c     ****  dave@infineon.com).                                                          **
 179:../main.c     ****                                                                               **
 180:../main.c     **** ********************************************************************************
 181:../main.c     **** **                                                                            **
 182:../main.c     **** **                                                                            **
 183:../main.c     **** ** PLATFORM : Infineon XMC4500 Series                                         **
 184:../main.c     **** **                                                                            **
 185:../main.c     **** ** AUTHOR : Application Engineering Team                                      **
 186:../main.c     **** **                                                                            **
 187:../main.c     **** ** version 4.0.0  Initial version                                             **
 188:../main.c     **** **         4.1.2  Modified for APP updates                                    **
 189:../main.c     **** **         4.1.4  Modified for APP updates									  **
 190:../main.c     **** **                                                                            **
 191:../main.c     **** ** MODIFICATION DATE : OCT, 30, 2015                                          **
 192:../main.c     **** **                                                                            **
 193:../main.c     **** *******************************************************************************/
 194:../main.c     **** 
 195:../main.c     **** #include <DAVE.h>			//Declarations from DAVE Code Generation (includes SFR declaration)
 196:../main.c     **** #include <stdio.h>
 197:../main.c     **** 
 198:../main.c     **** // Globals
 199:../main.c     **** uint32_t top_button_state = 1;
 200:../main.c     **** uint32_t bottom_button_state = 1;
 201:../main.c     **** int MOTOR_MODULE_ID = 664;	//ID of this motor module device
 202:../main.c     **** int isRegistered = 0;		//Initially 0, will be 1 once registered with NMC
 203:../main.c     **** int closedToOpenTime = 0;	//Initially 0, will be set by homing routine
 204:../main.c     **** 
 205:../main.c     **** //Time Variable
 206:../main.c     **** int time = 0;
 207:../main.c     **** 
 208:../main.c     **** //State Variables
 209:../main.c     **** int WindowState;			//Current state of window (0 = closed, 10 = fully open)
 210:../main.c     **** int stateTimingVariables[11];	//Contains variables for time to take to move to certain location
 211:../main.c     **** 
 212:../main.c     **** // Function Prototypes
 213:../main.c     **** //void initialise_monitor_handles();
 214:../main.c     **** void RegisterDevice();
 215:../main.c     **** int HomeWindow();
 216:../main.c     **** int MoveWindow(int percentage);
 217:../main.c     **** int CheckTopLimitSwitch();
 218:../main.c     **** int CheckBottomLimitSwitch();
 219:../main.c     **** void ManualOverrideSwitches();
 220:../main.c     **** 
 221:../main.c     **** void React_Node_Handler() {
 437              	 .loc 3 221 0
 438              	 .cfi_startproc
 439              	 
 440              	 
 441 0000 80B5     	 push {r7,lr}
 442              	.LCFI44:
 443              	 .cfi_def_cfa_offset 8
 444              	 .cfi_offset 7,-8
 445              	 .cfi_offset 14,-4
 446 0002 88B0     	 sub sp,sp,#32
 447              	.LCFI45:
 448              	 .cfi_def_cfa_offset 40
 449 0004 00AF     	 add r7,sp,#0
 450              	.LCFI46:
 451              	 .cfi_def_cfa_register 7
 222:../main.c     **** 	/* Check for Node error */
 223:../main.c     **** 	uint32_t status;
 224:../main.c     **** 	if(CAN_NODE_GetStatus(&React_Node) & XMC_CAN_NODE_STATUS_LAST_ERROR_CODE)
 452              	 .loc 3 224 0
 453 0006 5748     	 ldr r0,.L17
 454 0008 FFF7FEFF 	 bl CAN_NODE_GetStatus
 455 000c 0346     	 mov r3,r0
 456 000e 03F00703 	 and r3,r3,#7
 457 0012 002B     	 cmp r3,#0
 458 0014 40F0A380 	 bne .L11
 225:../main.c     **** 	{}
 226:../main.c     **** 	else if(CAN_NODE_MO_GetStatus(&React_Node_LMO_01_Config) & XMC_CAN_MO_STATUS_RX_PENDING)
 459              	 .loc 3 226 0
 460 0018 5348     	 ldr r0,.L17+4
 461 001a FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 462 001e 0346     	 mov r3,r0
 463 0020 03F00103 	 and r3,r3,#1
 464 0024 002B     	 cmp r3,#0
 465 0026 00F09A80 	 beq .L11
 466              	.LBB2:
 227:../main.c     **** 	{
 228:../main.c     **** 		/* Read the received Message object and stores in Request_Node_LMO_02_Config*/
 229:../main.c     **** 		CAN_NODE_MO_Receive(&React_Node_LMO_01_Config);
 467              	 .loc 3 229 0
 468 002a 4F48     	 ldr r0,.L17+4
 469 002c FFF7FEFF 	 bl CAN_NODE_MO_Receive
 230:../main.c     **** 		int requestedID = React_Node_LMO_01_Config.mo_ptr->can_data_word[0];	//grab 0th byte
 470              	 .loc 3 230 0
 471 0030 4D4B     	 ldr r3,.L17+4
 472 0032 1B68     	 ldr r3,[r3]
 473 0034 1B8A     	 ldrh r3,[r3,#16]
 474 0036 FB61     	 str r3,[r7,#28]
 231:../main.c     **** 
 232:../main.c     **** 		if(requestedID == MOTOR_MODULE_ID)		//Check if ID requested is equal to this motor module
 475              	 .loc 3 232 0
 476 0038 4C4B     	 ldr r3,.L17+8
 477 003a 1B68     	 ldr r3,[r3]
 478 003c FA69     	 ldr r2,[r7,#28]
 479 003e 9A42     	 cmp r2,r3
 480 0040 40F08D80 	 bne .L11
 481              	.LBB3:
 233:../main.c     **** 		{
 234:../main.c     **** 			int requestedCommand = React_Node_LMO_01_Config.mo_ptr->can_data_word[1];	//grab 1st byte
 482              	 .loc 3 234 0
 483 0044 484B     	 ldr r3,.L17+4
 484 0046 1B68     	 ldr r3,[r3]
 485 0048 5B8A     	 ldrh r3,[r3,#18]
 486 004a BB61     	 str r3,[r7,#24]
 235:../main.c     **** 			DIGITAL_IO_ToggleOutput(&LED_Indicator);
 487              	 .loc 3 235 0
 488 004c 4848     	 ldr r0,.L17+12
 489 004e FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 236:../main.c     **** 			if(requestedCommand == 752)		//operate window
 490              	 .loc 3 236 0
 491 0052 BB69     	 ldr r3,[r7,#24]
 492 0054 B3F53C7F 	 cmp r3,#752
 493 0058 54D1     	 bne .L13
 494              	.LBB4:
 237:../main.c     **** 			{
 238:../main.c     **** 				int requestedPercentage = React_Node_LMO_01_Config.mo_ptr->can_data_word[2];	//grab 2nd byte
 495              	 .loc 3 238 0
 496 005a 434B     	 ldr r3,.L17+4
 497 005c 1B68     	 ldr r3,[r3]
 498 005e 9B8A     	 ldrh r3,[r3,#20]
 499 0060 7B61     	 str r3,[r7,#20]
 239:../main.c     **** 				requestedPercentage = (requestedPercentage / 10);
 500              	 .loc 3 239 0
 501 0062 7B69     	 ldr r3,[r7,#20]
 502 0064 434A     	 ldr r2,.L17+16
 503 0066 82FB0312 	 smull r1,r2,r2,r3
 504 006a 9210     	 asrs r2,r2,#2
 505 006c DB17     	 asrs r3,r3,#31
 506 006e D31A     	 subs r3,r2,r3
 507 0070 7B61     	 str r3,[r7,#20]
 240:../main.c     **** 				int windowMovementStatus = MoveWindow(requestedPercentage);
 508              	 .loc 3 240 0
 509 0072 7869     	 ldr r0,[r7,#20]
 510 0074 FFF7FEFF 	 bl MoveWindow
 511 0078 3861     	 str r0,[r7,#16]
 241:../main.c     **** 				if(windowMovementStatus == 0)		//Failed Command, either something weird happened or MOS is doin
 512              	 .loc 3 241 0
 513 007a 3B69     	 ldr r3,[r7,#16]
 514 007c 002B     	 cmp r3,#0
 515 007e 1AD1     	 bne .L14
 242:../main.c     **** 				{
 243:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 516              	 .loc 3 243 0
 517 0080 3D4B     	 ldr r3,.L17+20
 518 0082 1B68     	 ldr r3,[r3]
 519 0084 394A     	 ldr r2,.L17+8
 520 0086 1268     	 ldr r2,[r2]
 521 0088 92B2     	 uxth r2,r2
 522 008a 1A82     	 strh r2,[r3,#16]
 244:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x02;
 523              	 .loc 3 244 0
 524 008c 3A4B     	 ldr r3,.L17+20
 525 008e 1B68     	 ldr r3,[r3]
 526 0090 0222     	 movs r2,#2
 527 0092 5A82     	 strh r2,[r3,#18]
 245:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = 1;	//Failed Command
 528              	 .loc 3 245 0
 529 0094 384B     	 ldr r3,.L17+20
 530 0096 1B68     	 ldr r3,[r3]
 531 0098 0122     	 movs r2,#1
 532 009a 9A82     	 strh r2,[r3,#20]
 246:../main.c     **** 					status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 533              	 .loc 3 246 0
 534 009c 364B     	 ldr r3,.L17+20
 535 009e 1B68     	 ldr r3,[r3]
 536 00a0 1846     	 mov r0,r3
 537 00a2 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 538 00a6 0346     	 mov r3,r0
 539 00a8 FB60     	 str r3,[r7,#12]
 247:../main.c     **** 					status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 540              	 .loc 3 247 0
 541 00aa 3348     	 ldr r0,.L17+20
 542 00ac FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 543 00b0 0346     	 mov r3,r0
 544 00b2 FB60     	 str r3,[r7,#12]
 545 00b4 25E0     	 b .L15
 546              	.L14:
 248:../main.c     **** 				}
 249:../main.c     **** 				else if(windowMovementStatus == 1)	//Successful Command :)
 547              	 .loc 3 249 0
 548 00b6 3B69     	 ldr r3,[r7,#16]
 549 00b8 012B     	 cmp r3,#1
 550 00ba 22D1     	 bne .L15
 551              	.LBB5:
 250:../main.c     **** 				{
 251:../main.c     **** 					int WindowStatePercentage = (WindowState * 10);
 552              	 .loc 3 251 0
 553 00bc 2F4B     	 ldr r3,.L17+24
 554 00be 1A68     	 ldr r2,[r3]
 555 00c0 1346     	 mov r3,r2
 556 00c2 9B00     	 lsls r3,r3,#2
 557 00c4 1344     	 add r3,r3,r2
 558 00c6 5B00     	 lsls r3,r3,#1
 559 00c8 BB60     	 str r3,[r7,#8]
 252:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 560              	 .loc 3 252 0
 561 00ca 2B4B     	 ldr r3,.L17+20
 562 00cc 1B68     	 ldr r3,[r3]
 563 00ce 274A     	 ldr r2,.L17+8
 564 00d0 1268     	 ldr r2,[r2]
 565 00d2 92B2     	 uxth r2,r2
 566 00d4 1A82     	 strh r2,[r3,#16]
 253:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x04;
 567              	 .loc 3 253 0
 568 00d6 284B     	 ldr r3,.L17+20
 569 00d8 1B68     	 ldr r3,[r3]
 570 00da 0422     	 movs r2,#4
 571 00dc 5A82     	 strh r2,[r3,#18]
 254:../main.c     **** 					React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = WindowStatePercentage;	//Successful Comman
 572              	 .loc 3 254 0
 573 00de 264B     	 ldr r3,.L17+20
 574 00e0 1B68     	 ldr r3,[r3]
 575 00e2 BA68     	 ldr r2,[r7,#8]
 576 00e4 92B2     	 uxth r2,r2
 577 00e6 9A82     	 strh r2,[r3,#20]
 255:../main.c     **** 					status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 578              	 .loc 3 255 0
 579 00e8 234B     	 ldr r3,.L17+20
 580 00ea 1B68     	 ldr r3,[r3]
 581 00ec 1846     	 mov r0,r3
 582 00ee FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 583 00f2 0346     	 mov r3,r0
 584 00f4 FB60     	 str r3,[r7,#12]
 256:../main.c     **** 					status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 585              	 .loc 3 256 0
 586 00f6 2048     	 ldr r0,.L17+20
 587 00f8 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 588 00fc 0346     	 mov r3,r0
 589 00fe FB60     	 str r3,[r7,#12]
 590              	.LBE5:
 591              	.LBE4:
 592 0100 2DE0     	 b .L11
 593              	.L15:
 594 0102 2CE0     	 b .L11
 595              	.L13:
 257:../main.c     **** 				}
 258:../main.c     **** 			}
 259:../main.c     **** 			else if(requestedCommand == 0x02)	//Acknowledgment to our registration
 596              	 .loc 3 259 0
 597 0104 BB69     	 ldr r3,[r7,#24]
 598 0106 022B     	 cmp r3,#2
 599 0108 03D1     	 bne .L16
 260:../main.c     **** 			{
 261:../main.c     **** 				isRegistered = 1;
 600              	 .loc 3 261 0
 601 010a 1D4B     	 ldr r3,.L17+28
 602 010c 0122     	 movs r2,#1
 603 010e 1A60     	 str r2,[r3]
 604 0110 25E0     	 b .L11
 605              	.L16:
 262:../main.c     **** 			}
 263:../main.c     **** 			else if(requestedCommand == 996)	//state request
 606              	 .loc 3 263 0
 607 0112 BB69     	 ldr r3,[r7,#24]
 608 0114 B3F5797F 	 cmp r3,#996
 609 0118 21D1     	 bne .L11
 610              	.LBB6:
 264:../main.c     **** 			{
 265:../main.c     **** 				int WindowStatePercentage = (WindowState * 10);
 611              	 .loc 3 265 0
 612 011a 184B     	 ldr r3,.L17+24
 613 011c 1A68     	 ldr r2,[r3]
 614 011e 1346     	 mov r3,r2
 615 0120 9B00     	 lsls r3,r3,#2
 616 0122 1344     	 add r3,r3,r2
 617 0124 5B00     	 lsls r3,r3,#1
 618 0126 7B60     	 str r3,[r7,#4]
 266:../main.c     **** 
 267:../main.c     **** 				React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 619              	 .loc 3 267 0
 620 0128 134B     	 ldr r3,.L17+20
 621 012a 1B68     	 ldr r3,[r3]
 622 012c 0F4A     	 ldr r2,.L17+8
 623 012e 1268     	 ldr r2,[r2]
 624 0130 92B2     	 uxth r2,r2
 625 0132 1A82     	 strh r2,[r3,#16]
 268:../main.c     **** 				React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x04;	//Status update
 626              	 .loc 3 268 0
 627 0134 104B     	 ldr r3,.L17+20
 628 0136 1B68     	 ldr r3,[r3]
 629 0138 0422     	 movs r2,#4
 630 013a 5A82     	 strh r2,[r3,#18]
 269:../main.c     **** 				React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = WindowStatePercentage;
 631              	 .loc 3 269 0
 632 013c 0E4B     	 ldr r3,.L17+20
 633 013e 1B68     	 ldr r3,[r3]
 634 0140 7A68     	 ldr r2,[r7,#4]
 635 0142 92B2     	 uxth r2,r2
 636 0144 9A82     	 strh r2,[r3,#20]
 270:../main.c     **** 				status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 637              	 .loc 3 270 0
 638 0146 0C4B     	 ldr r3,.L17+20
 639 0148 1B68     	 ldr r3,[r3]
 640 014a 1846     	 mov r0,r3
 641 014c FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 642 0150 0346     	 mov r3,r0
 643 0152 FB60     	 str r3,[r7,#12]
 271:../main.c     **** 				status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 644              	 .loc 3 271 0
 645 0154 0848     	 ldr r0,.L17+20
 646 0156 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 647 015a 0346     	 mov r3,r0
 648 015c FB60     	 str r3,[r7,#12]
 649              	.L11:
 650              	.LBE6:
 651              	.LBE3:
 652              	.LBE2:
 272:../main.c     **** 			}
 273:../main.c     **** 		}
 274:../main.c     **** 	}
 275:../main.c     **** }
 653              	 .loc 3 275 0
 654 015e 2037     	 adds r7,r7,#32
 655              	.LCFI47:
 656              	 .cfi_def_cfa_offset 8
 657 0160 BD46     	 mov sp,r7
 658              	.LCFI48:
 659              	 .cfi_def_cfa_register 13
 660              	 
 661 0162 80BD     	 pop {r7,pc}
 662              	.L18:
 663              	 .align 2
 664              	.L17:
 665 0164 00000000 	 .word React_Node
 666 0168 00000000 	 .word React_Node_LMO_01_Config
 667 016c 00000000 	 .word MOTOR_MODULE_ID
 668 0170 00000000 	 .word LED_Indicator
 669 0174 67666666 	 .word 1717986919
 670 0178 00000000 	 .word React_Node_LMO_02_Config
 671 017c 00000000 	 .word WindowState
 672 0180 00000000 	 .word isRegistered
 673              	 .cfi_endproc
 674              	.LFE305:
 676              	 .section .text.CCU41_1_IRQHandler,"ax",%progbits
 677              	 .align 2
 678              	 .global CCU41_1_IRQHandler
 679              	 .thumb
 680              	 .thumb_func
 682              	CCU41_1_IRQHandler:
 683              	.LFB306:
 276:../main.c     **** 
 277:../main.c     **** void TimerHandler()
 278:../main.c     **** {
 684              	 .loc 3 278 0
 685              	 .cfi_startproc
 686              	 
 687              	 
 688              	 
 689 0000 80B4     	 push {r7}
 690              	.LCFI49:
 691              	 .cfi_def_cfa_offset 4
 692              	 .cfi_offset 7,-4
 693 0002 00AF     	 add r7,sp,#0
 694              	.LCFI50:
 695              	 .cfi_def_cfa_register 7
 279:../main.c     **** 	time++;
 696              	 .loc 3 279 0
 697 0004 044B     	 ldr r3,.L20
 698 0006 1B68     	 ldr r3,[r3]
 699 0008 0133     	 adds r3,r3,#1
 700 000a 034A     	 ldr r2,.L20
 701 000c 1360     	 str r3,[r2]
 280:../main.c     **** }
 702              	 .loc 3 280 0
 703 000e BD46     	 mov sp,r7
 704              	.LCFI51:
 705              	 .cfi_def_cfa_register 13
 706              	 
 707 0010 5DF8047B 	 ldr r7,[sp],#4
 708              	.LCFI52:
 709              	 .cfi_restore 7
 710              	 .cfi_def_cfa_offset 0
 711 0014 7047     	 bx lr
 712              	.L21:
 713 0016 00BF     	 .align 2
 714              	.L20:
 715 0018 00000000 	 .word time
 716              	 .cfi_endproc
 717              	.LFE306:
 719              	 .section .text.main,"ax",%progbits
 720              	 .align 2
 721              	 .global main
 722              	 .thumb
 723              	 .thumb_func
 725              	main:
 726              	.LFB307:
 281:../main.c     **** 
 282:../main.c     **** int main(void)
 283:../main.c     **** {
 727              	 .loc 3 283 0
 728              	 .cfi_startproc
 729              	 
 730              	 
 731 0000 80B5     	 push {r7,lr}
 732              	.LCFI53:
 733              	 .cfi_def_cfa_offset 8
 734              	 .cfi_offset 7,-8
 735              	 .cfi_offset 14,-4
 736 0002 00AF     	 add r7,sp,#0
 737              	.LCFI54:
 738              	 .cfi_def_cfa_register 7
 284:../main.c     **** 
 285:../main.c     ****   DAVE_Init();		/* Initialization of DAVE APPs  */
 739              	 .loc 3 285 0
 740 0004 FFF7FEFF 	 bl DAVE_Init
 286:../main.c     **** 
 287:../main.c     ****   // Startup functions
 288:../main.c     ****   RegisterDevice();
 741              	 .loc 3 288 0
 742 0008 FFF7FEFF 	 bl RegisterDevice
 289:../main.c     ****   HomeWindow();
 743              	 .loc 3 289 0
 744 000c FFF7FEFF 	 bl HomeWindow
 745              	.L23:
 290:../main.c     **** 
 291:../main.c     ****   // Function to initialize debug printing
 292:../main.c     ****   // initialise_monitor_handles();
 293:../main.c     **** 
 294:../main.c     **** //  MoveWindow(5);	// 50%
 295:../main.c     **** //  MoveWindow(0);	//0%
 296:../main.c     **** 
 297:../main.c     ****   while(1U)
 298:../main.c     ****   {
 299:../main.c     **** 	  ManualOverrideSwitches();
 746              	 .loc 3 299 0 discriminator 1
 747 0010 FFF7FEFF 	 bl ManualOverrideSwitches
 300:../main.c     ****   }
 748              	 .loc 3 300 0 discriminator 1
 749 0014 FCE7     	 b .L23
 750              	 .cfi_endproc
 751              	.LFE307:
 753 0016 00BF     	 .section .text.RegisterDevice,"ax",%progbits
 754              	 .align 2
 755              	 .global RegisterDevice
 756              	 .thumb
 757              	 .thumb_func
 759              	RegisterDevice:
 760              	.LFB308:
 301:../main.c     ****   return 0;
 302:../main.c     **** }
 303:../main.c     **** 
 304:../main.c     **** // Sends message to NMC on startup to register device
 305:../main.c     **** void RegisterDevice()
 306:../main.c     **** {
 761              	 .loc 3 306 0
 762              	 .cfi_startproc
 763              	 
 764              	 
 765 0000 80B5     	 push {r7,lr}
 766              	.LCFI55:
 767              	 .cfi_def_cfa_offset 8
 768              	 .cfi_offset 7,-8
 769              	 .cfi_offset 14,-4
 770 0002 82B0     	 sub sp,sp,#8
 771              	.LCFI56:
 772              	 .cfi_def_cfa_offset 16
 773 0004 00AF     	 add r7,sp,#0
 774              	.LCFI57:
 775              	 .cfi_def_cfa_register 7
 307:../main.c     **** 	React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 776              	 .loc 3 307 0
 777 0006 0C4B     	 ldr r3,.L25
 778 0008 1B68     	 ldr r3,[r3]
 779 000a 0C4A     	 ldr r2,.L25+4
 780 000c 1268     	 ldr r2,[r2]
 781 000e 92B2     	 uxth r2,r2
 782 0010 1A82     	 strh r2,[r3,#16]
 308:../main.c     **** 	React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x05;	//device registration
 783              	 .loc 3 308 0
 784 0012 094B     	 ldr r3,.L25
 785 0014 1B68     	 ldr r3,[r3]
 786 0016 0522     	 movs r2,#5
 787 0018 5A82     	 strh r2,[r3,#18]
 309:../main.c     **** 	uint32_t status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 788              	 .loc 3 309 0
 789 001a 074B     	 ldr r3,.L25
 790 001c 1B68     	 ldr r3,[r3]
 791 001e 1846     	 mov r0,r3
 792 0020 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 793 0024 0346     	 mov r3,r0
 794 0026 7B60     	 str r3,[r7,#4]
 310:../main.c     **** 	status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 795              	 .loc 3 310 0
 796 0028 0348     	 ldr r0,.L25
 797 002a FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 798 002e 0346     	 mov r3,r0
 799 0030 7B60     	 str r3,[r7,#4]
 311:../main.c     **** 
 312:../main.c     **** 	//TODO : Add delay until registered, retransmit after delay if not
 313:../main.c     **** 
 314:../main.c     **** }
 800              	 .loc 3 314 0
 801 0032 0837     	 adds r7,r7,#8
 802              	.LCFI58:
 803              	 .cfi_def_cfa_offset 8
 804 0034 BD46     	 mov sp,r7
 805              	.LCFI59:
 806              	 .cfi_def_cfa_register 13
 807              	 
 808 0036 80BD     	 pop {r7,pc}
 809              	.L26:
 810              	 .align 2
 811              	.L25:
 812 0038 00000000 	 .word React_Node_LMO_02_Config
 813 003c 00000000 	 .word MOTOR_MODULE_ID
 814              	 .cfi_endproc
 815              	.LFE308:
 817              	 .global __aeabi_i2d
 818              	 .global __aeabi_dmul
 819              	 .global __aeabi_d2iz
 820              	 .section .text.HomeWindow,"ax",%progbits
 821              	 .align 2
 822              	 .global HomeWindow
 823              	 .thumb
 824              	 .thumb_func
 826              	HomeWindow:
 827              	.LFB309:
 315:../main.c     **** 
 316:../main.c     **** //Homes the motor to acquire constants needed for operation. Also for tuning
 317:../main.c     **** int HomeWindow()
 318:../main.c     **** {
 828              	 .loc 3 318 0
 829              	 .cfi_startproc
 830              	 
 831              	 
 832 0000 80B5     	 push {r7,lr}
 833              	.LCFI60:
 834              	 .cfi_def_cfa_offset 8
 835              	 .cfi_offset 7,-8
 836              	 .cfi_offset 14,-4
 837 0002 82B0     	 sub sp,sp,#8
 838              	.LCFI61:
 839              	 .cfi_def_cfa_offset 16
 840 0004 00AF     	 add r7,sp,#0
 841              	.LCFI62:
 842              	 .cfi_def_cfa_register 7
 319:../main.c     **** 	int BottomLimitSwitchState = CheckBottomLimitSwitch();
 843              	 .loc 3 319 0
 844 0006 FFF7FEFF 	 bl CheckBottomLimitSwitch
 845 000a 7860     	 str r0,[r7,#4]
 320:../main.c     **** 
 321:../main.c     **** 	if (BottomLimitSwitchState == 0)		// TODO : Change to 0 bc 0 means button pressed
 846              	 .loc 3 321 0
 847 000c 7B68     	 ldr r3,[r7,#4]
 848 000e 002B     	 cmp r3,#0
 849 0010 27D1     	 bne .L28
 322:../main.c     **** 	{
 323:../main.c     **** 		TIMER_Start(&TIMER_Motor);
 850              	 .loc 3 323 0
 851 0012 9548     	 ldr r0,.L34+64
 852 0014 FFF7FEFF 	 bl TIMER_Start
 324:../main.c     **** 		while(CheckTopLimitSwitch() == 1)	//drive motor until top limit switch is reached
 853              	 .loc 3 324 0
 854 0018 05E0     	 b .L29
 855              	.L30:
 325:../main.c     **** 		{
 326:../main.c     **** 			PWM_Start(&PWM_Motor);
 856              	 .loc 3 326 0
 857 001a 9448     	 ldr r0,.L34+68
 858 001c FFF7FEFF 	 bl PWM_Start
 327:../main.c     **** 			DIGITAL_IO_SetOutputLow(&Motor_Direction); //Move up
 859              	 .loc 3 327 0
 860 0020 9348     	 ldr r0,.L34+72
 861 0022 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 862              	.L29:
 324:../main.c     **** 		while(CheckTopLimitSwitch() == 1)	//drive motor until top limit switch is reached
 863              	 .loc 3 324 0
 864 0026 FFF7FEFF 	 bl CheckTopLimitSwitch
 865 002a 0346     	 mov r3,r0
 866 002c 012B     	 cmp r3,#1
 867 002e F4D0     	 beq .L30
 328:../main.c     **** 		}
 329:../main.c     **** 		PWM_Stop(&PWM_Motor);
 868              	 .loc 3 329 0
 869 0030 8E48     	 ldr r0,.L34+68
 870 0032 FFF7FEFF 	 bl PWM_Stop
 330:../main.c     **** 		TIMER_Stop(&TIMER_Motor);
 871              	 .loc 3 330 0
 872 0036 8C48     	 ldr r0,.L34+64
 873 0038 FFF7FEFF 	 bl TIMER_Stop
 331:../main.c     **** 		closedToOpenTime = time;
 874              	 .loc 3 331 0
 875 003c 8D4B     	 ldr r3,.L34+76
 876 003e 1B68     	 ldr r3,[r3]
 877 0040 8D4A     	 ldr r2,.L34+80
 878 0042 1360     	 str r3,[r2]
 332:../main.c     **** 		while(CheckBottomLimitSwitch() == 1)
 879              	 .loc 3 332 0
 880 0044 05E0     	 b .L31
 881              	.L32:
 333:../main.c     **** 		{
 334:../main.c     **** 			PWM_Start(&PWM_Motor);
 882              	 .loc 3 334 0
 883 0046 8948     	 ldr r0,.L34+68
 884 0048 FFF7FEFF 	 bl PWM_Start
 335:../main.c     **** 			DIGITAL_IO_SetOutputHigh(&Motor_Direction);
 885              	 .loc 3 335 0
 886 004c 8848     	 ldr r0,.L34+72
 887 004e FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 888              	.L31:
 332:../main.c     **** 		while(CheckBottomLimitSwitch() == 1)
 889              	 .loc 3 332 0
 890 0052 FFF7FEFF 	 bl CheckBottomLimitSwitch
 891 0056 0346     	 mov r3,r0
 892 0058 012B     	 cmp r3,#1
 893 005a F4D0     	 beq .L32
 336:../main.c     **** 		}
 337:../main.c     **** 		PWM_Stop(&PWM_Motor);	//Turn off PWM once bottom reached
 894              	 .loc 3 337 0
 895 005c 8348     	 ldr r0,.L34+68
 896 005e FFF7FEFF 	 bl PWM_Stop
 897              	.L28:
 338:../main.c     **** 	}
 339:../main.c     **** 	WindowState = 0;	// Set initial state to zero
 898              	 .loc 3 339 0
 899 0062 864B     	 ldr r3,.L34+84
 900 0064 0022     	 movs r2,#0
 901 0066 1A60     	 str r2,[r3]
 340:../main.c     **** 	time = 0;			// reset global timer variable
 902              	 .loc 3 340 0
 903 0068 824B     	 ldr r3,.L34+76
 904 006a 0022     	 movs r2,#0
 905 006c 1A60     	 str r2,[r3]
 341:../main.c     **** 	// Create State table
 342:../main.c     **** 	stateTimingVariables[0]  = 0;								//0%
 906              	 .loc 3 342 0
 907 006e 844B     	 ldr r3,.L34+88
 908 0070 0022     	 movs r2,#0
 909 0072 1A60     	 str r2,[r3]
 343:../main.c     **** 	stateTimingVariables[1]  = (closedToOpenTime * (0.1));		//10%
 910              	 .loc 3 343 0
 911 0074 804B     	 ldr r3,.L34+80
 912 0076 1B68     	 ldr r3,[r3]
 913 0078 1846     	 mov r0,r3
 914 007a FFF7FEFF 	 bl __aeabi_i2d
 915 007e 0246     	 mov r2,r0
 916 0080 0B46     	 mov r3,r1
 917 0082 1046     	 mov r0,r2
 918 0084 1946     	 mov r1,r3
 919 0086 68A3     	 adr r3,.L34
 920 0088 D3E90023 	 ldrd r2,[r3]
 921 008c FFF7FEFF 	 bl __aeabi_dmul
 922 0090 0246     	 mov r2,r0
 923 0092 0B46     	 mov r3,r1
 924 0094 1046     	 mov r0,r2
 925 0096 1946     	 mov r1,r3
 926 0098 FFF7FEFF 	 bl __aeabi_d2iz
 927 009c 0246     	 mov r2,r0
 928 009e 784B     	 ldr r3,.L34+88
 929 00a0 5A60     	 str r2,[r3,#4]
 344:../main.c     **** 	stateTimingVariables[2]  = (closedToOpenTime * (0.2));		//20%
 930              	 .loc 3 344 0
 931 00a2 754B     	 ldr r3,.L34+80
 932 00a4 1B68     	 ldr r3,[r3]
 933 00a6 1846     	 mov r0,r3
 934 00a8 FFF7FEFF 	 bl __aeabi_i2d
 935 00ac 0246     	 mov r2,r0
 936 00ae 0B46     	 mov r3,r1
 937 00b0 1046     	 mov r0,r2
 938 00b2 1946     	 mov r1,r3
 939 00b4 5EA3     	 adr r3,.L34+8
 940 00b6 D3E90023 	 ldrd r2,[r3]
 941 00ba FFF7FEFF 	 bl __aeabi_dmul
 942 00be 0246     	 mov r2,r0
 943 00c0 0B46     	 mov r3,r1
 944 00c2 1046     	 mov r0,r2
 945 00c4 1946     	 mov r1,r3
 946 00c6 FFF7FEFF 	 bl __aeabi_d2iz
 947 00ca 0246     	 mov r2,r0
 948 00cc 6C4B     	 ldr r3,.L34+88
 949 00ce 9A60     	 str r2,[r3,#8]
 345:../main.c     **** 	stateTimingVariables[3]  = (closedToOpenTime * (0.3));		//30%
 950              	 .loc 3 345 0
 951 00d0 694B     	 ldr r3,.L34+80
 952 00d2 1B68     	 ldr r3,[r3]
 953 00d4 1846     	 mov r0,r3
 954 00d6 FFF7FEFF 	 bl __aeabi_i2d
 955 00da 0246     	 mov r2,r0
 956 00dc 0B46     	 mov r3,r1
 957 00de 1046     	 mov r0,r2
 958 00e0 1946     	 mov r1,r3
 959 00e2 55A3     	 adr r3,.L34+16
 960 00e4 D3E90023 	 ldrd r2,[r3]
 961 00e8 FFF7FEFF 	 bl __aeabi_dmul
 962 00ec 0246     	 mov r2,r0
 963 00ee 0B46     	 mov r3,r1
 964 00f0 1046     	 mov r0,r2
 965 00f2 1946     	 mov r1,r3
 966 00f4 FFF7FEFF 	 bl __aeabi_d2iz
 967 00f8 0246     	 mov r2,r0
 968 00fa 614B     	 ldr r3,.L34+88
 969 00fc DA60     	 str r2,[r3,#12]
 346:../main.c     **** 	stateTimingVariables[4]  = (closedToOpenTime * (0.4));		//40%
 970              	 .loc 3 346 0
 971 00fe 5E4B     	 ldr r3,.L34+80
 972 0100 1B68     	 ldr r3,[r3]
 973 0102 1846     	 mov r0,r3
 974 0104 FFF7FEFF 	 bl __aeabi_i2d
 975 0108 0246     	 mov r2,r0
 976 010a 0B46     	 mov r3,r1
 977 010c 1046     	 mov r0,r2
 978 010e 1946     	 mov r1,r3
 979 0110 4BA3     	 adr r3,.L34+24
 980 0112 D3E90023 	 ldrd r2,[r3]
 981 0116 FFF7FEFF 	 bl __aeabi_dmul
 982 011a 0246     	 mov r2,r0
 983 011c 0B46     	 mov r3,r1
 984 011e 1046     	 mov r0,r2
 985 0120 1946     	 mov r1,r3
 986 0122 FFF7FEFF 	 bl __aeabi_d2iz
 987 0126 0246     	 mov r2,r0
 988 0128 554B     	 ldr r3,.L34+88
 989 012a 1A61     	 str r2,[r3,#16]
 347:../main.c     **** 	stateTimingVariables[5]  = (closedToOpenTime * (0.5));		//50%
 990              	 .loc 3 347 0
 991 012c 524B     	 ldr r3,.L34+80
 992 012e 1B68     	 ldr r3,[r3]
 993 0130 1846     	 mov r0,r3
 994 0132 FFF7FEFF 	 bl __aeabi_i2d
 995 0136 0246     	 mov r2,r0
 996 0138 0B46     	 mov r3,r1
 997 013a 1046     	 mov r0,r2
 998 013c 1946     	 mov r1,r3
 999 013e 4FF00002 	 mov r2,#0
 1000 0142 504B     	 ldr r3,.L34+92
 1001 0144 FFF7FEFF 	 bl __aeabi_dmul
 1002 0148 0246     	 mov r2,r0
 1003 014a 0B46     	 mov r3,r1
 1004 014c 1046     	 mov r0,r2
 1005 014e 1946     	 mov r1,r3
 1006 0150 FFF7FEFF 	 bl __aeabi_d2iz
 1007 0154 0246     	 mov r2,r0
 1008 0156 4A4B     	 ldr r3,.L34+88
 1009 0158 5A61     	 str r2,[r3,#20]
 348:../main.c     **** 	stateTimingVariables[6]  = (closedToOpenTime * (0.6));		//60%
 1010              	 .loc 3 348 0
 1011 015a 474B     	 ldr r3,.L34+80
 1012 015c 1B68     	 ldr r3,[r3]
 1013 015e 1846     	 mov r0,r3
 1014 0160 FFF7FEFF 	 bl __aeabi_i2d
 1015 0164 0246     	 mov r2,r0
 1016 0166 0B46     	 mov r3,r1
 1017 0168 1046     	 mov r0,r2
 1018 016a 1946     	 mov r1,r3
 1019 016c 36A3     	 adr r3,.L34+32
 1020 016e D3E90023 	 ldrd r2,[r3]
 1021 0172 FFF7FEFF 	 bl __aeabi_dmul
 1022 0176 0246     	 mov r2,r0
 1023 0178 0B46     	 mov r3,r1
 1024 017a 1046     	 mov r0,r2
 1025 017c 1946     	 mov r1,r3
 1026 017e FFF7FEFF 	 bl __aeabi_d2iz
 1027 0182 0246     	 mov r2,r0
 1028 0184 3E4B     	 ldr r3,.L34+88
 1029 0186 9A61     	 str r2,[r3,#24]
 349:../main.c     **** 	stateTimingVariables[7]  = (closedToOpenTime * (0.7));		//70%
 1030              	 .loc 3 349 0
 1031 0188 3B4B     	 ldr r3,.L34+80
 1032 018a 1B68     	 ldr r3,[r3]
 1033 018c 1846     	 mov r0,r3
 1034 018e FFF7FEFF 	 bl __aeabi_i2d
 1035 0192 0246     	 mov r2,r0
 1036 0194 0B46     	 mov r3,r1
 1037 0196 1046     	 mov r0,r2
 1038 0198 1946     	 mov r1,r3
 1039 019a 2DA3     	 adr r3,.L34+40
 1040 019c D3E90023 	 ldrd r2,[r3]
 1041 01a0 FFF7FEFF 	 bl __aeabi_dmul
 1042 01a4 0246     	 mov r2,r0
 1043 01a6 0B46     	 mov r3,r1
 1044 01a8 1046     	 mov r0,r2
 1045 01aa 1946     	 mov r1,r3
 1046 01ac FFF7FEFF 	 bl __aeabi_d2iz
 1047 01b0 0246     	 mov r2,r0
 1048 01b2 334B     	 ldr r3,.L34+88
 1049 01b4 DA61     	 str r2,[r3,#28]
 350:../main.c     **** 	stateTimingVariables[8]  = (closedToOpenTime * (0.8));		//80%
 1050              	 .loc 3 350 0
 1051 01b6 304B     	 ldr r3,.L34+80
 1052 01b8 1B68     	 ldr r3,[r3]
 1053 01ba 1846     	 mov r0,r3
 1054 01bc FFF7FEFF 	 bl __aeabi_i2d
 1055 01c0 0246     	 mov r2,r0
 1056 01c2 0B46     	 mov r3,r1
 1057 01c4 1046     	 mov r0,r2
 1058 01c6 1946     	 mov r1,r3
 1059 01c8 23A3     	 adr r3,.L34+48
 1060 01ca D3E90023 	 ldrd r2,[r3]
 1061 01ce FFF7FEFF 	 bl __aeabi_dmul
 1062 01d2 0246     	 mov r2,r0
 1063 01d4 0B46     	 mov r3,r1
 1064 01d6 1046     	 mov r0,r2
 1065 01d8 1946     	 mov r1,r3
 1066 01da FFF7FEFF 	 bl __aeabi_d2iz
 1067 01de 0246     	 mov r2,r0
 1068 01e0 274B     	 ldr r3,.L34+88
 1069 01e2 1A62     	 str r2,[r3,#32]
 351:../main.c     **** 	stateTimingVariables[9]  = (closedToOpenTime * (0.9));		//90%
 1070              	 .loc 3 351 0
 1071 01e4 244B     	 ldr r3,.L34+80
 1072 01e6 1B68     	 ldr r3,[r3]
 1073 01e8 1846     	 mov r0,r3
 1074 01ea FFF7FEFF 	 bl __aeabi_i2d
 1075 01ee 0246     	 mov r2,r0
 1076 01f0 0B46     	 mov r3,r1
 1077 01f2 1046     	 mov r0,r2
 1078 01f4 1946     	 mov r1,r3
 1079 01f6 1AA3     	 adr r3,.L34+56
 1080 01f8 D3E90023 	 ldrd r2,[r3]
 1081 01fc FFF7FEFF 	 bl __aeabi_dmul
 1082 0200 0246     	 mov r2,r0
 1083 0202 0B46     	 mov r3,r1
 1084 0204 1046     	 mov r0,r2
 1085 0206 1946     	 mov r1,r3
 1086 0208 FFF7FEFF 	 bl __aeabi_d2iz
 1087 020c 0246     	 mov r2,r0
 1088 020e 1C4B     	 ldr r3,.L34+88
 1089 0210 5A62     	 str r2,[r3,#36]
 352:../main.c     **** 	stateTimingVariables[10] = (closedToOpenTime);		        //100%
 1090              	 .loc 3 352 0
 1091 0212 194B     	 ldr r3,.L34+80
 1092 0214 1B68     	 ldr r3,[r3]
 1093 0216 1A4A     	 ldr r2,.L34+88
 1094 0218 9362     	 str r3,[r2,#40]
 353:../main.c     **** 	return 1;
 1095              	 .loc 3 353 0
 1096 021a 0123     	 movs r3,#1
 354:../main.c     **** }
 1097              	 .loc 3 354 0
 1098 021c 1846     	 mov r0,r3
 1099 021e 0837     	 adds r7,r7,#8
 1100              	.LCFI63:
 1101              	 .cfi_def_cfa_offset 8
 1102 0220 BD46     	 mov sp,r7
 1103              	.LCFI64:
 1104              	 .cfi_def_cfa_register 13
 1105              	 
 1106 0222 80BD     	 pop {r7,pc}
 1107              	.L35:
 1108 0224 AFF30080 	 .align 3
 1109              	.L34:
 1110 0228 9A999999 	 .word -1717986918
 1111 022c 9999B93F 	 .word 1069128089
 1112 0230 9A999999 	 .word -1717986918
 1113 0234 9999C93F 	 .word 1070176665
 1114 0238 33333333 	 .word 858993459
 1115 023c 3333D33F 	 .word 1070805811
 1116 0240 9A999999 	 .word -1717986918
 1117 0244 9999D93F 	 .word 1071225241
 1118 0248 33333333 	 .word 858993459
 1119 024c 3333E33F 	 .word 1071854387
 1120 0250 66666666 	 .word 1717986918
 1121 0254 6666E63F 	 .word 1072064102
 1122 0258 9A999999 	 .word -1717986918
 1123 025c 9999E93F 	 .word 1072273817
 1124 0260 CDCCCCCC 	 .word -858993459
 1125 0264 CCCCEC3F 	 .word 1072483532
 1126 0268 00000000 	 .word TIMER_Motor
 1127 026c 00000000 	 .word PWM_Motor
 1128 0270 00000000 	 .word Motor_Direction
 1129 0274 00000000 	 .word time
 1130 0278 00000000 	 .word closedToOpenTime
 1131 027c 00000000 	 .word WindowState
 1132 0280 00000000 	 .word stateTimingVariables
 1133 0284 0000E03F 	 .word 1071644672
 1134              	 .cfi_endproc
 1135              	.LFE309:
 1137              	 .section .text.MoveWindow,"ax",%progbits
 1138              	 .align 2
 1139              	 .global MoveWindow
 1140              	 .thumb
 1141              	 .thumb_func
 1143              	MoveWindow:
 1144              	.LFB310:
 355:../main.c     **** 
 356:../main.c     **** //Function to move window to desired percentage
 357:../main.c     **** // NOTE: HIGH = DOWM; LOW = UP !!!
 358:../main.c     **** int MoveWindow(int percentage)
 359:../main.c     **** {
 1145              	 .loc 3 359 0
 1146              	 .cfi_startproc
 1147              	 
 1148              	 
 1149 0000 80B5     	 push {r7,lr}
 1150              	.LCFI65:
 1151              	 .cfi_def_cfa_offset 8
 1152              	 .cfi_offset 7,-8
 1153              	 .cfi_offset 14,-4
 1154 0002 86B0     	 sub sp,sp,#24
 1155              	.LCFI66:
 1156              	 .cfi_def_cfa_offset 32
 1157 0004 00AF     	 add r7,sp,#0
 1158              	.LCFI67:
 1159              	 .cfi_def_cfa_register 7
 1160 0006 7860     	 str r0,[r7,#4]
 360:../main.c     **** 	/*
 361:../main.c     **** 	 -----Methodology-----
 362:../main.c     **** 	 - Key into global time array using requested percentage
 363:../main.c     **** 	 - Take current state, subtract requested state from it
 364:../main.c     **** 	 - use + or - value of the number to know which direction to move, and magnitude for how much time
 365:../main.c     **** 	 - drive motor and update timer variable with timer interrupt until motor has been driven appropri
 366:../main.c     **** 	 - stop timer and update current state variable
 367:../main.c     **** 	 - return with success and smile :)
 368:../main.c     **** 	*/
 369:../main.c     **** 
 370:../main.c     **** 	int MOS_UP_State = DIGITAL_IO_GetInput(&MOS_UP);
 1161              	 .loc 3 370 0
 1162 0008 3E48     	 ldr r0,.L51
 1163 000a FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1164 000e 0346     	 mov r3,r0
 1165 0010 7B61     	 str r3,[r7,#20]
 371:../main.c     **** 	int MOS_DOWN_State = DIGITAL_IO_GetInput(&MOS_DOWN);
 1166              	 .loc 3 371 0
 1167 0012 3D48     	 ldr r0,.L51+4
 1168 0014 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1169 0018 0346     	 mov r3,r0
 1170 001a 3B61     	 str r3,[r7,#16]
 372:../main.c     **** 	if ((MOS_UP_State == 0) || (MOS_DOWN_State == 0))
 1171              	 .loc 3 372 0
 1172 001c 7B69     	 ldr r3,[r7,#20]
 1173 001e 002B     	 cmp r3,#0
 1174 0020 02D0     	 beq .L37
 1175              	 .loc 3 372 0 is_stmt 0 discriminator 1
 1176 0022 3B69     	 ldr r3,[r7,#16]
 1177 0024 002B     	 cmp r3,#0
 1178 0026 01D1     	 bne .L38
 1179              	.L37:
 373:../main.c     **** 	{
 374:../main.c     **** 		return 0;	//Manual Override switch already being serviced
 1180              	 .loc 3 374 0 is_stmt 1
 1181 0028 0023     	 movs r3,#0
 1182 002a 67E0     	 b .L39
 1183              	.L38:
 375:../main.c     **** 	}
 376:../main.c     **** 
 377:../main.c     **** 	int requestedPercentage = percentage;
 1184              	 .loc 3 377 0
 1185 002c 7B68     	 ldr r3,[r7,#4]
 1186 002e FB60     	 str r3,[r7,#12]
 378:../main.c     **** 	if ((requestedPercentage < 0) || (requestedPercentage > 10))
 1187              	 .loc 3 378 0
 1188 0030 FB68     	 ldr r3,[r7,#12]
 1189 0032 002B     	 cmp r3,#0
 1190 0034 02DB     	 blt .L40
 1191              	 .loc 3 378 0 is_stmt 0 discriminator 1
 1192 0036 FB68     	 ldr r3,[r7,#12]
 1193 0038 0A2B     	 cmp r3,#10
 1194 003a 01DD     	 ble .L41
 1195              	.L40:
 379:../main.c     **** 	{
 380:../main.c     **** 		return 0;
 1196              	 .loc 3 380 0 is_stmt 1
 1197 003c 0023     	 movs r3,#0
 1198 003e 5DE0     	 b .L39
 1199              	.L41:
 381:../main.c     **** 	}
 382:../main.c     **** 
 383:../main.c     **** 	int timeToMove = (stateTimingVariables[requestedPercentage] - stateTimingVariables[WindowState]);	
 1200              	 .loc 3 383 0
 1201 0040 324A     	 ldr r2,.L51+8
 1202 0042 FB68     	 ldr r3,[r7,#12]
 1203 0044 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1204 0048 314B     	 ldr r3,.L51+12
 1205 004a 1B68     	 ldr r3,[r3]
 1206 004c 2F49     	 ldr r1,.L51+8
 1207 004e 51F82330 	 ldr r3,[r1,r3,lsl#2]
 1208 0052 D31A     	 subs r3,r2,r3
 1209 0054 BB60     	 str r3,[r7,#8]
 384:../main.c     **** 																										// Difference will be time needed to drive motor,
 385:../main.c     **** 																										// sign will be direction (+ = up, - = down)
 386:../main.c     **** 	if (timeToMove > 0)			// Positive, so need to drive up
 1210              	 .loc 3 386 0
 1211 0056 BB68     	 ldr r3,[r7,#8]
 1212 0058 002B     	 cmp r3,#0
 1213 005a 20DD     	 ble .L42
 387:../main.c     **** 	{
 388:../main.c     **** 		TIMER_Start(&TIMER_Motor);
 1214              	 .loc 3 388 0
 1215 005c 2D48     	 ldr r0,.L51+16
 1216 005e FFF7FEFF 	 bl TIMER_Start
 389:../main.c     **** 		while((time < timeToMove) && (CheckTopLimitSwitch() == 1))	//drive motor until time is equal to s
 1217              	 .loc 3 389 0
 1218 0062 05E0     	 b .L43
 1219              	.L45:
 390:../main.c     **** 		{
 391:../main.c     **** 			PWM_Start(&PWM_Motor);
 1220              	 .loc 3 391 0
 1221 0064 2C48     	 ldr r0,.L51+20
 1222 0066 FFF7FEFF 	 bl PWM_Start
 392:../main.c     **** 			DIGITAL_IO_SetOutputLow(&Motor_Direction); //Move up
 1223              	 .loc 3 392 0
 1224 006a 2C48     	 ldr r0,.L51+24
 1225 006c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1226              	.L43:
 389:../main.c     **** 		while((time < timeToMove) && (CheckTopLimitSwitch() == 1))	//drive motor until time is equal to s
 1227              	 .loc 3 389 0
 1228 0070 2B4B     	 ldr r3,.L51+28
 1229 0072 1A68     	 ldr r2,[r3]
 1230 0074 BB68     	 ldr r3,[r7,#8]
 1231 0076 9A42     	 cmp r2,r3
 1232 0078 04DA     	 bge .L44
 389:../main.c     **** 		while((time < timeToMove) && (CheckTopLimitSwitch() == 1))	//drive motor until time is equal to s
 1233              	 .loc 3 389 0 is_stmt 0 discriminator 1
 1234 007a FFF7FEFF 	 bl CheckTopLimitSwitch
 1235 007e 0346     	 mov r3,r0
 1236 0080 012B     	 cmp r3,#1
 1237 0082 EFD0     	 beq .L45
 1238              	.L44:
 393:../main.c     **** 		}
 394:../main.c     **** 		PWM_Stop(&PWM_Motor);
 1239              	 .loc 3 394 0 is_stmt 1
 1240 0084 2448     	 ldr r0,.L51+20
 1241 0086 FFF7FEFF 	 bl PWM_Stop
 395:../main.c     **** 		TIMER_Stop(&TIMER_Motor);
 1242              	 .loc 3 395 0
 1243 008a 2248     	 ldr r0,.L51+16
 1244 008c FFF7FEFF 	 bl TIMER_Stop
 396:../main.c     **** 		time = 0;
 1245              	 .loc 3 396 0
 1246 0090 234B     	 ldr r3,.L51+28
 1247 0092 0022     	 movs r2,#0
 1248 0094 1A60     	 str r2,[r3]
 397:../main.c     **** 		WindowState = requestedPercentage;
 1249              	 .loc 3 397 0
 1250 0096 1E4A     	 ldr r2,.L51+12
 1251 0098 FB68     	 ldr r3,[r7,#12]
 1252 009a 1360     	 str r3,[r2]
 1253 009c 2DE0     	 b .L46
 1254              	.L42:
 398:../main.c     **** 	}
 399:../main.c     **** 	else if (timeToMove < 0)	// Negative, need to drive down
 1255              	 .loc 3 399 0
 1256 009e BB68     	 ldr r3,[r7,#8]
 1257 00a0 002B     	 cmp r3,#0
 1258 00a2 25DA     	 bge .L47
 1259              	.LBB7:
 400:../main.c     **** 	{
 401:../main.c     **** 		timeToMove = abs(timeToMove);
 1260              	 .loc 3 401 0
 1261 00a4 BB68     	 ldr r3,[r7,#8]
 1262 00a6 002B     	 cmp r3,#0
 1263 00a8 B8BF     	 it lt
 1264 00aa 5B42     	 rsblt r3,r3,#0
 1265 00ac BB60     	 str r3,[r7,#8]
 402:../main.c     **** 		TIMER_Start(&TIMER_Motor);
 1266              	 .loc 3 402 0
 1267 00ae 1948     	 ldr r0,.L51+16
 1268 00b0 FFF7FEFF 	 bl TIMER_Start
 403:../main.c     **** 		while((time < timeToMove) && (CheckBottomLimitSwitch() == 1))	//drive motor until time is equal t
 1269              	 .loc 3 403 0
 1270 00b4 05E0     	 b .L48
 1271              	.L50:
 404:../main.c     **** 		{
 405:../main.c     **** 			PWM_Start(&PWM_Motor);
 1272              	 .loc 3 405 0
 1273 00b6 1848     	 ldr r0,.L51+20
 1274 00b8 FFF7FEFF 	 bl PWM_Start
 406:../main.c     **** 			DIGITAL_IO_SetOutputHigh(&Motor_Direction); //Move down
 1275              	 .loc 3 406 0
 1276 00bc 1748     	 ldr r0,.L51+24
 1277 00be FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1278              	.L48:
 403:../main.c     **** 		while((time < timeToMove) && (CheckBottomLimitSwitch() == 1))	//drive motor until time is equal t
 1279              	 .loc 3 403 0
 1280 00c2 174B     	 ldr r3,.L51+28
 1281 00c4 1A68     	 ldr r2,[r3]
 1282 00c6 BB68     	 ldr r3,[r7,#8]
 1283 00c8 9A42     	 cmp r2,r3
 1284 00ca 04DA     	 bge .L49
 403:../main.c     **** 		while((time < timeToMove) && (CheckBottomLimitSwitch() == 1))	//drive motor until time is equal t
 1285              	 .loc 3 403 0 is_stmt 0 discriminator 1
 1286 00cc FFF7FEFF 	 bl CheckBottomLimitSwitch
 1287 00d0 0346     	 mov r3,r0
 1288 00d2 012B     	 cmp r3,#1
 1289 00d4 EFD0     	 beq .L50
 1290              	.L49:
 407:../main.c     **** 		}
 408:../main.c     **** 		PWM_Stop(&PWM_Motor);
 1291              	 .loc 3 408 0 is_stmt 1
 1292 00d6 1048     	 ldr r0,.L51+20
 1293 00d8 FFF7FEFF 	 bl PWM_Stop
 409:../main.c     **** 		TIMER_Stop(&TIMER_Motor);
 1294              	 .loc 3 409 0
 1295 00dc 0D48     	 ldr r0,.L51+16
 1296 00de FFF7FEFF 	 bl TIMER_Stop
 410:../main.c     **** 		time = 0;
 1297              	 .loc 3 410 0
 1298 00e2 0F4B     	 ldr r3,.L51+28
 1299 00e4 0022     	 movs r2,#0
 1300 00e6 1A60     	 str r2,[r3]
 411:../main.c     **** 		WindowState = requestedPercentage;
 1301              	 .loc 3 411 0
 1302 00e8 094A     	 ldr r2,.L51+12
 1303 00ea FB68     	 ldr r3,[r7,#12]
 1304 00ec 1360     	 str r3,[r2]
 1305              	.LBE7:
 1306 00ee 04E0     	 b .L46
 1307              	.L47:
 412:../main.c     **** 	}
 413:../main.c     **** 	else if (timeToMove == 0)
 1308              	 .loc 3 413 0
 1309 00f0 BB68     	 ldr r3,[r7,#8]
 1310 00f2 002B     	 cmp r3,#0
 1311 00f4 01D0     	 beq .L46
 414:../main.c     **** 	{
 415:../main.c     **** 		// Requesting same state, so do nothing
 416:../main.c     **** 	}
 417:../main.c     **** 	else
 418:../main.c     **** 	{
 419:../main.c     **** 		return 0;
 1312              	 .loc 3 419 0
 1313 00f6 0023     	 movs r3,#0
 1314 00f8 00E0     	 b .L39
 1315              	.L46:
 420:../main.c     **** 	}
 421:../main.c     **** 	return 1;
 1316              	 .loc 3 421 0
 1317 00fa 0123     	 movs r3,#1
 1318              	.L39:
 422:../main.c     **** }
 1319              	 .loc 3 422 0
 1320 00fc 1846     	 mov r0,r3
 1321 00fe 1837     	 adds r7,r7,#24
 1322              	.LCFI68:
 1323              	 .cfi_def_cfa_offset 8
 1324 0100 BD46     	 mov sp,r7
 1325              	.LCFI69:
 1326              	 .cfi_def_cfa_register 13
 1327              	 
 1328 0102 80BD     	 pop {r7,pc}
 1329              	.L52:
 1330              	 .align 2
 1331              	.L51:
 1332 0104 00000000 	 .word MOS_UP
 1333 0108 00000000 	 .word MOS_DOWN
 1334 010c 00000000 	 .word stateTimingVariables
 1335 0110 00000000 	 .word WindowState
 1336 0114 00000000 	 .word TIMER_Motor
 1337 0118 00000000 	 .word PWM_Motor
 1338 011c 00000000 	 .word Motor_Direction
 1339 0120 00000000 	 .word time
 1340              	 .cfi_endproc
 1341              	.LFE310:
 1343              	 .section .text.CheckTopLimitSwitch,"ax",%progbits
 1344              	 .align 2
 1345              	 .global CheckTopLimitSwitch
 1346              	 .thumb
 1347              	 .thumb_func
 1349              	CheckTopLimitSwitch:
 1350              	.LFB311:
 423:../main.c     **** 
 424:../main.c     **** int CheckTopLimitSwitch()
 425:../main.c     **** {
 1351              	 .loc 3 425 0
 1352              	 .cfi_startproc
 1353              	 
 1354              	 
 1355 0000 80B5     	 push {r7,lr}
 1356              	.LCFI70:
 1357              	 .cfi_def_cfa_offset 8
 1358              	 .cfi_offset 7,-8
 1359              	 .cfi_offset 14,-4
 1360 0002 82B0     	 sub sp,sp,#8
 1361              	.LCFI71:
 1362              	 .cfi_def_cfa_offset 16
 1363 0004 00AF     	 add r7,sp,#0
 1364              	.LCFI72:
 1365              	 .cfi_def_cfa_register 7
 426:../main.c     **** 	int TopSwitchState = DIGITAL_IO_GetInput(&LIMIT_SWITCH_TOP);
 1366              	 .loc 3 426 0
 1367 0006 0A48     	 ldr r0,.L56
 1368 0008 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1369 000c 0346     	 mov r3,r0
 1370 000e 7B60     	 str r3,[r7,#4]
 427:../main.c     **** 	if (TopSwitchState != top_button_state)
 1371              	 .loc 3 427 0
 1372 0010 7A68     	 ldr r2,[r7,#4]
 1373 0012 084B     	 ldr r3,.L56+4
 1374 0014 1B68     	 ldr r3,[r3]
 1375 0016 9A42     	 cmp r2,r3
 1376 0018 04D0     	 beq .L54
 428:../main.c     **** 	{
 429:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&LED_Indicator);
 1377              	 .loc 3 429 0
 1378 001a 0748     	 ldr r0,.L56+8
 1379 001c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 430:../main.c     **** 		return 0;	//Top switch pressed
 1380              	 .loc 3 430 0
 1381 0020 0023     	 movs r3,#0
 1382 0022 00E0     	 b .L55
 1383              	.L54:
 431:../main.c     **** 	}
 432:../main.c     **** 
 433:../main.c     **** 	return 1; 	//Base case that neither is pressed
 1384              	 .loc 3 433 0
 1385 0024 0123     	 movs r3,#1
 1386              	.L55:
 434:../main.c     **** }
 1387              	 .loc 3 434 0
 1388 0026 1846     	 mov r0,r3
 1389 0028 0837     	 adds r7,r7,#8
 1390              	.LCFI73:
 1391              	 .cfi_def_cfa_offset 8
 1392 002a BD46     	 mov sp,r7
 1393              	.LCFI74:
 1394              	 .cfi_def_cfa_register 13
 1395              	 
 1396 002c 80BD     	 pop {r7,pc}
 1397              	.L57:
 1398 002e 00BF     	 .align 2
 1399              	.L56:
 1400 0030 00000000 	 .word LIMIT_SWITCH_TOP
 1401 0034 00000000 	 .word top_button_state
 1402 0038 00000000 	 .word LED_Indicator
 1403              	 .cfi_endproc
 1404              	.LFE311:
 1406              	 .section .text.CheckBottomLimitSwitch,"ax",%progbits
 1407              	 .align 2
 1408              	 .global CheckBottomLimitSwitch
 1409              	 .thumb
 1410              	 .thumb_func
 1412              	CheckBottomLimitSwitch:
 1413              	.LFB312:
 435:../main.c     **** int CheckBottomLimitSwitch()
 436:../main.c     **** {
 1414              	 .loc 3 436 0
 1415              	 .cfi_startproc
 1416              	 
 1417              	 
 1418 0000 80B5     	 push {r7,lr}
 1419              	.LCFI75:
 1420              	 .cfi_def_cfa_offset 8
 1421              	 .cfi_offset 7,-8
 1422              	 .cfi_offset 14,-4
 1423 0002 82B0     	 sub sp,sp,#8
 1424              	.LCFI76:
 1425              	 .cfi_def_cfa_offset 16
 1426 0004 00AF     	 add r7,sp,#0
 1427              	.LCFI77:
 1428              	 .cfi_def_cfa_register 7
 437:../main.c     **** 	int BottomSwitchState = DIGITAL_IO_GetInput(&LIMIT_SWITCH_BOTTOM);
 1429              	 .loc 3 437 0
 1430 0006 0A48     	 ldr r0,.L61
 1431 0008 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1432 000c 0346     	 mov r3,r0
 1433 000e 7B60     	 str r3,[r7,#4]
 438:../main.c     **** 	if (BottomSwitchState != bottom_button_state)
 1434              	 .loc 3 438 0
 1435 0010 7A68     	 ldr r2,[r7,#4]
 1436 0012 084B     	 ldr r3,.L61+4
 1437 0014 1B68     	 ldr r3,[r3]
 1438 0016 9A42     	 cmp r2,r3
 1439 0018 04D0     	 beq .L59
 439:../main.c     **** 	{
 440:../main.c     **** 		DIGITAL_IO_SetOutputLow(&LED_Indicator);
 1440              	 .loc 3 440 0
 1441 001a 0748     	 ldr r0,.L61+8
 1442 001c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 441:../main.c     **** 		return 0; 	//Bottom switch pressed
 1443              	 .loc 3 441 0
 1444 0020 0023     	 movs r3,#0
 1445 0022 00E0     	 b .L60
 1446              	.L59:
 442:../main.c     **** 	}
 443:../main.c     **** 
 444:../main.c     **** 	return 1; 	//Base case that neither is pressed
 1447              	 .loc 3 444 0
 1448 0024 0123     	 movs r3,#1
 1449              	.L60:
 445:../main.c     **** }
 1450              	 .loc 3 445 0
 1451 0026 1846     	 mov r0,r3
 1452 0028 0837     	 adds r7,r7,#8
 1453              	.LCFI78:
 1454              	 .cfi_def_cfa_offset 8
 1455 002a BD46     	 mov sp,r7
 1456              	.LCFI79:
 1457              	 .cfi_def_cfa_register 13
 1458              	 
 1459 002c 80BD     	 pop {r7,pc}
 1460              	.L62:
 1461 002e 00BF     	 .align 2
 1462              	.L61:
 1463 0030 00000000 	 .word LIMIT_SWITCH_BOTTOM
 1464 0034 00000000 	 .word bottom_button_state
 1465 0038 00000000 	 .word LED_Indicator
 1466              	 .cfi_endproc
 1467              	.LFE312:
 1469              	 .section .text.ManualOverrideSwitches,"ax",%progbits
 1470              	 .align 2
 1471              	 .global ManualOverrideSwitches
 1472              	 .thumb
 1473              	 .thumb_func
 1475              	ManualOverrideSwitches:
 1476              	.LFB313:
 446:../main.c     **** 
 447:../main.c     **** void ManualOverrideSwitches()
 448:../main.c     **** {
 1477              	 .loc 3 448 0
 1478              	 .cfi_startproc
 1479              	 
 1480              	 
 1481 0000 80B5     	 push {r7,lr}
 1482              	.LCFI80:
 1483              	 .cfi_def_cfa_offset 8
 1484              	 .cfi_offset 7,-8
 1485              	 .cfi_offset 14,-4
 1486 0002 86B0     	 sub sp,sp,#24
 1487              	.LCFI81:
 1488              	 .cfi_def_cfa_offset 32
 1489 0004 00AF     	 add r7,sp,#0
 1490              	.LCFI82:
 1491              	 .cfi_def_cfa_register 7
 449:../main.c     **** 	int MOS_UP_State = DIGITAL_IO_GetInput(&MOS_UP);
 1492              	 .loc 3 449 0
 1493 0006 6A48     	 ldr r0,.L78
 1494 0008 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1495 000c 0346     	 mov r3,r0
 1496 000e 7B61     	 str r3,[r7,#20]
 450:../main.c     **** 	int MOS_DOWN_State = DIGITAL_IO_GetInput(&MOS_DOWN);
 1497              	 .loc 3 450 0
 1498 0010 6848     	 ldr r0,.L78+4
 1499 0012 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1500 0016 0346     	 mov r3,r0
 1501 0018 3B61     	 str r3,[r7,#16]
 451:../main.c     **** 	int nextState;
 452:../main.c     **** 	uint32_t status;
 453:../main.c     **** 	if (MOS_UP_State == 0)			// Up button is pressed, upward movement requested
 1502              	 .loc 3 453 0
 1503 001a 7B69     	 ldr r3,[r7,#20]
 1504 001c 002B     	 cmp r3,#0
 1505 001e 5ED1     	 bne .L64
 1506              	.LBB8:
 454:../main.c     **** 	{
 455:../main.c     **** 		while ((MOS_UP_State == 0) && (WindowState != 10))
 1507              	 .loc 3 455 0
 1508 0020 33E0     	 b .L65
 1509              	.L70:
 456:../main.c     **** 		{
 457:../main.c     **** 			nextState = (stateTimingVariables[WindowState + 1] - stateTimingVariables[WindowState]);	//calcu
 1510              	 .loc 3 457 0
 1511 0022 654B     	 ldr r3,.L78+8
 1512 0024 1B68     	 ldr r3,[r3]
 1513 0026 0133     	 adds r3,r3,#1
 1514 0028 644A     	 ldr r2,.L78+12
 1515 002a 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1516 002e 624B     	 ldr r3,.L78+8
 1517 0030 1B68     	 ldr r3,[r3]
 1518 0032 6249     	 ldr r1,.L78+12
 1519 0034 51F82330 	 ldr r3,[r1,r3,lsl#2]
 1520 0038 D31A     	 subs r3,r2,r3
 1521 003a FB60     	 str r3,[r7,#12]
 458:../main.c     **** 			TIMER_Start(&TIMER_Motor);
 1522              	 .loc 3 458 0
 1523 003c 6048     	 ldr r0,.L78+16
 1524 003e FFF7FEFF 	 bl TIMER_Start
 459:../main.c     **** 			while ((time < nextState) && (CheckTopLimitSwitch() == 1))		//drive motor up to next state, then
 1525              	 .loc 3 459 0
 1526 0042 05E0     	 b .L66
 1527              	.L68:
 460:../main.c     **** 			{
 461:../main.c     **** 				PWM_Start(&PWM_Motor);
 1528              	 .loc 3 461 0
 1529 0044 5F48     	 ldr r0,.L78+20
 1530 0046 FFF7FEFF 	 bl PWM_Start
 462:../main.c     **** 				DIGITAL_IO_SetOutputLow(&Motor_Direction); //Move up
 1531              	 .loc 3 462 0
 1532 004a 5F48     	 ldr r0,.L78+24
 1533 004c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1534              	.L66:
 459:../main.c     **** 			while ((time < nextState) && (CheckTopLimitSwitch() == 1))		//drive motor up to next state, then
 1535              	 .loc 3 459 0
 1536 0050 5E4B     	 ldr r3,.L78+28
 1537 0052 1A68     	 ldr r2,[r3]
 1538 0054 FB68     	 ldr r3,[r7,#12]
 1539 0056 9A42     	 cmp r2,r3
 1540 0058 04DA     	 bge .L67
 459:../main.c     **** 			while ((time < nextState) && (CheckTopLimitSwitch() == 1))		//drive motor up to next state, then
 1541              	 .loc 3 459 0 is_stmt 0 discriminator 1
 1542 005a FFF7FEFF 	 bl CheckTopLimitSwitch
 1543 005e 0346     	 mov r3,r0
 1544 0060 012B     	 cmp r3,#1
 1545 0062 EFD0     	 beq .L68
 1546              	.L67:
 463:../main.c     **** 			}
 464:../main.c     **** 			PWM_Stop(&PWM_Motor);
 1547              	 .loc 3 464 0 is_stmt 1
 1548 0064 5748     	 ldr r0,.L78+20
 1549 0066 FFF7FEFF 	 bl PWM_Stop
 465:../main.c     **** 			TIMER_Stop(&TIMER_Motor);
 1550              	 .loc 3 465 0
 1551 006a 5548     	 ldr r0,.L78+16
 1552 006c FFF7FEFF 	 bl TIMER_Stop
 466:../main.c     **** 			WindowState = WindowState + 1;
 1553              	 .loc 3 466 0
 1554 0070 514B     	 ldr r3,.L78+8
 1555 0072 1B68     	 ldr r3,[r3]
 1556 0074 0133     	 adds r3,r3,#1
 1557 0076 504A     	 ldr r2,.L78+8
 1558 0078 1360     	 str r3,[r2]
 467:../main.c     **** 			time = 0;
 1559              	 .loc 3 467 0
 1560 007a 544B     	 ldr r3,.L78+28
 1561 007c 0022     	 movs r2,#0
 1562 007e 1A60     	 str r2,[r3]
 468:../main.c     **** 			MOS_UP_State = DIGITAL_IO_GetInput(&MOS_UP);
 1563              	 .loc 3 468 0
 1564 0080 4B48     	 ldr r0,.L78
 1565 0082 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1566 0086 0346     	 mov r3,r0
 1567 0088 7B61     	 str r3,[r7,#20]
 1568              	.L65:
 455:../main.c     **** 		{
 1569              	 .loc 3 455 0
 1570 008a 7B69     	 ldr r3,[r7,#20]
 1571 008c 002B     	 cmp r3,#0
 1572 008e 03D1     	 bne .L69
 455:../main.c     **** 		{
 1573              	 .loc 3 455 0 is_stmt 0 discriminator 1
 1574 0090 494B     	 ldr r3,.L78+8
 1575 0092 1B68     	 ldr r3,[r3]
 1576 0094 0A2B     	 cmp r3,#10
 1577 0096 C4D1     	 bne .L70
 1578              	.L69:
 469:../main.c     **** 		}
 470:../main.c     **** 		int WindowStatePercentage = (WindowState * 10);
 1579              	 .loc 3 470 0 is_stmt 1
 1580 0098 474B     	 ldr r3,.L78+8
 1581 009a 1A68     	 ldr r2,[r3]
 1582 009c 1346     	 mov r3,r2
 1583 009e 9B00     	 lsls r3,r3,#2
 1584 00a0 1344     	 add r3,r3,r2
 1585 00a2 5B00     	 lsls r3,r3,#1
 1586 00a4 BB60     	 str r3,[r7,#8]
 471:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 1587              	 .loc 3 471 0
 1588 00a6 4A4B     	 ldr r3,.L78+32
 1589 00a8 1B68     	 ldr r3,[r3]
 1590 00aa 4A4A     	 ldr r2,.L78+36
 1591 00ac 1268     	 ldr r2,[r2]
 1592 00ae 92B2     	 uxth r2,r2
 1593 00b0 1A82     	 strh r2,[r3,#16]
 472:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x04;	//Status update
 1594              	 .loc 3 472 0
 1595 00b2 474B     	 ldr r3,.L78+32
 1596 00b4 1B68     	 ldr r3,[r3]
 1597 00b6 0422     	 movs r2,#4
 1598 00b8 5A82     	 strh r2,[r3,#18]
 473:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = WindowStatePercentage;
 1599              	 .loc 3 473 0
 1600 00ba 454B     	 ldr r3,.L78+32
 1601 00bc 1B68     	 ldr r3,[r3]
 1602 00be BA68     	 ldr r2,[r7,#8]
 1603 00c0 92B2     	 uxth r2,r2
 1604 00c2 9A82     	 strh r2,[r3,#20]
 474:../main.c     **** 		status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 1605              	 .loc 3 474 0
 1606 00c4 424B     	 ldr r3,.L78+32
 1607 00c6 1B68     	 ldr r3,[r3]
 1608 00c8 1846     	 mov r0,r3
 1609 00ca FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 1610 00ce 0346     	 mov r3,r0
 1611 00d0 7B60     	 str r3,[r7,#4]
 475:../main.c     **** 		status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 1612              	 .loc 3 475 0
 1613 00d2 3F48     	 ldr r0,.L78+32
 1614 00d4 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 1615 00d8 0346     	 mov r3,r0
 1616 00da 7B60     	 str r3,[r7,#4]
 1617              	.LBE8:
 1618 00dc 65E0     	 b .L63
 1619              	.L64:
 476:../main.c     **** 	}
 477:../main.c     **** 	else if (MOS_DOWN_State == 0) 	// Down button pressed, downward movement requested
 1620              	 .loc 3 477 0
 1621 00de 3B69     	 ldr r3,[r7,#16]
 1622 00e0 002B     	 cmp r3,#0
 1623 00e2 62D1     	 bne .L63
 1624              	.LBB9:
 478:../main.c     **** 	{
 479:../main.c     **** 		while ((MOS_DOWN_State == 0) && (WindowState != 0))
 1625              	 .loc 3 479 0
 1626 00e4 38E0     	 b .L72
 1627              	.L77:
 1628              	.LBB10:
 480:../main.c     **** 		{
 481:../main.c     **** 			nextState = (stateTimingVariables[WindowState - 1] - stateTimingVariables[WindowState]);
 1629              	 .loc 3 481 0
 1630 00e6 344B     	 ldr r3,.L78+8
 1631 00e8 1B68     	 ldr r3,[r3]
 1632 00ea 013B     	 subs r3,r3,#1
 1633 00ec 334A     	 ldr r2,.L78+12
 1634 00ee 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1635 00f2 314B     	 ldr r3,.L78+8
 1636 00f4 1B68     	 ldr r3,[r3]
 1637 00f6 3149     	 ldr r1,.L78+12
 1638 00f8 51F82330 	 ldr r3,[r1,r3,lsl#2]
 1639 00fc D31A     	 subs r3,r2,r3
 1640 00fe FB60     	 str r3,[r7,#12]
 482:../main.c     **** 			nextState = abs(nextState);
 1641              	 .loc 3 482 0
 1642 0100 FB68     	 ldr r3,[r7,#12]
 1643 0102 002B     	 cmp r3,#0
 1644 0104 B8BF     	 it lt
 1645 0106 5B42     	 rsblt r3,r3,#0
 1646 0108 FB60     	 str r3,[r7,#12]
 483:../main.c     **** 			TIMER_Start(&TIMER_Motor);
 1647              	 .loc 3 483 0
 1648 010a 2D48     	 ldr r0,.L78+16
 1649 010c FFF7FEFF 	 bl TIMER_Start
 484:../main.c     **** 			while ((time < nextState) && (CheckBottomLimitSwitch() == 1))
 1650              	 .loc 3 484 0
 1651 0110 05E0     	 b .L73
 1652              	.L75:
 485:../main.c     **** 			{
 486:../main.c     **** 				PWM_Start(&PWM_Motor);
 1653              	 .loc 3 486 0
 1654 0112 2C48     	 ldr r0,.L78+20
 1655 0114 FFF7FEFF 	 bl PWM_Start
 487:../main.c     **** 				DIGITAL_IO_SetOutputHigh(&Motor_Direction); //Move Down
 1656              	 .loc 3 487 0
 1657 0118 2B48     	 ldr r0,.L78+24
 1658 011a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1659              	.L73:
 484:../main.c     **** 			while ((time < nextState) && (CheckBottomLimitSwitch() == 1))
 1660              	 .loc 3 484 0
 1661 011e 2B4B     	 ldr r3,.L78+28
 1662 0120 1A68     	 ldr r2,[r3]
 1663 0122 FB68     	 ldr r3,[r7,#12]
 1664 0124 9A42     	 cmp r2,r3
 1665 0126 04DA     	 bge .L74
 484:../main.c     **** 			while ((time < nextState) && (CheckBottomLimitSwitch() == 1))
 1666              	 .loc 3 484 0 is_stmt 0 discriminator 1
 1667 0128 FFF7FEFF 	 bl CheckBottomLimitSwitch
 1668 012c 0346     	 mov r3,r0
 1669 012e 012B     	 cmp r3,#1
 1670 0130 EFD0     	 beq .L75
 1671              	.L74:
 488:../main.c     **** 			}
 489:../main.c     **** 			PWM_Stop(&PWM_Motor);
 1672              	 .loc 3 489 0 is_stmt 1
 1673 0132 2448     	 ldr r0,.L78+20
 1674 0134 FFF7FEFF 	 bl PWM_Stop
 490:../main.c     **** 			TIMER_Stop(&TIMER_Motor);
 1675              	 .loc 3 490 0
 1676 0138 2148     	 ldr r0,.L78+16
 1677 013a FFF7FEFF 	 bl TIMER_Stop
 491:../main.c     **** 			WindowState = WindowState - 1;
 1678              	 .loc 3 491 0
 1679 013e 1E4B     	 ldr r3,.L78+8
 1680 0140 1B68     	 ldr r3,[r3]
 1681 0142 013B     	 subs r3,r3,#1
 1682 0144 1C4A     	 ldr r2,.L78+8
 1683 0146 1360     	 str r3,[r2]
 492:../main.c     **** 			time = 0;
 1684              	 .loc 3 492 0
 1685 0148 204B     	 ldr r3,.L78+28
 1686 014a 0022     	 movs r2,#0
 1687 014c 1A60     	 str r2,[r3]
 493:../main.c     **** 			MOS_DOWN_State = DIGITAL_IO_GetInput(&MOS_DOWN);
 1688              	 .loc 3 493 0
 1689 014e 1948     	 ldr r0,.L78+4
 1690 0150 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 1691 0154 0346     	 mov r3,r0
 1692 0156 3B61     	 str r3,[r7,#16]
 1693              	.L72:
 1694              	.LBE10:
 479:../main.c     **** 		{
 1695              	 .loc 3 479 0
 1696 0158 3B69     	 ldr r3,[r7,#16]
 1697 015a 002B     	 cmp r3,#0
 1698 015c 03D1     	 bne .L76
 479:../main.c     **** 		{
 1699              	 .loc 3 479 0 is_stmt 0 discriminator 1
 1700 015e 164B     	 ldr r3,.L78+8
 1701 0160 1B68     	 ldr r3,[r3]
 1702 0162 002B     	 cmp r3,#0
 1703 0164 BFD1     	 bne .L77
 1704              	.L76:
 494:../main.c     **** 		}
 495:../main.c     **** 		int WindowStatePercentage = (WindowState * 10);
 1705              	 .loc 3 495 0 is_stmt 1
 1706 0166 144B     	 ldr r3,.L78+8
 1707 0168 1A68     	 ldr r2,[r3]
 1708 016a 1346     	 mov r3,r2
 1709 016c 9B00     	 lsls r3,r3,#2
 1710 016e 1344     	 add r3,r3,r2
 1711 0170 5B00     	 lsls r3,r3,#1
 1712 0172 3B60     	 str r3,[r7]
 496:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[0] = MOTOR_MODULE_ID;
 1713              	 .loc 3 496 0
 1714 0174 164B     	 ldr r3,.L78+32
 1715 0176 1B68     	 ldr r3,[r3]
 1716 0178 164A     	 ldr r2,.L78+36
 1717 017a 1268     	 ldr r2,[r2]
 1718 017c 92B2     	 uxth r2,r2
 1719 017e 1A82     	 strh r2,[r3,#16]
 497:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[1] = 0x04;	//Status update
 1720              	 .loc 3 497 0
 1721 0180 134B     	 ldr r3,.L78+32
 1722 0182 1B68     	 ldr r3,[r3]
 1723 0184 0422     	 movs r2,#4
 1724 0186 5A82     	 strh r2,[r3,#18]
 498:../main.c     **** 		React_Node_LMO_02_Config.mo_ptr->can_data_word[2] = WindowStatePercentage;
 1725              	 .loc 3 498 0
 1726 0188 114B     	 ldr r3,.L78+32
 1727 018a 1B68     	 ldr r3,[r3]
 1728 018c 3A68     	 ldr r2,[r7]
 1729 018e 92B2     	 uxth r2,r2
 1730 0190 9A82     	 strh r2,[r3,#20]
 499:../main.c     **** 		status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(React_Node_LMO_02_Config.mo_ptr);
 1731              	 .loc 3 499 0
 1732 0192 0F4B     	 ldr r3,.L78+32
 1733 0194 1B68     	 ldr r3,[r3]
 1734 0196 1846     	 mov r0,r3
 1735 0198 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 1736 019c 0346     	 mov r3,r0
 1737 019e 7B60     	 str r3,[r7,#4]
 500:../main.c     **** 		status = CAN_NODE_MO_Transmit(&React_Node_LMO_02_Config);
 1738              	 .loc 3 500 0
 1739 01a0 0B48     	 ldr r0,.L78+32
 1740 01a2 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 1741 01a6 0346     	 mov r3,r0
 1742 01a8 7B60     	 str r3,[r7,#4]
 1743              	.L63:
 1744              	.LBE9:
 501:../main.c     **** 	}
 502:../main.c     **** }
 1745              	 .loc 3 502 0
 1746 01aa 1837     	 adds r7,r7,#24
 1747              	.LCFI83:
 1748              	 .cfi_def_cfa_offset 8
 1749 01ac BD46     	 mov sp,r7
 1750              	.LCFI84:
 1751              	 .cfi_def_cfa_register 13
 1752              	 
 1753 01ae 80BD     	 pop {r7,pc}
 1754              	.L79:
 1755              	 .align 2
 1756              	.L78:
 1757 01b0 00000000 	 .word MOS_UP
 1758 01b4 00000000 	 .word MOS_DOWN
 1759 01b8 00000000 	 .word WindowState
 1760 01bc 00000000 	 .word stateTimingVariables
 1761 01c0 00000000 	 .word TIMER_Motor
 1762 01c4 00000000 	 .word PWM_Motor
 1763 01c8 00000000 	 .word Motor_Direction
 1764 01cc 00000000 	 .word time
 1765 01d0 00000000 	 .word React_Node_LMO_02_Config
 1766 01d4 00000000 	 .word MOTOR_MODULE_ID
 1767              	 .cfi_endproc
 1768              	.LFE313:
 1770              	 .text
 1771              	.Letext0:
 1772              	 .file 4 "c:\\users\\frank\\desktop\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1773              	 .file 5 "c:\\users\\frank\\desktop\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1774              	 .file 6 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 1775              	 .file 7 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc4_gpio.h"
 1776              	 .file 8 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc4_scu.h"
 1777              	 .file 9 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc_can.h"
 1778              	 .file 10 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/GLOBAL_CAN/global_can.h"
 1779              	 .file 11 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/CAN_NODE/can_node.h"
 1780              	 .file 12 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/XMCLib/inc/xmc_ccu4.h"
 1781              	 .file 13 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 1782              	 .file 14 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/PWM/pwm.h"
 1783              	 .file 15 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/TIMER/timer.h"
 1784              	 .file 16 "<built-in>"
 1785              	 .file 17 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/CMSIS/Include/cmsis_gcc.h"
 1786              	 .file 18 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/CMSIS/Include/core_cm4.h"
 1787              	 .file 19 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
 1788              	 .file 20 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 1789              	 .file 21 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/CAN_NODE/can_node_extern.h"
 1790              	 .file 22 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/PWM/PWM_Extern.h"
 1791              	 .file 23 "C:/Users/Frank/Documents/GitHub/ActiveWindow/MotorModule/Dave/Generated/TIMER/timer_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.XMC_GPIO_ToggleOutput:00000000 $t
    {standard input}:119    .text.XMC_GPIO_ToggleOutput:00000000 XMC_GPIO_ToggleOutput
    {standard input}:162    .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:166    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:210    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:214    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:254    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:258    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:297    .text.DIGITAL_IO_ToggleOutput:00000000 $t
    {standard input}:301    .text.DIGITAL_IO_ToggleOutput:00000000 DIGITAL_IO_ToggleOutput
    {standard input}:340    .text.DIGITAL_IO_GetInput:00000000 $t
    {standard input}:344    .text.DIGITAL_IO_GetInput:00000000 DIGITAL_IO_GetInput
    {standard input}:389    .data.top_button_state:00000000 top_button_state
    {standard input}:386    .data.top_button_state:00000000 $d
    {standard input}:396    .data.bottom_button_state:00000000 bottom_button_state
    {standard input}:393    .data.bottom_button_state:00000000 $d
    {standard input}:403    .data.MOTOR_MODULE_ID:00000000 MOTOR_MODULE_ID
    {standard input}:400    .data.MOTOR_MODULE_ID:00000000 $d
    {standard input}:410    .bss.isRegistered:00000000 isRegistered
    {standard input}:407    .bss.isRegistered:00000000 $d
    {standard input}:417    .bss.closedToOpenTime:00000000 closedToOpenTime
    {standard input}:414    .bss.closedToOpenTime:00000000 $d
    {standard input}:424    .bss.time:00000000 time
    {standard input}:421    .bss.time:00000000 $d
                            *COM*:00000004 WindowState
                            *COM*:0000002c stateTimingVariables
    {standard input}:429    .text.CAN0_1_IRQHandler:00000000 $t
    {standard input}:434    .text.CAN0_1_IRQHandler:00000000 CAN0_1_IRQHandler
    {standard input}:1143   .text.MoveWindow:00000000 MoveWindow
    {standard input}:665    .text.CAN0_1_IRQHandler:00000164 $d
    {standard input}:677    .text.CCU41_1_IRQHandler:00000000 $t
    {standard input}:682    .text.CCU41_1_IRQHandler:00000000 CCU41_1_IRQHandler
    {standard input}:715    .text.CCU41_1_IRQHandler:00000018 $d
    {standard input}:720    .text.main:00000000 $t
    {standard input}:725    .text.main:00000000 main
    {standard input}:759    .text.RegisterDevice:00000000 RegisterDevice
    {standard input}:826    .text.HomeWindow:00000000 HomeWindow
    {standard input}:1475   .text.ManualOverrideSwitches:00000000 ManualOverrideSwitches
    {standard input}:754    .text.RegisterDevice:00000000 $t
    {standard input}:812    .text.RegisterDevice:00000038 $d
    {standard input}:821    .text.HomeWindow:00000000 $t
    {standard input}:1412   .text.CheckBottomLimitSwitch:00000000 CheckBottomLimitSwitch
    {standard input}:1349   .text.CheckTopLimitSwitch:00000000 CheckTopLimitSwitch
    {standard input}:1110   .text.HomeWindow:00000228 $d
    {standard input}:1138   .text.MoveWindow:00000000 $t
    {standard input}:1332   .text.MoveWindow:00000104 $d
    {standard input}:1344   .text.CheckTopLimitSwitch:00000000 $t
    {standard input}:1400   .text.CheckTopLimitSwitch:00000030 $d
    {standard input}:1407   .text.CheckBottomLimitSwitch:00000000 $t
    {standard input}:1463   .text.CheckBottomLimitSwitch:00000030 $d
    {standard input}:1470   .text.ManualOverrideSwitches:00000000 $t
    {standard input}:1757   .text.ManualOverrideSwitches:000001b0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CAN_NODE_GetStatus
CAN_NODE_MO_GetStatus
CAN_NODE_MO_Receive
XMC_CAN_MO_UpdateData
CAN_NODE_MO_Transmit
React_Node
React_Node_LMO_01_Config
LED_Indicator
React_Node_LMO_02_Config
DAVE_Init
__aeabi_i2d
__aeabi_dmul
__aeabi_d2iz
TIMER_Start
PWM_Start
PWM_Stop
TIMER_Stop
TIMER_Motor
PWM_Motor
Motor_Direction
MOS_UP
MOS_DOWN
LIMIT_SWITCH_TOP
LIMIT_SWITCH_BOTTOM
